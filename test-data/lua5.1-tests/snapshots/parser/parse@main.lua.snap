---
source: src/main.rs
expression: parsed
input_file: test-data/lua5.1-tests/main.lua
---
[
    Ident(
        [
            Symbol(
                "print",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"testing lua.c options\"",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "os",
                                ),
                                Symbol(
                                    ".",
                                ),
                                Symbol(
                                    "execute",
                                ),
                                Call(
                                    [],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "~=",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "0",
                                    after_decimal: "",
                                },
                            ),
                        ),
                    ],
                ],
            ),
        ],
    ),
    Alter {
        names: [
            Ident(
                [
                    Symbol(
                        "prog",
                    ),
                ],
            ),
        ],
        values: [
            [
                Ident(
                    [
                        Symbol(
                            "os",
                        ),
                        Symbol(
                            ".",
                        ),
                        Symbol(
                            "tmpname",
                        ),
                        Call(
                            [],
                        ),
                    ],
                ),
            ],
        ],
    },
    Alter {
        names: [
            Ident(
                [
                    Symbol(
                        "otherprog",
                    ),
                ],
            ),
        ],
        values: [
            [
                Ident(
                    [
                        Symbol(
                            "os",
                        ),
                        Symbol(
                            ".",
                        ),
                        Symbol(
                            "tmpname",
                        ),
                        Call(
                            [],
                        ),
                    ],
                ),
            ],
        ],
    },
    Alter {
        names: [
            Ident(
                [
                    Symbol(
                        "out",
                    ),
                ],
            ),
        ],
        values: [
            [
                Ident(
                    [
                        Symbol(
                            "os",
                        ),
                        Symbol(
                            ".",
                        ),
                        Symbol(
                            "tmpname",
                        ),
                        Call(
                            [],
                        ),
                    ],
                ),
            ],
        ],
    },
    DoBlock(
        CodeBlock {
            start: 36,
            code: [
                Variable {
                    names: [
                        (
                            "i",
                            false,
                        ),
                    ],
                    values: [
                        [
                            Number(
                                Decimal(
                                    Decimal {
                                        before_decimal: "0",
                                        after_decimal: "",
                                    },
                                ),
                            ),
                        ],
                    ],
                },
                WhileLoop {
                    condition: [
                        Ident(
                            [
                                Symbol(
                                    "arg",
                                ),
                                Symbol(
                                    "[",
                                ),
                                Expr(
                                    [
                                        Ident(
                                            [
                                                Symbol(
                                                    "i",
                                                ),
                                            ],
                                        ),
                                    ],
                                ),
                                Symbol(
                                    "]",
                                ),
                            ],
                        ),
                    ],
                    body: CodeBlock {
                        start: 10,
                        code: [
                            Alter {
                                names: [
                                    Ident(
                                        [
                                            Symbol(
                                                "i",
                                            ),
                                        ],
                                    ),
                                ],
                                values: [
                                    [
                                        Ident(
                                            [
                                                Symbol(
                                                    "i",
                                                ),
                                            ],
                                        ),
                                        Operator(
                                            (
                                                "-",
                                                true,
                                            ),
                                        ),
                                        Number(
                                            Decimal(
                                                Decimal {
                                                    before_decimal: "1",
                                                    after_decimal: "",
                                                },
                                            ),
                                        ),
                                    ],
                                ],
                            },
                        ],
                        end: 16,
                    },
                },
                Alter {
                    names: [
                        Ident(
                            [
                                Symbol(
                                    "progname",
                                ),
                            ],
                        ),
                    ],
                    values: [
                        [
                            Symbol(
                                "'\"'",
                            ),
                            Operator(
                                (
                                    "..",
                                    true,
                                ),
                            ),
                            Ident(
                                [
                                    Symbol(
                                        "arg",
                                    ),
                                    Symbol(
                                        "[",
                                    ),
                                    Expr(
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "i",
                                                    ),
                                                ],
                                            ),
                                            Operator(
                                                (
                                                    "+",
                                                    true,
                                                ),
                                            ),
                                            Number(
                                                Decimal(
                                                    Decimal {
                                                        before_decimal: "1",
                                                        after_decimal: "",
                                                    },
                                                ),
                                            ),
                                        ],
                                    ),
                                    Symbol(
                                        "]",
                                    ),
                                ],
                            ),
                            Operator(
                                (
                                    "..",
                                    true,
                                ),
                            ),
                            Symbol(
                                "'\"'",
                            ),
                        ],
                    ],
                },
            ],
            end: 65,
        },
    ),
    Ident(
        [
            Symbol(
                "print",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "progname",
                                ),
                            ],
                        ),
                    ],
                ],
            ),
        ],
    ),
    Variable {
        names: [
            (
                "prepfile",
                false,
            ),
        ],
        values: [
            [
                Lambda {
                    args: [
                        "s",
                        "p",
                    ],
                    body: CodeBlock {
                        start: 78,
                        code: [
                            Alter {
                                names: [
                                    Ident(
                                        [
                                            Symbol(
                                                "p",
                                            ),
                                        ],
                                    ),
                                ],
                                values: [
                                    [
                                        Ident(
                                            [
                                                Symbol(
                                                    "p",
                                                ),
                                            ],
                                        ),
                                        Operator(
                                            (
                                                "or",
                                                true,
                                            ),
                                        ),
                                        Ident(
                                            [
                                                Symbol(
                                                    "prog",
                                                ),
                                            ],
                                        ),
                                    ],
                                ],
                            },
                            Ident(
                                [
                                    Symbol(
                                        "io",
                                    ),
                                    Symbol(
                                        ".",
                                    ),
                                    Symbol(
                                        "output",
                                    ),
                                    Call(
                                        [
                                            [
                                                Ident(
                                                    [
                                                        Symbol(
                                                            "p",
                                                        ),
                                                    ],
                                                ),
                                            ],
                                        ],
                                    ),
                                ],
                            ),
                            Ident(
                                [
                                    Symbol(
                                        "io",
                                    ),
                                    Symbol(
                                        ".",
                                    ),
                                    Symbol(
                                        "write",
                                    ),
                                    Call(
                                        [
                                            [
                                                Ident(
                                                    [
                                                        Symbol(
                                                            "s",
                                                        ),
                                                    ],
                                                ),
                                            ],
                                        ],
                                    ),
                                ],
                            ),
                            Ident(
                                [
                                    Symbol(
                                        "assert",
                                    ),
                                    Call(
                                        [
                                            [
                                                Ident(
                                                    [
                                                        Symbol(
                                                            "io",
                                                        ),
                                                        Symbol(
                                                            ".",
                                                        ),
                                                        Symbol(
                                                            "close",
                                                        ),
                                                        Call(
                                                            [],
                                                        ),
                                                    ],
                                                ),
                                            ],
                                        ],
                                    ),
                                ],
                            ),
                        ],
                        end: 104,
                    },
                },
            ],
        ],
    },
    Function {
        local: false,
        name: [
            Symbol(
                "checkout",
            ),
        ],
        args: [
            "s",
        ],
        body: CodeBlock {
            start: 109,
            code: [
                Ident(
                    [
                        Symbol(
                            "io",
                        ),
                        Symbol(
                            ".",
                        ),
                        Symbol(
                            "input",
                        ),
                        Call(
                            [
                                [
                                    Ident(
                                        [
                                            Symbol(
                                                "out",
                                            ),
                                        ],
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
                Variable {
                    names: [
                        (
                            "t",
                            false,
                        ),
                    ],
                    values: [
                        [
                            Ident(
                                [
                                    Symbol(
                                        "io",
                                    ),
                                    Symbol(
                                        ".",
                                    ),
                                    Symbol(
                                        "read",
                                    ),
                                    Call(
                                        [
                                            [
                                                Symbol(
                                                    "\"*a\"",
                                                ),
                                            ],
                                        ],
                                    ),
                                ],
                            ),
                        ],
                    ],
                },
                Ident(
                    [
                        Symbol(
                            "io",
                        ),
                        Symbol(
                            ".",
                        ),
                        Symbol(
                            "input",
                        ),
                        Call(
                            [],
                        ),
                        Symbol(
                            ":",
                        ),
                        Symbol(
                            "close",
                        ),
                        Call(
                            [],
                        ),
                    ],
                ),
                Ident(
                    [
                        Symbol(
                            "assert",
                        ),
                        Call(
                            [
                                [
                                    Ident(
                                        [
                                            Symbol(
                                                "os",
                                            ),
                                            Symbol(
                                                ".",
                                            ),
                                            Symbol(
                                                "remove",
                                            ),
                                            Call(
                                                [
                                                    [
                                                        Ident(
                                                            [
                                                                Symbol(
                                                                    "out",
                                                                ),
                                                            ],
                                                        ),
                                                    ],
                                                ],
                                            ),
                                        ],
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
                IfStatement {
                    condition: [
                        Ident(
                            [
                                Symbol(
                                    "s",
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "~=",
                                true,
                            ),
                        ),
                        Ident(
                            [
                                Symbol(
                                    "t",
                                ),
                            ],
                        ),
                    ],
                    body: CodeBlock {
                        start: 38,
                        code: [
                            Ident(
                                [
                                    Symbol(
                                        "print",
                                    ),
                                    Call(
                                        [
                                            [
                                                Ident(
                                                    [
                                                        Symbol(
                                                            "string",
                                                        ),
                                                        Symbol(
                                                            ".",
                                                        ),
                                                        Symbol(
                                                            "format",
                                                        ),
                                                        Call(
                                                            [
                                                                [
                                                                    Symbol(
                                                                        "\"'%s' - '%s'\\n\"",
                                                                    ),
                                                                ],
                                                                [
                                                                    Ident(
                                                                        [
                                                                            Symbol(
                                                                                "s",
                                                                            ),
                                                                        ],
                                                                    ),
                                                                ],
                                                                [
                                                                    Ident(
                                                                        [
                                                                            Symbol(
                                                                                "t",
                                                                            ),
                                                                        ],
                                                                    ),
                                                                ],
                                                            ],
                                                        ),
                                                    ],
                                                ),
                                            ],
                                        ],
                                    ),
                                ],
                            ),
                        ],
                        end: 52,
                    },
                    next: None,
                },
                Ident(
                    [
                        Symbol(
                            "assert",
                        ),
                        Call(
                            [
                                [
                                    Ident(
                                        [
                                            Symbol(
                                                "s",
                                            ),
                                        ],
                                    ),
                                    Operator(
                                        (
                                            "==",
                                            true,
                                        ),
                                    ),
                                    Ident(
                                        [
                                            Symbol(
                                                "t",
                                            ),
                                        ],
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
                Return(
                    Some(
                        [
                            [
                                Ident(
                                    [
                                        Symbol(
                                            "t",
                                        ),
                                    ],
                                ),
                            ],
                        ],
                    ),
                ),
            ],
            end: 170,
        },
    },
    Function {
        local: false,
        name: [
            Symbol(
                "auxrun",
            ),
        ],
        args: [
            "...",
        ],
        body: CodeBlock {
            start: 175,
            code: [
                Variable {
                    names: [
                        (
                            "s",
                            false,
                        ),
                    ],
                    values: [
                        [
                            Ident(
                                [
                                    Symbol(
                                        "string",
                                    ),
                                    Symbol(
                                        ".",
                                    ),
                                    Symbol(
                                        "format",
                                    ),
                                    Call(
                                        [
                                            [
                                                Symbol(
                                                    "...",
                                                ),
                                            ],
                                        ],
                                    ),
                                ],
                            ),
                        ],
                    ],
                },
                Alter {
                    names: [
                        Ident(
                            [
                                Symbol(
                                    "s",
                                ),
                            ],
                        ),
                    ],
                    values: [
                        [
                            Ident(
                                [
                                    Symbol(
                                        "string",
                                    ),
                                    Symbol(
                                        ".",
                                    ),
                                    Symbol(
                                        "gsub",
                                    ),
                                    Call(
                                        [
                                            [
                                                Ident(
                                                    [
                                                        Symbol(
                                                            "s",
                                                        ),
                                                    ],
                                                ),
                                            ],
                                            [
                                                Symbol(
                                                    "\"lua\"",
                                                ),
                                            ],
                                            [
                                                Ident(
                                                    [
                                                        Symbol(
                                                            "progname",
                                                        ),
                                                    ],
                                                ),
                                            ],
                                            [
                                                Number(
                                                    Decimal(
                                                        Decimal {
                                                            before_decimal: "1",
                                                            after_decimal: "",
                                                        },
                                                    ),
                                                ),
                                            ],
                                        ],
                                    ),
                                ],
                            ),
                        ],
                    ],
                },
                Return(
                    Some(
                        [
                            [
                                Ident(
                                    [
                                        Symbol(
                                            "os",
                                        ),
                                        Symbol(
                                            ".",
                                        ),
                                        Symbol(
                                            "execute",
                                        ),
                                        Call(
                                            [
                                                [
                                                    Ident(
                                                        [
                                                            Symbol(
                                                                "s",
                                                            ),
                                                        ],
                                                    ),
                                                ],
                                            ],
                                        ),
                                    ],
                                ),
                            ],
                        ],
                    ),
                ),
            ],
            end: 206,
        },
    },
    Function {
        local: false,
        name: [
            Symbol(
                "RUN",
            ),
        ],
        args: [
            "...",
        ],
        body: CodeBlock {
            start: 211,
            code: [
                Ident(
                    [
                        Symbol(
                            "assert",
                        ),
                        Call(
                            [
                                [
                                    Ident(
                                        [
                                            Symbol(
                                                "auxrun",
                                            ),
                                            Call(
                                                [
                                                    [
                                                        Symbol(
                                                            "...",
                                                        ),
                                                    ],
                                                ],
                                            ),
                                        ],
                                    ),
                                    Operator(
                                        (
                                            "==",
                                            true,
                                        ),
                                    ),
                                    Number(
                                        Decimal(
                                            Decimal {
                                                before_decimal: "0",
                                                after_decimal: "",
                                            },
                                        ),
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
            ],
            end: 221,
        },
    },
    Function {
        local: false,
        name: [
            Symbol(
                "NoRun",
            ),
        ],
        args: [
            "...",
        ],
        body: CodeBlock {
            start: 226,
            code: [
                Ident(
                    [
                        Symbol(
                            "print",
                        ),
                        Call(
                            [
                                [
                                    Symbol(
                                        "\"\\n(the next error is expected by the test)\"",
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
                Ident(
                    [
                        Symbol(
                            "assert",
                        ),
                        Call(
                            [
                                [
                                    Ident(
                                        [
                                            Symbol(
                                                "auxrun",
                                            ),
                                            Call(
                                                [
                                                    [
                                                        Symbol(
                                                            "...",
                                                        ),
                                                    ],
                                                ],
                                            ),
                                        ],
                                    ),
                                    Operator(
                                        (
                                            "~=",
                                            true,
                                        ),
                                    ),
                                    Number(
                                        Decimal(
                                            Decimal {
                                                before_decimal: "0",
                                                after_decimal: "",
                                            },
                                        ),
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
            ],
            end: 240,
        },
    },
    Ident(
        [
            Symbol(
                "prepfile",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"print(1); a=2\"",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "prepfile",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"print(a)\"",
                        ),
                    ],
                    [
                        Ident(
                            [
                                Symbol(
                                    "otherprog",
                                ),
                            ],
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "RUN",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"lua -l %s -l%s -lstring -l io %s > %s\"",
                        ),
                    ],
                    [
                        Ident(
                            [
                                Symbol(
                                    "prog",
                                ),
                            ],
                        ),
                    ],
                    [
                        Ident(
                            [
                                Symbol(
                                    "otherprog",
                                ),
                            ],
                        ),
                    ],
                    [
                        Ident(
                            [
                                Symbol(
                                    "otherprog",
                                ),
                            ],
                        ),
                    ],
                    [
                        Ident(
                            [
                                Symbol(
                                    "out",
                                ),
                            ],
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "checkout",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"1\\n2\\n2\\n\"",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Variable {
        names: [
            (
                "a",
                false,
            ),
        ],
        values: [
            [
                MultilineString(
                    "[[\n  assert(table.getn(arg) == 3 and arg[1] == 'a' and\n         arg[2] == 'b' and arg[3] == 'c')\n  assert(arg[-1] == '--' and arg[-2] == \"-e \" and arg[-3] == %s)\n  assert(arg[4] == nil and arg[-4] == nil)\n  local a, b, c = ...\n  assert(... == 'a' and a == 'a' and b == 'b' and c == 'c')\n]]",
                ),
            ],
        ],
    },
    Alter {
        names: [
            Ident(
                [
                    Symbol(
                        "a",
                    ),
                ],
            ),
        ],
        values: [
            [
                Ident(
                    [
                        Symbol(
                            "string",
                        ),
                        Symbol(
                            ".",
                        ),
                        Symbol(
                            "format",
                        ),
                        Call(
                            [
                                [
                                    Ident(
                                        [
                                            Symbol(
                                                "a",
                                            ),
                                        ],
                                    ),
                                ],
                                [
                                    Ident(
                                        [
                                            Symbol(
                                                "progname",
                                            ),
                                        ],
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
            ],
        ],
    },
    Ident(
        [
            Symbol(
                "prepfile",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "a",
                                ),
                            ],
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "RUN",
            ),
            Call(
                [
                    [
                        Symbol(
                            "'lua \"-e \" -- %s a b c'",
                        ),
                    ],
                    [
                        Ident(
                            [
                                Symbol(
                                    "prog",
                                ),
                            ],
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "prepfile",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"assert(arg==nil)\"",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "prepfile",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"assert(arg)\"",
                        ),
                    ],
                    [
                        Ident(
                            [
                                Symbol(
                                    "otherprog",
                                ),
                            ],
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "RUN",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"lua -l%s - < %s\"",
                        ),
                    ],
                    [
                        Ident(
                            [
                                Symbol(
                                    "prog",
                                ),
                            ],
                        ),
                    ],
                    [
                        Ident(
                            [
                                Symbol(
                                    "otherprog",
                                ),
                            ],
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "prepfile",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"\"",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "RUN",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"lua - < %s > %s\"",
                        ),
                    ],
                    [
                        Ident(
                            [
                                Symbol(
                                    "prog",
                                ),
                            ],
                        ),
                    ],
                    [
                        Ident(
                            [
                                Symbol(
                                    "out",
                                ),
                            ],
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "checkout",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"\"",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "prepfile",
            ),
            Call(
                [
                    [
                        Symbol(
                            "[[print(({...})[30])]]",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "RUN",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"lua %s %s > %s\"",
                        ),
                    ],
                    [
                        Ident(
                            [
                                Symbol(
                                    "prog",
                                ),
                            ],
                        ),
                    ],
                    [
                        Ident(
                            [
                                Symbol(
                                    "string",
                                ),
                                Symbol(
                                    ".",
                                ),
                                Symbol(
                                    "rep",
                                ),
                                Call(
                                    [
                                        [
                                            Symbol(
                                                "\" a\"",
                                            ),
                                        ],
                                        [
                                            Number(
                                                Decimal(
                                                    Decimal {
                                                        before_decimal: "30",
                                                        after_decimal: "",
                                                    },
                                                ),
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                    ],
                    [
                        Ident(
                            [
                                Symbol(
                                    "out",
                                ),
                            ],
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "checkout",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"a\\n\"",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "RUN",
            ),
            Call(
                [
                    [
                        MultilineString(
                            "[[lua \"-eprint(1)\" -ea=3 -e \"print(a)\" > %s]]",
                        ),
                    ],
                    [
                        Ident(
                            [
                                Symbol(
                                    "out",
                                ),
                            ],
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "checkout",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"1\\n3\\n\"",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "prepfile",
            ),
            Call(
                [
                    [
                        Symbol(
                            "[[\n  print(\n1, a\n)\n]]",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "RUN",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"lua - < %s > %s\"",
                        ),
                    ],
                    [
                        Ident(
                            [
                                Symbol(
                                    "prog",
                                ),
                            ],
                        ),
                    ],
                    [
                        Ident(
                            [
                                Symbol(
                                    "out",
                                ),
                            ],
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "checkout",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"1\\tnil\\n\"",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "prepfile",
            ),
            Call(
                [
                    [
                        Symbol(
                            "[[\n= (6*2-6) -- ===\na \n= 10\nprint(a)\n= a]]",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "RUN",
            ),
            Call(
                [
                    [
                        MultilineString(
                            "[[lua -e\"_PROMPT='' _PROMPT2=''\" -i < %s > %s]]",
                        ),
                    ],
                    [
                        Ident(
                            [
                                Symbol(
                                    "prog",
                                ),
                            ],
                        ),
                    ],
                    [
                        Ident(
                            [
                                Symbol(
                                    "out",
                                ),
                            ],
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "checkout",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"6\\n10\\n10\\n\\n\"",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "prepfile",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"a = [[b\\nc\\nd\\ne]]\\n=a\"",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "print",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "prog",
                                ),
                            ],
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "RUN",
            ),
            Call(
                [
                    [
                        MultilineString(
                            "[[lua -e\"_PROMPT='' _PROMPT2=''\" -i < %s > %s]]",
                        ),
                    ],
                    [
                        Ident(
                            [
                                Symbol(
                                    "prog",
                                ),
                            ],
                        ),
                    ],
                    [
                        Ident(
                            [
                                Symbol(
                                    "out",
                                ),
                            ],
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "checkout",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"b\\nc\\nd\\ne\\n\\n\"",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Alter {
        names: [
            Ident(
                [
                    Symbol(
                        "prompt",
                    ),
                ],
            ),
        ],
        values: [
            [
                Symbol(
                    "\"alo\"",
                ),
            ],
        ],
    },
    Ident(
        [
            Symbol(
                "prepfile",
            ),
            Call(
                [
                    [
                        Symbol(
                            "[[ --\na = 2\n]]",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "RUN",
            ),
            Call(
                [
                    [
                        MultilineString(
                            "[[lua \"-e_PROMPT='%s'\" -i < %s > %s]]",
                        ),
                    ],
                    [
                        Ident(
                            [
                                Symbol(
                                    "prompt",
                                ),
                            ],
                        ),
                    ],
                    [
                        Ident(
                            [
                                Symbol(
                                    "prog",
                                ),
                            ],
                        ),
                    ],
                    [
                        Ident(
                            [
                                Symbol(
                                    "out",
                                ),
                            ],
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "checkout",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "string",
                                ),
                                Symbol(
                                    ".",
                                ),
                                Symbol(
                                    "rep",
                                ),
                                Call(
                                    [
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "prompt",
                                                    ),
                                                ],
                                            ),
                                        ],
                                        [
                                            Number(
                                                Decimal(
                                                    Decimal {
                                                        before_decimal: "3",
                                                        after_decimal: "",
                                                    },
                                                ),
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "..",
                                true,
                            ),
                        ),
                        Symbol(
                            "\"\\n\"",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Alter {
        names: [
            Ident(
                [
                    Symbol(
                        "s",
                    ),
                ],
            ),
        ],
        values: [
            [
                MultilineString(
                    "[=[ -- \nfunction f ( x ) \n  local a = [[\nxuxu\n]]\n  local b = \"\\\nxuxu\\n\"\n  if x == 11 then return 1 , 2 end  --[[ test multiple returns ]]\n  return x + 1 \n  --\\\\\nend\n=( f( 10 ) )\nassert( a == b )\n=f( 11 )  ]=]",
                ),
            ],
        ],
    },
    Alter {
        names: [
            Ident(
                [
                    Symbol(
                        "s",
                    ),
                ],
            ),
        ],
        values: [
            [
                Ident(
                    [
                        Symbol(
                            "string",
                        ),
                        Symbol(
                            ".",
                        ),
                        Symbol(
                            "gsub",
                        ),
                        Call(
                            [
                                [
                                    Ident(
                                        [
                                            Symbol(
                                                "s",
                                            ),
                                        ],
                                    ),
                                ],
                                [
                                    Symbol(
                                        "' '",
                                    ),
                                ],
                                [
                                    Symbol(
                                        "'\\n\\n'",
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
            ],
        ],
    },
    Ident(
        [
            Symbol(
                "prepfile",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "s",
                                ),
                            ],
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "RUN",
            ),
            Call(
                [
                    [
                        MultilineString(
                            "[[lua -e\"_PROMPT='' _PROMPT2=''\" -i < %s > %s]]",
                        ),
                    ],
                    [
                        Ident(
                            [
                                Symbol(
                                    "prog",
                                ),
                            ],
                        ),
                    ],
                    [
                        Ident(
                            [
                                Symbol(
                                    "out",
                                ),
                            ],
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "checkout",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"11\\n1\\t2\\n\\n\"",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "prepfile",
            ),
            Call(
                [
                    [
                        Symbol(
                            "[[#comment in 1st line without \\n at the end]]",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "RUN",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"lua %s\"",
                        ),
                    ],
                    [
                        Ident(
                            [
                                Symbol(
                                    "prog",
                                ),
                            ],
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "prepfile",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"#comment with a binary file\\n\"",
                        ),
                        Operator(
                            (
                                "..",
                                true,
                            ),
                        ),
                        Ident(
                            [
                                Symbol(
                                    "string",
                                ),
                                Symbol(
                                    ".",
                                ),
                                Symbol(
                                    "dump",
                                ),
                                Call(
                                    [
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "loadstring",
                                                    ),
                                                    Call(
                                                        [
                                                            [
                                                                Symbol(
                                                                    "\"print(1)\"",
                                                                ),
                                                            ],
                                                        ],
                                                    ),
                                                ],
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "RUN",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"lua %s > %s\"",
                        ),
                    ],
                    [
                        Ident(
                            [
                                Symbol(
                                    "prog",
                                ),
                            ],
                        ),
                    ],
                    [
                        Ident(
                            [
                                Symbol(
                                    "out",
                                ),
                            ],
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "checkout",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"1\\n\"",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "prepfile",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"#comment with a binary file\\r\\n\"",
                        ),
                        Operator(
                            (
                                "..",
                                true,
                            ),
                        ),
                        Ident(
                            [
                                Symbol(
                                    "string",
                                ),
                                Symbol(
                                    ".",
                                ),
                                Symbol(
                                    "dump",
                                ),
                                Call(
                                    [
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "loadstring",
                                                    ),
                                                    Call(
                                                        [
                                                            [
                                                                Symbol(
                                                                    "\"print(1)\"",
                                                                ),
                                                            ],
                                                        ],
                                                    ),
                                                ],
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "RUN",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"lua %s > %s\"",
                        ),
                    ],
                    [
                        Ident(
                            [
                                Symbol(
                                    "prog",
                                ),
                            ],
                        ),
                    ],
                    [
                        Ident(
                            [
                                Symbol(
                                    "out",
                                ),
                            ],
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "checkout",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"1\\n\"",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "prepfile",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "string",
                                ),
                                Symbol(
                                    ".",
                                ),
                                Symbol(
                                    "format",
                                ),
                                Call(
                                    [
                                        [
                                            MultilineString(
                                                "[[io.output(%q); io.write('alo')]]",
                                            ),
                                        ],
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "out",
                                                    ),
                                                ],
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "RUN",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"lua %s\"",
                        ),
                    ],
                    [
                        Ident(
                            [
                                Symbol(
                                    "prog",
                                ),
                            ],
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "checkout",
            ),
            Call(
                [
                    [
                        Symbol(
                            "'alo'",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "os",
                                ),
                                Symbol(
                                    ".",
                                ),
                                Symbol(
                                    "remove",
                                ),
                                Call(
                                    [
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "prog",
                                                    ),
                                                ],
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "os",
                                ),
                                Symbol(
                                    ".",
                                ),
                                Symbol(
                                    "remove",
                                ),
                                Call(
                                    [
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "otherprog",
                                                    ),
                                                ],
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Operator(
                            (
                                "not",
                                false,
                            ),
                        ),
                        Ident(
                            [
                                Symbol(
                                    "os",
                                ),
                                Symbol(
                                    ".",
                                ),
                                Symbol(
                                    "remove",
                                ),
                                Call(
                                    [
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "out",
                                                    ),
                                                ],
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "RUN",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"lua -v\"",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "NoRun",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"lua -h\"",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "NoRun",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"lua -e\"",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "NoRun",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"lua -e a\"",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "NoRun",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"lua -f\"",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "print",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"OK\"",
                        ),
                    ],
                ],
            ),
        ],
    ),
]
