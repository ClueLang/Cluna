---
source: src/main.rs
expression: scanned
input_file: test-data/lua5.1-tests/files.lua
---
[
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "print",
        ),
        line: 1,
        column: 5,
        span: 0..5,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 1,
        column: 6,
        span: 5..6,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'testing i/o'",
        ),
        line: 1,
        column: 19,
        span: 6..19,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 1,
        column: 20,
        span: 19..20,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 3,
        column: 7,
        span: 22..28,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 3,
        column: 8,
        span: 28..29,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 3,
        column: 10,
        span: 29..31,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 3,
        column: 11,
        span: 31..32,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "input",
        ),
        line: 3,
        column: 16,
        span: 32..37,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 3,
        column: 17,
        span: 37..38,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 3,
        column: 19,
        span: 38..40,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 3,
        column: 20,
        span: 40..41,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "stdin",
        ),
        line: 3,
        column: 25,
        span: 41..46,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 3,
        column: 26,
        span: 46..47,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 3,
        column: 29,
        span: 48..50,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 3,
        column: 32,
        span: 51..53,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 3,
        column: 33,
        span: 53..54,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "stdin",
        ),
        line: 3,
        column: 38,
        span: 54..59,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 3,
        column: 39,
        span: 59..60,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 4,
        column: 7,
        span: 61..67,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 4,
        column: 8,
        span: 67..68,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 4,
        column: 10,
        span: 68..70,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 4,
        column: 11,
        span: 70..71,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "output",
        ),
        line: 4,
        column: 17,
        span: 71..77,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 4,
        column: 18,
        span: 77..78,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 4,
        column: 20,
        span: 78..80,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 4,
        column: 21,
        span: 80..81,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "stdout",
        ),
        line: 4,
        column: 27,
        span: 81..87,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 4,
        column: 28,
        span: 87..88,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 4,
        column: 31,
        span: 89..91,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 4,
        column: 34,
        span: 92..94,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 4,
        column: 35,
        span: 94..95,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "stdout",
        ),
        line: 4,
        column: 41,
        span: 95..101,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 4,
        column: 42,
        span: 101..102,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 7,
        column: 7,
        span: 105..111,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 7,
        column: 8,
        span: 111..112,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "type",
        ),
        line: 7,
        column: 12,
        span: 112..116,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 7,
        column: 13,
        span: 116..117,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 7,
        column: 15,
        span: 117..119,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 7,
        column: 16,
        span: 119..120,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "input",
        ),
        line: 7,
        column: 21,
        span: 120..125,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 7,
        column: 22,
        span: 125..126,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 7,
        column: 23,
        span: 126..127,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 7,
        column: 24,
        span: 127..128,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 7,
        column: 27,
        span: 129..131,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"userdata\"",
        ),
        line: 7,
        column: 38,
        span: 132..142,
    },
    Token {
        kind: And,
        lexeme: Symbol(
            "and",
        ),
        line: 7,
        column: 42,
        span: 143..146,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 7,
        column: 45,
        span: 147..149,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 7,
        column: 46,
        span: 149..150,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "type",
        ),
        line: 7,
        column: 50,
        span: 150..154,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 7,
        column: 51,
        span: 154..155,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 7,
        column: 53,
        span: 155..157,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 7,
        column: 54,
        span: 157..158,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "output",
        ),
        line: 7,
        column: 60,
        span: 158..164,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 7,
        column: 61,
        span: 164..165,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 7,
        column: 62,
        span: 165..166,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 7,
        column: 63,
        span: 166..167,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 7,
        column: 66,
        span: 168..170,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"file\"",
        ),
        line: 7,
        column: 73,
        span: 171..177,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 7,
        column: 74,
        span: 177..178,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 8,
        column: 7,
        span: 179..185,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 8,
        column: 8,
        span: 185..186,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 8,
        column: 10,
        span: 186..188,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 8,
        column: 11,
        span: 188..189,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "type",
        ),
        line: 8,
        column: 15,
        span: 189..193,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 8,
        column: 16,
        span: 193..194,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "8",
                    after_decimal: "",
                },
            ),
        ),
        line: 8,
        column: 17,
        span: 193..195,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 8,
        column: 18,
        span: 195..196,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 8,
        column: 21,
        span: 197..199,
    },
    Token {
        kind: Nil,
        lexeme: Symbol(
            "nil",
        ),
        line: 8,
        column: 25,
        span: 200..203,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 8,
        column: 26,
        span: 203..204,
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        line: 9,
        column: 6,
        span: 205..210,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 9,
        column: 8,
        span: 211..212,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 9,
        column: 10,
        span: 213..214,
    },
    Token {
        kind: LeftBrace,
        lexeme: Symbol(
            "{",
        ),
        line: 9,
        column: 12,
        span: 215..216,
    },
    Token {
        kind: RightBrace,
        lexeme: Symbol(
            "}",
        ),
        line: 9,
        column: 13,
        span: 216..217,
    },
    Token {
        kind: Semicolon,
        lexeme: Symbol(
            ";",
        ),
        line: 9,
        column: 14,
        span: 217..218,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "setmetatable",
        ),
        line: 10,
        column: 13,
        span: 219..231,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 10,
        column: 14,
        span: 231..232,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 10,
        column: 15,
        span: 232..233,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 10,
        column: 16,
        span: 233..234,
    },
    Token {
        kind: LeftBrace,
        lexeme: Symbol(
            "{",
        ),
        line: 10,
        column: 18,
        span: 235..236,
    },
    Token {
        kind: RightBrace,
        lexeme: Symbol(
            "}",
        ),
        line: 10,
        column: 19,
        span: 236..237,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 10,
        column: 20,
        span: 237..238,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 11,
        column: 7,
        span: 239..245,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 11,
        column: 8,
        span: 245..246,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 11,
        column: 10,
        span: 246..248,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 11,
        column: 11,
        span: 248..249,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "type",
        ),
        line: 11,
        column: 15,
        span: 249..253,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 11,
        column: 16,
        span: 253..254,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 11,
        column: 17,
        span: 254..255,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 11,
        column: 18,
        span: 255..256,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 11,
        column: 21,
        span: 257..259,
    },
    Token {
        kind: Nil,
        lexeme: Symbol(
            "nil",
        ),
        line: 11,
        column: 25,
        span: 260..263,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 11,
        column: 26,
        span: 263..264,
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        line: 13,
        column: 6,
        span: 266..271,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 13,
        column: 8,
        span: 272..273,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 13,
        column: 9,
        span: 273..274,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "b",
        ),
        line: 13,
        column: 11,
        span: 275..276,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 13,
        column: 12,
        span: 276..277,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "c",
        ),
        line: 13,
        column: 14,
        span: 278..279,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 13,
        column: 16,
        span: 280..281,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 13,
        column: 19,
        span: 282..284,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 13,
        column: 20,
        span: 284..285,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "open",
        ),
        line: 13,
        column: 24,
        span: 285..289,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 13,
        column: 25,
        span: 289..290,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'xuxu_nao_existe'",
        ),
        line: 13,
        column: 42,
        span: 290..307,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 13,
        column: 43,
        span: 307..308,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 14,
        column: 7,
        span: 309..315,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 14,
        column: 8,
        span: 315..316,
    },
    Token {
        kind: Not,
        lexeme: Symbol(
            "not",
        ),
        line: 14,
        column: 11,
        span: 316..319,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 14,
        column: 13,
        span: 320..321,
    },
    Token {
        kind: And,
        lexeme: Symbol(
            "and",
        ),
        line: 14,
        column: 17,
        span: 322..325,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "type",
        ),
        line: 14,
        column: 22,
        span: 326..330,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 14,
        column: 23,
        span: 330..331,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "b",
        ),
        line: 14,
        column: 24,
        span: 331..332,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 14,
        column: 25,
        span: 332..333,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 14,
        column: 28,
        span: 334..336,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"string\"",
        ),
        line: 14,
        column: 37,
        span: 337..345,
    },
    Token {
        kind: And,
        lexeme: Symbol(
            "and",
        ),
        line: 14,
        column: 41,
        span: 346..349,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "type",
        ),
        line: 14,
        column: 46,
        span: 350..354,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 14,
        column: 47,
        span: 354..355,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "c",
        ),
        line: 14,
        column: 48,
        span: 355..356,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 14,
        column: 49,
        span: 356..357,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 14,
        column: 52,
        span: 358..360,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"number\"",
        ),
        line: 14,
        column: 61,
        span: 361..369,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 14,
        column: 62,
        span: 369..370,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 16,
        column: 2,
        span: 372..373,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 16,
        column: 3,
        span: 373..374,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "b",
        ),
        line: 16,
        column: 5,
        span: 375..376,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 16,
        column: 6,
        span: 376..377,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "c",
        ),
        line: 16,
        column: 8,
        span: 378..379,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 16,
        column: 10,
        span: 380..381,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 16,
        column: 13,
        span: 382..384,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 16,
        column: 14,
        span: 384..385,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "open",
        ),
        line: 16,
        column: 18,
        span: 385..389,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 16,
        column: 19,
        span: 389..390,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'/a/b/c/d'",
        ),
        line: 16,
        column: 29,
        span: 390..400,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 16,
        column: 30,
        span: 400..401,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'w'",
        ),
        line: 16,
        column: 34,
        span: 402..405,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 16,
        column: 35,
        span: 405..406,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 17,
        column: 7,
        span: 407..413,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 17,
        column: 8,
        span: 413..414,
    },
    Token {
        kind: Not,
        lexeme: Symbol(
            "not",
        ),
        line: 17,
        column: 11,
        span: 414..417,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 17,
        column: 13,
        span: 418..419,
    },
    Token {
        kind: And,
        lexeme: Symbol(
            "and",
        ),
        line: 17,
        column: 17,
        span: 420..423,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "type",
        ),
        line: 17,
        column: 22,
        span: 424..428,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 17,
        column: 23,
        span: 428..429,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "b",
        ),
        line: 17,
        column: 24,
        span: 429..430,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 17,
        column: 25,
        span: 430..431,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 17,
        column: 28,
        span: 432..434,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"string\"",
        ),
        line: 17,
        column: 37,
        span: 435..443,
    },
    Token {
        kind: And,
        lexeme: Symbol(
            "and",
        ),
        line: 17,
        column: 41,
        span: 444..447,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "type",
        ),
        line: 17,
        column: 46,
        span: 448..452,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 17,
        column: 47,
        span: 452..453,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "c",
        ),
        line: 17,
        column: 48,
        span: 453..454,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 17,
        column: 49,
        span: 454..455,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 17,
        column: 52,
        span: 456..458,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"number\"",
        ),
        line: 17,
        column: 61,
        span: 459..467,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 17,
        column: 62,
        span: 467..468,
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        line: 19,
        column: 6,
        span: 470..475,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "file",
        ),
        line: 19,
        column: 11,
        span: 476..480,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 19,
        column: 13,
        span: 481..482,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "os",
        ),
        line: 19,
        column: 16,
        span: 483..485,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 19,
        column: 17,
        span: 485..486,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "tmpname",
        ),
        line: 19,
        column: 24,
        span: 486..493,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 19,
        column: 25,
        span: 493..494,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 19,
        column: 26,
        span: 494..495,
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        line: 20,
        column: 6,
        span: 496..501,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "otherfile",
        ),
        line: 20,
        column: 16,
        span: 502..511,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 20,
        column: 18,
        span: 512..513,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "os",
        ),
        line: 20,
        column: 21,
        span: 514..516,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 20,
        column: 22,
        span: 516..517,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "tmpname",
        ),
        line: 20,
        column: 29,
        span: 517..524,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 20,
        column: 30,
        span: 524..525,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 20,
        column: 31,
        span: 525..526,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 22,
        column: 7,
        span: 528..534,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 22,
        column: 8,
        span: 534..535,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "os",
        ),
        line: 22,
        column: 10,
        span: 535..537,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 22,
        column: 11,
        span: 537..538,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "setlocale",
        ),
        line: 22,
        column: 20,
        span: 538..547,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 22,
        column: 21,
        span: 547..548,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'C'",
        ),
        line: 22,
        column: 24,
        span: 548..551,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 22,
        column: 25,
        span: 551..552,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'all'",
        ),
        line: 22,
        column: 31,
        span: 553..558,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 22,
        column: 32,
        span: 558..559,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 22,
        column: 33,
        span: 559..560,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 24,
        column: 3,
        span: 562..564,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 24,
        column: 4,
        span: 564..565,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "input",
        ),
        line: 24,
        column: 9,
        span: 565..570,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 24,
        column: 10,
        span: 570..571,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 24,
        column: 12,
        span: 571..573,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 24,
        column: 13,
        span: 573..574,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "stdin",
        ),
        line: 24,
        column: 18,
        span: 574..579,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 24,
        column: 19,
        span: 579..580,
    },
    Token {
        kind: Semicolon,
        lexeme: Symbol(
            ";",
        ),
        line: 24,
        column: 20,
        span: 580..581,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 25,
        column: 3,
        span: 582..584,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 25,
        column: 4,
        span: 584..585,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "output",
        ),
        line: 25,
        column: 10,
        span: 585..591,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 25,
        column: 11,
        span: 591..592,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 25,
        column: 13,
        span: 592..594,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 25,
        column: 14,
        span: 594..595,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "stdout",
        ),
        line: 25,
        column: 20,
        span: 595..601,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 25,
        column: 21,
        span: 601..602,
    },
    Token {
        kind: Semicolon,
        lexeme: Symbol(
            ";",
        ),
        line: 25,
        column: 22,
        span: 602..603,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "os",
        ),
        line: 27,
        column: 3,
        span: 605..607,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 27,
        column: 4,
        span: 607..608,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "remove",
        ),
        line: 27,
        column: 10,
        span: 608..614,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 27,
        column: 11,
        span: 614..615,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "file",
        ),
        line: 27,
        column: 15,
        span: 615..619,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 27,
        column: 16,
        span: 619..620,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 28,
        column: 7,
        span: 621..627,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 28,
        column: 8,
        span: 627..628,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "loadfile",
        ),
        line: 28,
        column: 16,
        span: 628..636,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 28,
        column: 17,
        span: 636..637,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "file",
        ),
        line: 28,
        column: 21,
        span: 637..641,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 28,
        column: 22,
        span: 641..642,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 28,
        column: 25,
        span: 643..645,
    },
    Token {
        kind: Nil,
        lexeme: Symbol(
            "nil",
        ),
        line: 28,
        column: 29,
        span: 646..649,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 28,
        column: 30,
        span: 649..650,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 29,
        column: 7,
        span: 651..657,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 29,
        column: 8,
        span: 657..658,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 29,
        column: 10,
        span: 658..660,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 29,
        column: 11,
        span: 660..661,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "open",
        ),
        line: 29,
        column: 15,
        span: 661..665,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 29,
        column: 16,
        span: 665..666,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "file",
        ),
        line: 29,
        column: 20,
        span: 666..670,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 29,
        column: 21,
        span: 670..671,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 29,
        column: 24,
        span: 672..674,
    },
    Token {
        kind: Nil,
        lexeme: Symbol(
            "nil",
        ),
        line: 29,
        column: 28,
        span: 675..678,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 29,
        column: 29,
        span: 678..679,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 30,
        column: 3,
        span: 680..682,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 30,
        column: 4,
        span: 682..683,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "output",
        ),
        line: 30,
        column: 10,
        span: 683..689,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 30,
        column: 11,
        span: 689..690,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "file",
        ),
        line: 30,
        column: 15,
        span: 690..694,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 30,
        column: 16,
        span: 694..695,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 31,
        column: 7,
        span: 696..702,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 31,
        column: 8,
        span: 702..703,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 31,
        column: 10,
        span: 703..705,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 31,
        column: 11,
        span: 705..706,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "output",
        ),
        line: 31,
        column: 17,
        span: 706..712,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 31,
        column: 18,
        span: 712..713,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 31,
        column: 19,
        span: 713..714,
    },
    Token {
        kind: NotEquals,
        lexeme: Symbol(
            "~=",
        ),
        line: 31,
        column: 22,
        span: 715..717,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 31,
        column: 25,
        span: 718..720,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 31,
        column: 26,
        span: 720..721,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "stdout",
        ),
        line: 31,
        column: 32,
        span: 721..727,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 31,
        column: 33,
        span: 727..728,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 33,
        column: 7,
        span: 730..736,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 33,
        column: 8,
        span: 736..737,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 33,
        column: 10,
        span: 737..739,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 33,
        column: 11,
        span: 739..740,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "output",
        ),
        line: 33,
        column: 17,
        span: 740..746,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 33,
        column: 18,
        span: 746..747,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 33,
        column: 19,
        span: 747..748,
    },
    Token {
        kind: Colon,
        lexeme: Symbol(
            ":",
        ),
        line: 33,
        column: 20,
        span: 748..749,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "seek",
        ),
        line: 33,
        column: 24,
        span: 749..753,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 33,
        column: 25,
        span: 753..754,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 33,
        column: 26,
        span: 754..755,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 33,
        column: 29,
        span: 756..758,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "0",
                    after_decimal: "",
                },
            ),
        ),
        line: 33,
        column: 31,
        span: 758..760,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 33,
        column: 32,
        span: 760..761,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 34,
        column: 7,
        span: 762..768,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 34,
        column: 8,
        span: 768..769,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 34,
        column: 10,
        span: 769..771,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 34,
        column: 11,
        span: 771..772,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "write",
        ),
        line: 34,
        column: 16,
        span: 772..777,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 34,
        column: 17,
        span: 777..778,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"alo alo\"",
        ),
        line: 34,
        column: 26,
        span: 778..787,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 34,
        column: 27,
        span: 787..788,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 34,
        column: 28,
        span: 788..789,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 35,
        column: 7,
        span: 790..796,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 35,
        column: 8,
        span: 796..797,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 35,
        column: 10,
        span: 797..799,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 35,
        column: 11,
        span: 799..800,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "output",
        ),
        line: 35,
        column: 17,
        span: 800..806,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 35,
        column: 18,
        span: 806..807,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 35,
        column: 19,
        span: 807..808,
    },
    Token {
        kind: Colon,
        lexeme: Symbol(
            ":",
        ),
        line: 35,
        column: 20,
        span: 808..809,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "seek",
        ),
        line: 35,
        column: 24,
        span: 809..813,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 35,
        column: 25,
        span: 813..814,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 35,
        column: 26,
        span: 814..815,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 35,
        column: 29,
        span: 816..818,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "string",
        ),
        line: 35,
        column: 36,
        span: 819..825,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 35,
        column: 37,
        span: 825..826,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "len",
        ),
        line: 35,
        column: 40,
        span: 826..829,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 35,
        column: 41,
        span: 829..830,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"alo alo\"",
        ),
        line: 35,
        column: 50,
        span: 830..839,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 35,
        column: 51,
        span: 839..840,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 35,
        column: 52,
        span: 840..841,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 36,
        column: 7,
        span: 842..848,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 36,
        column: 8,
        span: 848..849,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 36,
        column: 10,
        span: 849..851,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 36,
        column: 11,
        span: 851..852,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "output",
        ),
        line: 36,
        column: 17,
        span: 852..858,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 36,
        column: 18,
        span: 858..859,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 36,
        column: 19,
        span: 859..860,
    },
    Token {
        kind: Colon,
        lexeme: Symbol(
            ":",
        ),
        line: 36,
        column: 20,
        span: 860..861,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "seek",
        ),
        line: 36,
        column: 24,
        span: 861..865,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 36,
        column: 25,
        span: 865..866,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"cur\"",
        ),
        line: 36,
        column: 30,
        span: 866..871,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 36,
        column: 31,
        span: 871..872,
    },
    Token {
        kind: Minus,
        lexeme: Symbol(
            "-",
        ),
        line: 36,
        column: 33,
        span: 873..874,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "3",
                    after_decimal: "",
                },
            ),
        ),
        line: 36,
        column: 34,
        span: 873..875,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 36,
        column: 35,
        span: 875..876,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 36,
        column: 38,
        span: 877..879,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "string",
        ),
        line: 36,
        column: 45,
        span: 880..886,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 36,
        column: 46,
        span: 886..887,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "len",
        ),
        line: 36,
        column: 49,
        span: 887..890,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 36,
        column: 50,
        span: 890..891,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"alo alo\"",
        ),
        line: 36,
        column: 59,
        span: 891..900,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 36,
        column: 60,
        span: 900..901,
    },
    Token {
        kind: Minus,
        lexeme: Symbol(
            "-",
        ),
        line: 36,
        column: 62,
        span: 902..903,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "3",
                    after_decimal: "",
                },
            ),
        ),
        line: 36,
        column: 64,
        span: 903..905,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 36,
        column: 65,
        span: 905..906,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 37,
        column: 7,
        span: 907..913,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 37,
        column: 8,
        span: 913..914,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 37,
        column: 10,
        span: 914..916,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 37,
        column: 11,
        span: 916..917,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "write",
        ),
        line: 37,
        column: 16,
        span: 917..922,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 37,
        column: 17,
        span: 922..923,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"joao\"",
        ),
        line: 37,
        column: 23,
        span: 923..929,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 37,
        column: 24,
        span: 929..930,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 37,
        column: 25,
        span: 930..931,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 38,
        column: 7,
        span: 932..938,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 38,
        column: 8,
        span: 938..939,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 38,
        column: 10,
        span: 939..941,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 38,
        column: 11,
        span: 941..942,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "output",
        ),
        line: 38,
        column: 17,
        span: 942..948,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 38,
        column: 18,
        span: 948..949,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 38,
        column: 19,
        span: 949..950,
    },
    Token {
        kind: Colon,
        lexeme: Symbol(
            ":",
        ),
        line: 38,
        column: 20,
        span: 950..951,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "seek",
        ),
        line: 38,
        column: 24,
        span: 951..955,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 38,
        column: 25,
        span: 955..956,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"end\"",
        ),
        line: 38,
        column: 30,
        span: 956..961,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 38,
        column: 31,
        span: 961..962,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 38,
        column: 34,
        span: 963..965,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "string",
        ),
        line: 38,
        column: 41,
        span: 966..972,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 38,
        column: 42,
        span: 972..973,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "len",
        ),
        line: 38,
        column: 45,
        span: 973..976,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 38,
        column: 46,
        span: 976..977,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"alo joao\"",
        ),
        line: 38,
        column: 56,
        span: 977..987,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 38,
        column: 57,
        span: 987..988,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 38,
        column: 58,
        span: 988..989,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 40,
        column: 7,
        span: 991..997,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 40,
        column: 8,
        span: 997..998,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 40,
        column: 10,
        span: 998..1000,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 40,
        column: 11,
        span: 1000..1001,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "output",
        ),
        line: 40,
        column: 17,
        span: 1001..1007,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 40,
        column: 18,
        span: 1007..1008,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 40,
        column: 19,
        span: 1008..1009,
    },
    Token {
        kind: Colon,
        lexeme: Symbol(
            ":",
        ),
        line: 40,
        column: 20,
        span: 1009..1010,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "seek",
        ),
        line: 40,
        column: 24,
        span: 1010..1014,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 40,
        column: 25,
        span: 1014..1015,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"set\"",
        ),
        line: 40,
        column: 30,
        span: 1015..1020,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 40,
        column: 31,
        span: 1020..1021,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 40,
        column: 34,
        span: 1022..1024,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "0",
                    after_decimal: "",
                },
            ),
        ),
        line: 40,
        column: 36,
        span: 1024..1026,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 40,
        column: 37,
        span: 1026..1027,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 42,
        column: 7,
        span: 1029..1035,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 42,
        column: 8,
        span: 1035..1036,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 42,
        column: 10,
        span: 1036..1038,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 42,
        column: 11,
        span: 1038..1039,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "write",
        ),
        line: 42,
        column: 16,
        span: 1039..1044,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 42,
        column: 17,
        span: 1044..1045,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'\"�lo\"'",
        ),
        line: 42,
        column: 24,
        span: 1045..1052,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 42,
        column: 25,
        span: 1052..1053,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"{a}\\n\"",
        ),
        line: 42,
        column: 33,
        span: 1054..1061,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 42,
        column: 34,
        span: 1061..1062,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"second line\\n\"",
        ),
        line: 42,
        column: 50,
        span: 1063..1078,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 42,
        column: 51,
        span: 1078..1079,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"third line \\n\"",
        ),
        line: 42,
        column: 67,
        span: 1080..1095,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 42,
        column: 68,
        span: 1095..1096,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 42,
        column: 69,
        span: 1096..1097,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 43,
        column: 7,
        span: 1098..1104,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 43,
        column: 8,
        span: 1104..1105,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 43,
        column: 10,
        span: 1105..1107,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 43,
        column: 11,
        span: 1107..1108,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "write",
        ),
        line: 43,
        column: 16,
        span: 1108..1113,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 43,
        column: 17,
        span: 1113..1114,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'�fourth_line'",
        ),
        line: 43,
        column: 31,
        span: 1114..1128,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 43,
        column: 32,
        span: 1128..1129,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 43,
        column: 33,
        span: 1129..1130,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 44,
        column: 3,
        span: 1131..1133,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 44,
        column: 4,
        span: 1133..1134,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "output",
        ),
        line: 44,
        column: 10,
        span: 1134..1140,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 44,
        column: 11,
        span: 1140..1141,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 44,
        column: 13,
        span: 1141..1143,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 44,
        column: 14,
        span: 1143..1144,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "stdout",
        ),
        line: 44,
        column: 20,
        span: 1144..1150,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 44,
        column: 21,
        span: 1150..1151,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "collectgarbage",
        ),
        line: 45,
        column: 15,
        span: 1152..1166,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 45,
        column: 16,
        span: 1166..1167,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 45,
        column: 17,
        span: 1167..1168,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 46,
        column: 7,
        span: 1200..1206,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 46,
        column: 8,
        span: 1206..1207,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 46,
        column: 10,
        span: 1207..1209,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 46,
        column: 11,
        span: 1209..1210,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "input",
        ),
        line: 46,
        column: 16,
        span: 1210..1215,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 46,
        column: 17,
        span: 1215..1216,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 46,
        column: 18,
        span: 1216..1217,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 46,
        column: 21,
        span: 1218..1220,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 46,
        column: 24,
        span: 1221..1223,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 46,
        column: 25,
        span: 1223..1224,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "stdin",
        ),
        line: 46,
        column: 30,
        span: 1224..1229,
    },
    Token {
        kind: And,
        lexeme: Symbol(
            "and",
        ),
        line: 46,
        column: 34,
        span: 1230..1233,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "rawequal",
        ),
        line: 46,
        column: 43,
        span: 1234..1242,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 46,
        column: 44,
        span: 1242..1243,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 46,
        column: 46,
        span: 1243..1245,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 46,
        column: 47,
        span: 1245..1246,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "output",
        ),
        line: 46,
        column: 53,
        span: 1246..1252,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 46,
        column: 54,
        span: 1252..1253,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 46,
        column: 55,
        span: 1253..1254,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 46,
        column: 56,
        span: 1254..1255,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 46,
        column: 59,
        span: 1256..1258,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 46,
        column: 60,
        span: 1258..1259,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "stdout",
        ),
        line: 46,
        column: 66,
        span: 1259..1265,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 46,
        column: 67,
        span: 1265..1266,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 46,
        column: 68,
        span: 1266..1267,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "print",
        ),
        line: 47,
        column: 6,
        span: 1268..1273,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 47,
        column: 7,
        span: 1273..1274,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'+'",
        ),
        line: 47,
        column: 10,
        span: 1274..1277,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 47,
        column: 11,
        span: 1277..1278,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "collectgarbage",
        ),
        line: 50,
        column: 15,
        span: 1301..1315,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 50,
        column: 16,
        span: 1315..1316,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 50,
        column: 17,
        span: 1316..1317,
    },
    Token {
        kind: For,
        lexeme: Symbol(
            "for",
        ),
        line: 51,
        column: 4,
        span: 1318..1321,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "i",
        ),
        line: 51,
        column: 6,
        span: 1322..1323,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 51,
        column: 8,
        span: 1324..1325,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "1",
                    after_decimal: "",
                },
            ),
        ),
        line: 51,
        column: 10,
        span: 1325..1327,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 51,
        column: 11,
        span: 1327..1328,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "120",
                    after_decimal: "",
                },
            ),
        ),
        line: 51,
        column: 15,
        span: 1328..1332,
    },
    Token {
        kind: Do,
        lexeme: Symbol(
            "do",
        ),
        line: 51,
        column: 0,
        span: 1333..1335,
    },
    Token {
        kind: For,
        lexeme: Symbol(
            "for",
        ),
        line: 52,
        column: 6,
        span: 1338..1341,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "i",
        ),
        line: 52,
        column: 8,
        span: 1342..1343,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 52,
        column: 10,
        span: 1344..1345,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "1",
                    after_decimal: "",
                },
            ),
        ),
        line: 52,
        column: 12,
        span: 1345..1347,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 52,
        column: 13,
        span: 1347..1348,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "5",
                    after_decimal: "",
                },
            ),
        ),
        line: 52,
        column: 15,
        span: 1348..1350,
    },
    Token {
        kind: Do,
        lexeme: Symbol(
            "do",
        ),
        line: 52,
        column: 0,
        span: 1351..1353,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 53,
        column: 7,
        span: 1358..1360,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 53,
        column: 8,
        span: 1360..1361,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "input",
        ),
        line: 53,
        column: 13,
        span: 1361..1366,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 53,
        column: 14,
        span: 1366..1367,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "file",
        ),
        line: 53,
        column: 18,
        span: 1367..1371,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 53,
        column: 19,
        span: 1371..1372,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 54,
        column: 11,
        span: 1377..1383,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 54,
        column: 12,
        span: 1383..1384,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 54,
        column: 14,
        span: 1384..1386,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 54,
        column: 15,
        span: 1386..1387,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "open",
        ),
        line: 54,
        column: 19,
        span: 1387..1391,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 54,
        column: 20,
        span: 1391..1392,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "file",
        ),
        line: 54,
        column: 24,
        span: 1392..1396,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 54,
        column: 25,
        span: 1396..1397,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'r'",
        ),
        line: 54,
        column: 29,
        span: 1398..1401,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 54,
        column: 30,
        span: 1401..1402,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 54,
        column: 31,
        span: 1402..1403,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 55,
        column: 7,
        span: 1408..1410,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 55,
        column: 8,
        span: 1410..1411,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "lines",
        ),
        line: 55,
        column: 13,
        span: 1411..1416,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 55,
        column: 14,
        span: 1416..1417,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "file",
        ),
        line: 55,
        column: 18,
        span: 1417..1421,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 55,
        column: 19,
        span: 1421..1422,
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        line: 56,
        column: 0,
        span: 1425..1428,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "collectgarbage",
        ),
        line: 57,
        column: 17,
        span: 1431..1445,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 57,
        column: 18,
        span: 1445..1446,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 57,
        column: 19,
        span: 1446..1447,
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        line: 58,
        column: 0,
        span: 1448..1451,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 60,
        column: 7,
        span: 1453..1459,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 60,
        column: 8,
        span: 1459..1460,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "os",
        ),
        line: 60,
        column: 10,
        span: 1460..1462,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 60,
        column: 11,
        span: 1462..1463,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "rename",
        ),
        line: 60,
        column: 17,
        span: 1463..1469,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 60,
        column: 18,
        span: 1469..1470,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "file",
        ),
        line: 60,
        column: 22,
        span: 1470..1474,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 60,
        column: 23,
        span: 1474..1475,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "otherfile",
        ),
        line: 60,
        column: 33,
        span: 1476..1485,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 60,
        column: 34,
        span: 1485..1486,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 60,
        column: 35,
        span: 1486..1487,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 61,
        column: 7,
        span: 1488..1494,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 61,
        column: 8,
        span: 1494..1495,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "os",
        ),
        line: 61,
        column: 10,
        span: 1495..1497,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 61,
        column: 11,
        span: 1497..1498,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "rename",
        ),
        line: 61,
        column: 17,
        span: 1498..1504,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 61,
        column: 18,
        span: 1504..1505,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "file",
        ),
        line: 61,
        column: 22,
        span: 1505..1509,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 61,
        column: 23,
        span: 1509..1510,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "otherfile",
        ),
        line: 61,
        column: 33,
        span: 1511..1520,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 61,
        column: 34,
        span: 1520..1521,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 61,
        column: 37,
        span: 1522..1524,
    },
    Token {
        kind: Nil,
        lexeme: Symbol(
            "nil",
        ),
        line: 61,
        column: 41,
        span: 1525..1528,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 61,
        column: 42,
        span: 1528..1529,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 63,
        column: 3,
        span: 1531..1533,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 63,
        column: 4,
        span: 1533..1534,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "output",
        ),
        line: 63,
        column: 10,
        span: 1534..1540,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 63,
        column: 11,
        span: 1540..1541,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 63,
        column: 13,
        span: 1541..1543,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 63,
        column: 14,
        span: 1543..1544,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "open",
        ),
        line: 63,
        column: 18,
        span: 1544..1548,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 63,
        column: 19,
        span: 1548..1549,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "otherfile",
        ),
        line: 63,
        column: 28,
        span: 1549..1558,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 63,
        column: 29,
        span: 1558..1559,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"a\"",
        ),
        line: 63,
        column: 33,
        span: 1560..1563,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 63,
        column: 34,
        span: 1563..1564,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 63,
        column: 35,
        span: 1564..1565,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 64,
        column: 7,
        span: 1566..1572,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 64,
        column: 8,
        span: 1572..1573,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 64,
        column: 10,
        span: 1573..1575,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 64,
        column: 11,
        span: 1575..1576,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "write",
        ),
        line: 64,
        column: 16,
        span: 1576..1581,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 64,
        column: 17,
        span: 1581..1582,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"\\n\\n\\t\\t  3450\\n\"",
        ),
        line: 64,
        column: 35,
        span: 1582..1600,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 64,
        column: 36,
        span: 1600..1601,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 64,
        column: 37,
        span: 1601..1602,
    },
    Token {
        kind: Semicolon,
        lexeme: Symbol(
            ";",
        ),
        line: 64,
        column: 38,
        span: 1602..1603,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 65,
        column: 3,
        span: 1604..1606,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 65,
        column: 4,
        span: 1606..1607,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "close",
        ),
        line: 65,
        column: 9,
        span: 1607..1612,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 65,
        column: 10,
        span: 1612..1613,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 65,
        column: 11,
        span: 1613..1614,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 68,
        column: 7,
        span: 1640..1646,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 68,
        column: 8,
        span: 1646..1647,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "os",
        ),
        line: 68,
        column: 10,
        span: 1647..1649,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 68,
        column: 11,
        span: 1649..1650,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "rename",
        ),
        line: 68,
        column: 17,
        span: 1650..1656,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 68,
        column: 18,
        span: 1656..1657,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "otherfile",
        ),
        line: 68,
        column: 27,
        span: 1657..1666,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 68,
        column: 28,
        span: 1666..1667,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "file",
        ),
        line: 68,
        column: 33,
        span: 1668..1672,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 68,
        column: 34,
        span: 1672..1673,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 68,
        column: 35,
        span: 1673..1674,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 69,
        column: 3,
        span: 1675..1677,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 69,
        column: 4,
        span: 1677..1678,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "output",
        ),
        line: 69,
        column: 10,
        span: 1678..1684,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 69,
        column: 11,
        span: 1684..1685,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "otherfile",
        ),
        line: 69,
        column: 20,
        span: 1685..1694,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 69,
        column: 21,
        span: 1694..1695,
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        line: 70,
        column: 6,
        span: 1696..1701,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "f",
        ),
        line: 70,
        column: 8,
        span: 1702..1703,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 70,
        column: 10,
        span: 1704..1705,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 70,
        column: 13,
        span: 1706..1708,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 70,
        column: 14,
        span: 1708..1709,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "lines",
        ),
        line: 70,
        column: 19,
        span: 1709..1714,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 70,
        column: 20,
        span: 1714..1715,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "file",
        ),
        line: 70,
        column: 24,
        span: 1715..1719,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 70,
        column: 25,
        span: 1719..1720,
    },
    Token {
        kind: While,
        lexeme: Symbol(
            "while",
        ),
        line: 71,
        column: 6,
        span: 1721..1726,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "f",
        ),
        line: 71,
        column: 8,
        span: 1727..1728,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 71,
        column: 9,
        span: 1728..1729,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 71,
        column: 10,
        span: 1729..1730,
    },
    Token {
        kind: Do,
        lexeme: Symbol(
            "do",
        ),
        line: 71,
        column: 13,
        span: 1731..1733,
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        line: 71,
        column: 0,
        span: 1734..1737,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 72,
        column: 7,
        span: 1738..1744,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 72,
        column: 8,
        span: 1744..1745,
    },
    Token {
        kind: Not,
        lexeme: Symbol(
            "not",
        ),
        line: 72,
        column: 11,
        span: 1745..1748,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "pcall",
        ),
        line: 72,
        column: 17,
        span: 1749..1754,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 72,
        column: 18,
        span: 1754..1755,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "f",
        ),
        line: 72,
        column: 19,
        span: 1755..1756,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 72,
        column: 20,
        span: 1756..1757,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 72,
        column: 21,
        span: 1757..1758,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 73,
        column: 7,
        span: 1783..1789,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 73,
        column: 8,
        span: 1789..1790,
    },
    Token {
        kind: Not,
        lexeme: Symbol(
            "not",
        ),
        line: 73,
        column: 11,
        span: 1790..1793,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "pcall",
        ),
        line: 73,
        column: 17,
        span: 1794..1799,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 73,
        column: 18,
        span: 1799..1800,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "f",
        ),
        line: 73,
        column: 19,
        span: 1800..1801,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 73,
        column: 20,
        span: 1801..1802,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 73,
        column: 21,
        span: 1802..1803,
    },
    Token {
        kind: For,
        lexeme: Symbol(
            "for",
        ),
        line: 75,
        column: 4,
        span: 1859..1862,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "l",
        ),
        line: 75,
        column: 6,
        span: 1863..1864,
    },
    Token {
        kind: In,
        lexeme: Symbol(
            "in",
        ),
        line: 75,
        column: 9,
        span: 1865..1867,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 75,
        column: 12,
        span: 1868..1870,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 75,
        column: 13,
        span: 1870..1871,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "lines",
        ),
        line: 75,
        column: 18,
        span: 1871..1876,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 75,
        column: 19,
        span: 1876..1877,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "file",
        ),
        line: 75,
        column: 23,
        span: 1877..1881,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 75,
        column: 24,
        span: 1881..1882,
    },
    Token {
        kind: Do,
        lexeme: Symbol(
            "do",
        ),
        line: 75,
        column: 27,
        span: 1883..1885,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 75,
        column: 30,
        span: 1886..1888,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 75,
        column: 31,
        span: 1888..1889,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "write",
        ),
        line: 75,
        column: 36,
        span: 1889..1894,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 75,
        column: 37,
        span: 1894..1895,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "l",
        ),
        line: 75,
        column: 38,
        span: 1895..1896,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 75,
        column: 39,
        span: 1896..1897,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"\\n\"",
        ),
        line: 75,
        column: 44,
        span: 1898..1902,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 75,
        column: 45,
        span: 1902..1903,
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        line: 75,
        column: 0,
        span: 1904..1907,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 76,
        column: 3,
        span: 1908..1910,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 76,
        column: 4,
        span: 1910..1911,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "close",
        ),
        line: 76,
        column: 9,
        span: 1911..1916,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 76,
        column: 10,
        span: 1916..1917,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 76,
        column: 11,
        span: 1917..1918,
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        line: 78,
        column: 6,
        span: 1955..1960,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "f",
        ),
        line: 78,
        column: 8,
        span: 1961..1962,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 78,
        column: 10,
        span: 1963..1964,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 78,
        column: 17,
        span: 1965..1971,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 78,
        column: 18,
        span: 1971..1972,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 78,
        column: 20,
        span: 1972..1974,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 78,
        column: 21,
        span: 1974..1975,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "open",
        ),
        line: 78,
        column: 25,
        span: 1975..1979,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 78,
        column: 26,
        span: 1979..1980,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "otherfile",
        ),
        line: 78,
        column: 35,
        span: 1980..1989,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 78,
        column: 36,
        span: 1989..1990,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 78,
        column: 37,
        span: 1990..1991,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 79,
        column: 7,
        span: 1992..1998,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 79,
        column: 8,
        span: 1998..1999,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 79,
        column: 10,
        span: 1999..2001,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 79,
        column: 11,
        span: 2001..2002,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "type",
        ),
        line: 79,
        column: 15,
        span: 2002..2006,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 79,
        column: 16,
        span: 2006..2007,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "f",
        ),
        line: 79,
        column: 17,
        span: 2007..2008,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 79,
        column: 18,
        span: 2008..2009,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 79,
        column: 21,
        span: 2010..2012,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"file\"",
        ),
        line: 79,
        column: 28,
        span: 2013..2019,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 79,
        column: 29,
        span: 2019..2020,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 80,
        column: 3,
        span: 2021..2023,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 80,
        column: 4,
        span: 2023..2024,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "output",
        ),
        line: 80,
        column: 10,
        span: 2024..2030,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 80,
        column: 11,
        span: 2030..2031,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "file",
        ),
        line: 80,
        column: 15,
        span: 2031..2035,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 80,
        column: 16,
        span: 2035..2036,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 81,
        column: 7,
        span: 2037..2043,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 81,
        column: 8,
        span: 2043..2044,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 81,
        column: 10,
        span: 2044..2046,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 81,
        column: 11,
        span: 2046..2047,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "output",
        ),
        line: 81,
        column: 17,
        span: 2047..2053,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 81,
        column: 18,
        span: 2053..2054,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 81,
        column: 19,
        span: 2054..2055,
    },
    Token {
        kind: Colon,
        lexeme: Symbol(
            ":",
        ),
        line: 81,
        column: 20,
        span: 2055..2056,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "read",
        ),
        line: 81,
        column: 24,
        span: 2056..2060,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 81,
        column: 25,
        span: 2060..2061,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 81,
        column: 26,
        span: 2061..2062,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 81,
        column: 29,
        span: 2063..2065,
    },
    Token {
        kind: Nil,
        lexeme: Symbol(
            "nil",
        ),
        line: 81,
        column: 33,
        span: 2066..2069,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 81,
        column: 34,
        span: 2069..2070,
    },
    Token {
        kind: For,
        lexeme: Symbol(
            "for",
        ),
        line: 82,
        column: 4,
        span: 2071..2074,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "l",
        ),
        line: 82,
        column: 6,
        span: 2075..2076,
    },
    Token {
        kind: In,
        lexeme: Symbol(
            "in",
        ),
        line: 82,
        column: 9,
        span: 2077..2079,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "f",
        ),
        line: 82,
        column: 11,
        span: 2080..2081,
    },
    Token {
        kind: Colon,
        lexeme: Symbol(
            ":",
        ),
        line: 82,
        column: 12,
        span: 2081..2082,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "lines",
        ),
        line: 82,
        column: 17,
        span: 2082..2087,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 82,
        column: 18,
        span: 2087..2088,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 82,
        column: 19,
        span: 2088..2089,
    },
    Token {
        kind: Do,
        lexeme: Symbol(
            "do",
        ),
        line: 82,
        column: 22,
        span: 2090..2092,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 82,
        column: 25,
        span: 2093..2095,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 82,
        column: 26,
        span: 2095..2096,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "write",
        ),
        line: 82,
        column: 31,
        span: 2096..2101,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 82,
        column: 32,
        span: 2101..2102,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "l",
        ),
        line: 82,
        column: 33,
        span: 2102..2103,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 82,
        column: 34,
        span: 2103..2104,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"\\n\"",
        ),
        line: 82,
        column: 39,
        span: 2105..2109,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 82,
        column: 40,
        span: 2109..2110,
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        line: 82,
        column: 0,
        span: 2111..2114,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 83,
        column: 7,
        span: 2115..2121,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 83,
        column: 8,
        span: 2121..2122,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "f",
        ),
        line: 83,
        column: 9,
        span: 2122..2123,
    },
    Token {
        kind: Colon,
        lexeme: Symbol(
            ":",
        ),
        line: 83,
        column: 10,
        span: 2123..2124,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "close",
        ),
        line: 83,
        column: 15,
        span: 2124..2129,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 83,
        column: 16,
        span: 2129..2130,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 83,
        column: 17,
        span: 2130..2131,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 83,
        column: 18,
        span: 2131..2132,
    },
    Token {
        kind: Semicolon,
        lexeme: Symbol(
            ";",
        ),
        line: 83,
        column: 19,
        span: 2132..2133,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 84,
        column: 3,
        span: 2134..2136,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 84,
        column: 4,
        span: 2136..2137,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "close",
        ),
        line: 84,
        column: 9,
        span: 2137..2142,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 84,
        column: 10,
        span: 2142..2143,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 84,
        column: 11,
        span: 2143..2144,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 85,
        column: 7,
        span: 2145..2151,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 85,
        column: 8,
        span: 2151..2152,
    },
    Token {
        kind: Not,
        lexeme: Symbol(
            "not",
        ),
        line: 85,
        column: 11,
        span: 2152..2155,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "pcall",
        ),
        line: 85,
        column: 17,
        span: 2156..2161,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 85,
        column: 18,
        span: 2161..2162,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 85,
        column: 20,
        span: 2162..2164,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 85,
        column: 21,
        span: 2164..2165,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "close",
        ),
        line: 85,
        column: 26,
        span: 2165..2170,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 85,
        column: 27,
        span: 2170..2171,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "f",
        ),
        line: 85,
        column: 29,
        span: 2172..2173,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 85,
        column: 30,
        span: 2173..2174,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 85,
        column: 31,
        span: 2174..2175,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 86,
        column: 7,
        span: 2207..2213,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 86,
        column: 8,
        span: 2213..2214,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "tostring",
        ),
        line: 86,
        column: 16,
        span: 2214..2222,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 86,
        column: 17,
        span: 2222..2223,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "f",
        ),
        line: 86,
        column: 18,
        span: 2223..2224,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 86,
        column: 19,
        span: 2224..2225,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 86,
        column: 22,
        span: 2226..2228,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"file (closed)\"",
        ),
        line: 86,
        column: 38,
        span: 2229..2244,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 86,
        column: 39,
        span: 2244..2245,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 87,
        column: 7,
        span: 2246..2252,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 87,
        column: 8,
        span: 2252..2253,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 87,
        column: 10,
        span: 2253..2255,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 87,
        column: 11,
        span: 2255..2256,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "type",
        ),
        line: 87,
        column: 15,
        span: 2256..2260,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 87,
        column: 16,
        span: 2260..2261,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "f",
        ),
        line: 87,
        column: 17,
        span: 2261..2262,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 87,
        column: 18,
        span: 2262..2263,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 87,
        column: 21,
        span: 2264..2266,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"closed file\"",
        ),
        line: 87,
        column: 35,
        span: 2267..2280,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 87,
        column: 36,
        span: 2280..2281,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 88,
        column: 3,
        span: 2282..2284,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 88,
        column: 4,
        span: 2284..2285,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "input",
        ),
        line: 88,
        column: 9,
        span: 2285..2290,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 88,
        column: 10,
        span: 2290..2291,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "file",
        ),
        line: 88,
        column: 14,
        span: 2291..2295,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 88,
        column: 15,
        span: 2295..2296,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "f",
        ),
        line: 89,
        column: 2,
        span: 2297..2298,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 89,
        column: 4,
        span: 2299..2300,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 89,
        column: 7,
        span: 2301..2303,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 89,
        column: 8,
        span: 2303..2304,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "open",
        ),
        line: 89,
        column: 12,
        span: 2304..2308,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 89,
        column: 13,
        span: 2308..2309,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "otherfile",
        ),
        line: 89,
        column: 22,
        span: 2309..2318,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 89,
        column: 23,
        span: 2318..2319,
    },
    Token {
        kind: Colon,
        lexeme: Symbol(
            ":",
        ),
        line: 89,
        column: 24,
        span: 2319..2320,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "lines",
        ),
        line: 89,
        column: 29,
        span: 2320..2325,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 89,
        column: 30,
        span: 2325..2326,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 89,
        column: 31,
        span: 2326..2327,
    },
    Token {
        kind: For,
        lexeme: Symbol(
            "for",
        ),
        line: 90,
        column: 4,
        span: 2328..2331,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "l",
        ),
        line: 90,
        column: 6,
        span: 2332..2333,
    },
    Token {
        kind: In,
        lexeme: Symbol(
            "in",
        ),
        line: 90,
        column: 9,
        span: 2334..2336,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 90,
        column: 12,
        span: 2337..2339,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 90,
        column: 13,
        span: 2339..2340,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "lines",
        ),
        line: 90,
        column: 18,
        span: 2340..2345,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 90,
        column: 19,
        span: 2345..2346,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 90,
        column: 20,
        span: 2346..2347,
    },
    Token {
        kind: Do,
        lexeme: Symbol(
            "do",
        ),
        line: 90,
        column: 23,
        span: 2348..2350,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 90,
        column: 30,
        span: 2351..2357,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 90,
        column: 31,
        span: 2357..2358,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "l",
        ),
        line: 90,
        column: 32,
        span: 2358..2359,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 90,
        column: 35,
        span: 2360..2362,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "f",
        ),
        line: 90,
        column: 37,
        span: 2363..2364,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 90,
        column: 38,
        span: 2364..2365,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 90,
        column: 39,
        span: 2365..2366,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 90,
        column: 40,
        span: 2366..2367,
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        line: 90,
        column: 0,
        span: 2368..2371,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 91,
        column: 7,
        span: 2372..2378,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 91,
        column: 8,
        span: 2378..2379,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "os",
        ),
        line: 91,
        column: 10,
        span: 2379..2381,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 91,
        column: 11,
        span: 2381..2382,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "remove",
        ),
        line: 91,
        column: 17,
        span: 2382..2388,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 91,
        column: 18,
        span: 2388..2389,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "otherfile",
        ),
        line: 91,
        column: 27,
        span: 2389..2398,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 91,
        column: 28,
        span: 2398..2399,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 91,
        column: 29,
        span: 2399..2400,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 93,
        column: 3,
        span: 2402..2404,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 93,
        column: 4,
        span: 2404..2405,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "input",
        ),
        line: 93,
        column: 9,
        span: 2405..2410,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 93,
        column: 10,
        span: 2410..2411,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "file",
        ),
        line: 93,
        column: 14,
        span: 2411..2415,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 93,
        column: 15,
        span: 2415..2416,
    },
    Token {
        kind: Do,
        lexeme: Symbol(
            "do",
        ),
        line: 94,
        column: 3,
        span: 2417..2419,
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        line: 95,
        column: 8,
        span: 2444..2449,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 95,
        column: 10,
        span: 2450..2451,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 95,
        column: 11,
        span: 2451..2452,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "b",
        ),
        line: 95,
        column: 13,
        span: 2453..2454,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 95,
        column: 14,
        span: 2454..2455,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "c",
        ),
        line: 95,
        column: 16,
        span: 2456..2457,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 95,
        column: 18,
        span: 2458..2459,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 95,
        column: 21,
        span: 2460..2462,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 95,
        column: 22,
        span: 2462..2463,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "input",
        ),
        line: 95,
        column: 27,
        span: 2463..2468,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 95,
        column: 28,
        span: 2468..2469,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 95,
        column: 29,
        span: 2469..2470,
    },
    Token {
        kind: Colon,
        lexeme: Symbol(
            ":",
        ),
        line: 95,
        column: 30,
        span: 2470..2471,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "write",
        ),
        line: 95,
        column: 35,
        span: 2471..2476,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 95,
        column: 36,
        span: 2476..2477,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"xuxu\"",
        ),
        line: 95,
        column: 42,
        span: 2477..2483,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 95,
        column: 43,
        span: 2483..2484,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 96,
        column: 9,
        span: 2487..2493,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 96,
        column: 10,
        span: 2493..2494,
    },
    Token {
        kind: Not,
        lexeme: Symbol(
            "not",
        ),
        line: 96,
        column: 13,
        span: 2494..2497,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 96,
        column: 15,
        span: 2498..2499,
    },
    Token {
        kind: And,
        lexeme: Symbol(
            "and",
        ),
        line: 96,
        column: 19,
        span: 2500..2503,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "type",
        ),
        line: 96,
        column: 24,
        span: 2504..2508,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 96,
        column: 25,
        span: 2508..2509,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "b",
        ),
        line: 96,
        column: 26,
        span: 2509..2510,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 96,
        column: 27,
        span: 2510..2511,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 96,
        column: 30,
        span: 2512..2514,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"string\"",
        ),
        line: 96,
        column: 39,
        span: 2515..2523,
    },
    Token {
        kind: And,
        lexeme: Symbol(
            "and",
        ),
        line: 96,
        column: 43,
        span: 2524..2527,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "type",
        ),
        line: 96,
        column: 48,
        span: 2528..2532,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 96,
        column: 49,
        span: 2532..2533,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "c",
        ),
        line: 96,
        column: 50,
        span: 2533..2534,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 96,
        column: 51,
        span: 2534..2535,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 96,
        column: 54,
        span: 2536..2538,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"number\"",
        ),
        line: 96,
        column: 63,
        span: 2539..2547,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 96,
        column: 64,
        span: 2547..2548,
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        line: 97,
        column: 0,
        span: 2549..2552,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 98,
        column: 7,
        span: 2553..2559,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 98,
        column: 8,
        span: 2559..2560,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 98,
        column: 10,
        span: 2560..2562,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 98,
        column: 11,
        span: 2562..2563,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "read",
        ),
        line: 98,
        column: 15,
        span: 2563..2567,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 98,
        column: 16,
        span: 2567..2568,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "0",
                    after_decimal: "",
                },
            ),
        ),
        line: 98,
        column: 17,
        span: 2567..2569,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 98,
        column: 18,
        span: 2569..2570,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 98,
        column: 21,
        span: 2571..2573,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"\"",
        ),
        line: 98,
        column: 24,
        span: 2574..2576,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 98,
        column: 25,
        span: 2576..2577,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 99,
        column: 7,
        span: 2589..2595,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 99,
        column: 8,
        span: 2595..2596,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 99,
        column: 10,
        span: 2596..2598,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 99,
        column: 11,
        span: 2598..2599,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "read",
        ),
        line: 99,
        column: 15,
        span: 2599..2603,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 99,
        column: 16,
        span: 2603..2604,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "5",
                    after_decimal: "",
                },
            ),
        ),
        line: 99,
        column: 17,
        span: 2603..2605,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 99,
        column: 18,
        span: 2605..2606,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'*l'",
        ),
        line: 99,
        column: 23,
        span: 2607..2611,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 99,
        column: 24,
        span: 2611..2612,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 99,
        column: 27,
        span: 2613..2615,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'\"�lo\"'",
        ),
        line: 99,
        column: 35,
        span: 2616..2623,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 99,
        column: 36,
        span: 2623..2624,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 100,
        column: 7,
        span: 2625..2631,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 100,
        column: 8,
        span: 2631..2632,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 100,
        column: 10,
        span: 2632..2634,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 100,
        column: 11,
        span: 2634..2635,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "read",
        ),
        line: 100,
        column: 15,
        span: 2635..2639,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 100,
        column: 16,
        span: 2639..2640,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "0",
                    after_decimal: "",
                },
            ),
        ),
        line: 100,
        column: 17,
        span: 2639..2641,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 100,
        column: 18,
        span: 2641..2642,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 100,
        column: 21,
        span: 2643..2645,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"\"",
        ),
        line: 100,
        column: 24,
        span: 2646..2648,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 100,
        column: 25,
        span: 2648..2649,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 101,
        column: 7,
        span: 2650..2656,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 101,
        column: 8,
        span: 2656..2657,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 101,
        column: 10,
        span: 2657..2659,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 101,
        column: 11,
        span: 2659..2660,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "read",
        ),
        line: 101,
        column: 15,
        span: 2660..2664,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 101,
        column: 16,
        span: 2664..2665,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 101,
        column: 17,
        span: 2665..2666,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 101,
        column: 20,
        span: 2667..2669,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"second line\"",
        ),
        line: 101,
        column: 34,
        span: 2670..2683,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 101,
        column: 35,
        span: 2683..2684,
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        line: 102,
        column: 6,
        span: 2685..2690,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "x",
        ),
        line: 102,
        column: 8,
        span: 2691..2692,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 102,
        column: 10,
        span: 2693..2694,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 102,
        column: 13,
        span: 2695..2697,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 102,
        column: 14,
        span: 2697..2698,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "input",
        ),
        line: 102,
        column: 19,
        span: 2698..2703,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 102,
        column: 20,
        span: 2703..2704,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 102,
        column: 21,
        span: 2704..2705,
    },
    Token {
        kind: Colon,
        lexeme: Symbol(
            ":",
        ),
        line: 102,
        column: 22,
        span: 2705..2706,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "seek",
        ),
        line: 102,
        column: 26,
        span: 2706..2710,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 102,
        column: 27,
        span: 2710..2711,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 102,
        column: 28,
        span: 2711..2712,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 103,
        column: 7,
        span: 2713..2719,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 103,
        column: 8,
        span: 2719..2720,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 103,
        column: 10,
        span: 2720..2722,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 103,
        column: 11,
        span: 2722..2723,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "read",
        ),
        line: 103,
        column: 15,
        span: 2723..2727,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 103,
        column: 16,
        span: 2727..2728,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 103,
        column: 17,
        span: 2728..2729,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 103,
        column: 20,
        span: 2730..2732,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"third line \"",
        ),
        line: 103,
        column: 34,
        span: 2733..2746,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 103,
        column: 35,
        span: 2746..2747,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 104,
        column: 7,
        span: 2748..2754,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 104,
        column: 8,
        span: 2754..2755,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 104,
        column: 10,
        span: 2755..2757,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 104,
        column: 11,
        span: 2757..2758,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "input",
        ),
        line: 104,
        column: 16,
        span: 2758..2763,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 104,
        column: 17,
        span: 2763..2764,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 104,
        column: 18,
        span: 2764..2765,
    },
    Token {
        kind: Colon,
        lexeme: Symbol(
            ":",
        ),
        line: 104,
        column: 19,
        span: 2765..2766,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "seek",
        ),
        line: 104,
        column: 23,
        span: 2766..2770,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 104,
        column: 24,
        span: 2770..2771,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"set\"",
        ),
        line: 104,
        column: 29,
        span: 2771..2776,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 104,
        column: 30,
        span: 2776..2777,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "x",
        ),
        line: 104,
        column: 32,
        span: 2778..2779,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 104,
        column: 33,
        span: 2779..2780,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 104,
        column: 34,
        span: 2780..2781,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 105,
        column: 7,
        span: 2782..2788,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 105,
        column: 8,
        span: 2788..2789,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 105,
        column: 10,
        span: 2789..2791,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 105,
        column: 11,
        span: 2791..2792,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "read",
        ),
        line: 105,
        column: 15,
        span: 2792..2796,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 105,
        column: 16,
        span: 2796..2797,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'*l'",
        ),
        line: 105,
        column: 20,
        span: 2797..2801,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 105,
        column: 21,
        span: 2801..2802,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 105,
        column: 24,
        span: 2803..2805,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"third line \"",
        ),
        line: 105,
        column: 38,
        span: 2806..2819,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 105,
        column: 39,
        span: 2819..2820,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 106,
        column: 7,
        span: 2821..2827,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 106,
        column: 8,
        span: 2827..2828,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 106,
        column: 10,
        span: 2828..2830,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 106,
        column: 11,
        span: 2830..2831,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "read",
        ),
        line: 106,
        column: 15,
        span: 2831..2835,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 106,
        column: 16,
        span: 2835..2836,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "1",
                    after_decimal: "",
                },
            ),
        ),
        line: 106,
        column: 17,
        span: 2835..2837,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 106,
        column: 18,
        span: 2837..2838,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 106,
        column: 21,
        span: 2839..2841,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"�\"",
        ),
        line: 106,
        column: 25,
        span: 2842..2845,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 106,
        column: 26,
        span: 2845..2846,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 107,
        column: 7,
        span: 2847..2853,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 107,
        column: 8,
        span: 2853..2854,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 107,
        column: 10,
        span: 2854..2856,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 107,
        column: 11,
        span: 2856..2857,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "read",
        ),
        line: 107,
        column: 15,
        span: 2857..2861,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 107,
        column: 16,
        span: 2861..2862,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "string",
        ),
        line: 107,
        column: 22,
        span: 2862..2868,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 107,
        column: 23,
        span: 2868..2869,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "len",
        ),
        line: 107,
        column: 26,
        span: 2869..2872,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"fourth_line\"",
        ),
        line: 107,
        column: 40,
        span: 2873..2886,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 107,
        column: 41,
        span: 2886..2887,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 107,
        column: 44,
        span: 2888..2890,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"fourth_line\"",
        ),
        line: 107,
        column: 58,
        span: 2891..2904,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 107,
        column: 59,
        span: 2904..2905,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 108,
        column: 7,
        span: 2906..2912,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 108,
        column: 8,
        span: 2912..2913,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 108,
        column: 10,
        span: 2913..2915,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 108,
        column: 11,
        span: 2915..2916,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "input",
        ),
        line: 108,
        column: 16,
        span: 2916..2921,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 108,
        column: 17,
        span: 2921..2922,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 108,
        column: 18,
        span: 2922..2923,
    },
    Token {
        kind: Colon,
        lexeme: Symbol(
            ":",
        ),
        line: 108,
        column: 19,
        span: 2923..2924,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "seek",
        ),
        line: 108,
        column: 23,
        span: 2924..2928,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 108,
        column: 24,
        span: 2928..2929,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"cur\"",
        ),
        line: 108,
        column: 29,
        span: 2929..2934,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 108,
        column: 30,
        span: 2934..2935,
    },
    Token {
        kind: Minus,
        lexeme: Symbol(
            "-",
        ),
        line: 108,
        column: 32,
        span: 2936..2937,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "string",
        ),
        line: 108,
        column: 38,
        span: 2937..2943,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 108,
        column: 39,
        span: 2943..2944,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "len",
        ),
        line: 108,
        column: 42,
        span: 2944..2947,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"fourth_line\"",
        ),
        line: 108,
        column: 56,
        span: 2948..2961,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 108,
        column: 57,
        span: 2961..2962,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 108,
        column: 58,
        span: 2962..2963,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 109,
        column: 7,
        span: 2964..2970,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 109,
        column: 8,
        span: 2970..2971,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 109,
        column: 10,
        span: 2971..2973,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 109,
        column: 11,
        span: 2973..2974,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "read",
        ),
        line: 109,
        column: 15,
        span: 2974..2978,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 109,
        column: 16,
        span: 2978..2979,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 109,
        column: 17,
        span: 2979..2980,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 109,
        column: 20,
        span: 2981..2983,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"fourth_line\"",
        ),
        line: 109,
        column: 34,
        span: 2984..2997,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 109,
        column: 35,
        span: 2997..2998,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 110,
        column: 7,
        span: 2999..3005,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 110,
        column: 8,
        span: 3005..3006,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 110,
        column: 10,
        span: 3006..3008,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 110,
        column: 11,
        span: 3008..3009,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "read",
        ),
        line: 110,
        column: 15,
        span: 3009..3013,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 110,
        column: 16,
        span: 3013..3014,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 110,
        column: 17,
        span: 3014..3015,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 110,
        column: 20,
        span: 3016..3018,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"\"",
        ),
        line: 110,
        column: 23,
        span: 3019..3021,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 110,
        column: 24,
        span: 3021..3022,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 111,
        column: 7,
        span: 3037..3043,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 111,
        column: 8,
        span: 3043..3044,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 111,
        column: 10,
        span: 3044..3046,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 111,
        column: 11,
        span: 3046..3047,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "read",
        ),
        line: 111,
        column: 15,
        span: 3047..3051,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 111,
        column: 16,
        span: 3051..3052,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'*n'",
        ),
        line: 111,
        column: 20,
        span: 3052..3056,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 111,
        column: 21,
        span: 3056..3057,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 111,
        column: 24,
        span: 3058..3060,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "3450",
                    after_decimal: "",
                },
            ),
        ),
        line: 111,
        column: 29,
        span: 3060..3065,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 111,
        column: 30,
        span: 3065..3066,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 112,
        column: 7,
        span: 3067..3073,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 112,
        column: 8,
        span: 3073..3074,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 112,
        column: 10,
        span: 3074..3076,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 112,
        column: 11,
        span: 3076..3077,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "read",
        ),
        line: 112,
        column: 15,
        span: 3077..3081,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 112,
        column: 16,
        span: 3081..3082,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "1",
                    after_decimal: "",
                },
            ),
        ),
        line: 112,
        column: 17,
        span: 3081..3083,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 112,
        column: 18,
        span: 3083..3084,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 112,
        column: 21,
        span: 3085..3087,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'\\n'",
        ),
        line: 112,
        column: 26,
        span: 3088..3092,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 112,
        column: 27,
        span: 3092..3093,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 113,
        column: 7,
        span: 3094..3100,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 113,
        column: 8,
        span: 3100..3101,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 113,
        column: 10,
        span: 3101..3103,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 113,
        column: 11,
        span: 3103..3104,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "read",
        ),
        line: 113,
        column: 15,
        span: 3104..3108,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 113,
        column: 16,
        span: 3108..3109,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "0",
                    after_decimal: "",
                },
            ),
        ),
        line: 113,
        column: 17,
        span: 3108..3110,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 113,
        column: 18,
        span: 3110..3111,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 113,
        column: 21,
        span: 3112..3114,
    },
    Token {
        kind: Nil,
        lexeme: Symbol(
            "nil",
        ),
        line: 113,
        column: 25,
        span: 3115..3118,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 113,
        column: 26,
        span: 3118..3119,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 114,
        column: 7,
        span: 3135..3141,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 114,
        column: 8,
        span: 3141..3142,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 114,
        column: 10,
        span: 3142..3144,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 114,
        column: 11,
        span: 3144..3145,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "read",
        ),
        line: 114,
        column: 15,
        span: 3145..3149,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 114,
        column: 16,
        span: 3149..3150,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "1",
                    after_decimal: "",
                },
            ),
        ),
        line: 114,
        column: 17,
        span: 3149..3151,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 114,
        column: 18,
        span: 3151..3152,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 114,
        column: 21,
        span: 3153..3155,
    },
    Token {
        kind: Nil,
        lexeme: Symbol(
            "nil",
        ),
        line: 114,
        column: 25,
        span: 3156..3159,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 114,
        column: 26,
        span: 3159..3160,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 115,
        column: 7,
        span: 3176..3182,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 115,
        column: 8,
        span: 3182..3183,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 115,
        column: 9,
        span: 3183..3184,
    },
    Token {
        kind: LeftBrace,
        lexeme: Symbol(
            "{",
        ),
        line: 115,
        column: 10,
        span: 3184..3185,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 115,
        column: 13,
        span: 3186..3188,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 115,
        column: 14,
        span: 3188..3189,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "read",
        ),
        line: 115,
        column: 18,
        span: 3189..3193,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 115,
        column: 19,
        span: 3193..3194,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "1",
                    after_decimal: "",
                },
            ),
        ),
        line: 115,
        column: 20,
        span: 3193..3195,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 115,
        column: 21,
        span: 3195..3196,
    },
    Token {
        kind: RightBrace,
        lexeme: Symbol(
            "}",
        ),
        line: 115,
        column: 23,
        span: 3197..3198,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 115,
        column: 24,
        span: 3198..3199,
    },
    Token {
        kind: LeftBracket,
        lexeme: Symbol(
            "[",
        ),
        line: 115,
        column: 25,
        span: 3199..3200,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "2",
                    after_decimal: "",
                },
            ),
        ),
        line: 115,
        column: 26,
        span: 3199..3201,
    },
    Token {
        kind: RightBracket,
        lexeme: Symbol(
            "]",
        ),
        line: 115,
        column: 27,
        span: 3201..3202,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 115,
        column: 30,
        span: 3203..3205,
    },
    Token {
        kind: Nil,
        lexeme: Symbol(
            "nil",
        ),
        line: 115,
        column: 34,
        span: 3206..3209,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 115,
        column: 35,
        span: 3209..3210,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 116,
        column: 7,
        span: 3211..3217,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 116,
        column: 8,
        span: 3217..3218,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 116,
        column: 10,
        span: 3218..3220,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 116,
        column: 11,
        span: 3220..3221,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "read",
        ),
        line: 116,
        column: 15,
        span: 3221..3225,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 116,
        column: 16,
        span: 3225..3226,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 116,
        column: 17,
        span: 3226..3227,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 116,
        column: 20,
        span: 3228..3230,
    },
    Token {
        kind: Nil,
        lexeme: Symbol(
            "nil",
        ),
        line: 116,
        column: 24,
        span: 3231..3234,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 116,
        column: 25,
        span: 3234..3235,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 117,
        column: 7,
        span: 3251..3257,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 117,
        column: 8,
        span: 3257..3258,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 117,
        column: 9,
        span: 3258..3259,
    },
    Token {
        kind: LeftBrace,
        lexeme: Symbol(
            "{",
        ),
        line: 117,
        column: 10,
        span: 3259..3260,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 117,
        column: 13,
        span: 3261..3263,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 117,
        column: 14,
        span: 3263..3264,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "read",
        ),
        line: 117,
        column: 18,
        span: 3264..3268,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 117,
        column: 19,
        span: 3268..3269,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 117,
        column: 20,
        span: 3269..3270,
    },
    Token {
        kind: RightBrace,
        lexeme: Symbol(
            "}",
        ),
        line: 117,
        column: 22,
        span: 3271..3272,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 117,
        column: 23,
        span: 3272..3273,
    },
    Token {
        kind: LeftBracket,
        lexeme: Symbol(
            "[",
        ),
        line: 117,
        column: 24,
        span: 3273..3274,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "2",
                    after_decimal: "",
                },
            ),
        ),
        line: 117,
        column: 25,
        span: 3273..3275,
    },
    Token {
        kind: RightBracket,
        lexeme: Symbol(
            "]",
        ),
        line: 117,
        column: 26,
        span: 3275..3276,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 117,
        column: 29,
        span: 3277..3279,
    },
    Token {
        kind: Nil,
        lexeme: Symbol(
            "nil",
        ),
        line: 117,
        column: 33,
        span: 3280..3283,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 117,
        column: 34,
        span: 3283..3284,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 118,
        column: 7,
        span: 3285..3291,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 118,
        column: 8,
        span: 3291..3292,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 118,
        column: 10,
        span: 3292..3294,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 118,
        column: 11,
        span: 3294..3295,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "read",
        ),
        line: 118,
        column: 15,
        span: 3295..3299,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 118,
        column: 16,
        span: 3299..3300,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'*n'",
        ),
        line: 118,
        column: 20,
        span: 3300..3304,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 118,
        column: 21,
        span: 3304..3305,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 118,
        column: 24,
        span: 3306..3308,
    },
    Token {
        kind: Nil,
        lexeme: Symbol(
            "nil",
        ),
        line: 118,
        column: 28,
        span: 3309..3312,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 118,
        column: 29,
        span: 3312..3313,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 119,
        column: 7,
        span: 3329..3335,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 119,
        column: 8,
        span: 3335..3336,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 119,
        column: 9,
        span: 3336..3337,
    },
    Token {
        kind: LeftBrace,
        lexeme: Symbol(
            "{",
        ),
        line: 119,
        column: 10,
        span: 3337..3338,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 119,
        column: 13,
        span: 3339..3341,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 119,
        column: 14,
        span: 3341..3342,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "read",
        ),
        line: 119,
        column: 18,
        span: 3342..3346,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 119,
        column: 19,
        span: 3346..3347,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'*n'",
        ),
        line: 119,
        column: 23,
        span: 3347..3351,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 119,
        column: 24,
        span: 3351..3352,
    },
    Token {
        kind: RightBrace,
        lexeme: Symbol(
            "}",
        ),
        line: 119,
        column: 26,
        span: 3353..3354,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 119,
        column: 27,
        span: 3354..3355,
    },
    Token {
        kind: LeftBracket,
        lexeme: Symbol(
            "[",
        ),
        line: 119,
        column: 28,
        span: 3355..3356,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "2",
                    after_decimal: "",
                },
            ),
        ),
        line: 119,
        column: 29,
        span: 3355..3357,
    },
    Token {
        kind: RightBracket,
        lexeme: Symbol(
            "]",
        ),
        line: 119,
        column: 30,
        span: 3357..3358,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 119,
        column: 33,
        span: 3359..3361,
    },
    Token {
        kind: Nil,
        lexeme: Symbol(
            "nil",
        ),
        line: 119,
        column: 37,
        span: 3362..3365,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 119,
        column: 38,
        span: 3365..3366,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 120,
        column: 7,
        span: 3367..3373,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 120,
        column: 8,
        span: 3373..3374,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 120,
        column: 10,
        span: 3374..3376,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 120,
        column: 11,
        span: 3376..3377,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "read",
        ),
        line: 120,
        column: 15,
        span: 3377..3381,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 120,
        column: 16,
        span: 3381..3382,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'*a'",
        ),
        line: 120,
        column: 20,
        span: 3382..3386,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 120,
        column: 21,
        span: 3386..3387,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 120,
        column: 24,
        span: 3388..3390,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "''",
        ),
        line: 120,
        column: 27,
        span: 3391..3393,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 120,
        column: 28,
        span: 3393..3394,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 121,
        column: 7,
        span: 3424..3430,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 121,
        column: 8,
        span: 3430..3431,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 121,
        column: 10,
        span: 3431..3433,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 121,
        column: 11,
        span: 3433..3434,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "read",
        ),
        line: 121,
        column: 15,
        span: 3434..3438,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 121,
        column: 16,
        span: 3438..3439,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'*a'",
        ),
        line: 121,
        column: 20,
        span: 3439..3443,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 121,
        column: 21,
        span: 3443..3444,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 121,
        column: 24,
        span: 3445..3447,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "''",
        ),
        line: 121,
        column: 27,
        span: 3448..3450,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 121,
        column: 28,
        span: 3450..3451,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "collectgarbage",
        ),
        line: 122,
        column: 15,
        span: 3481..3495,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 122,
        column: 16,
        span: 3495..3496,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 122,
        column: 17,
        span: 3496..3497,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "print",
        ),
        line: 123,
        column: 6,
        span: 3498..3503,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 123,
        column: 7,
        span: 3503..3504,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'+'",
        ),
        line: 123,
        column: 10,
        span: 3504..3507,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 123,
        column: 11,
        span: 3507..3508,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 124,
        column: 3,
        span: 3509..3511,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 124,
        column: 4,
        span: 3511..3512,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "close",
        ),
        line: 124,
        column: 9,
        span: 3512..3517,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 124,
        column: 10,
        span: 3517..3518,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 124,
        column: 12,
        span: 3518..3520,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 124,
        column: 13,
        span: 3520..3521,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "input",
        ),
        line: 124,
        column: 18,
        span: 3521..3526,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 124,
        column: 19,
        span: 3526..3527,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 124,
        column: 20,
        span: 3527..3528,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 124,
        column: 21,
        span: 3528..3529,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 125,
        column: 7,
        span: 3530..3536,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 125,
        column: 8,
        span: 3536..3537,
    },
    Token {
        kind: Not,
        lexeme: Symbol(
            "not",
        ),
        line: 125,
        column: 11,
        span: 3537..3540,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "pcall",
        ),
        line: 125,
        column: 17,
        span: 3541..3546,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 125,
        column: 18,
        span: 3546..3547,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 125,
        column: 20,
        span: 3547..3549,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 125,
        column: 21,
        span: 3549..3550,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "read",
        ),
        line: 125,
        column: 25,
        span: 3550..3554,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 125,
        column: 26,
        span: 3554..3555,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 125,
        column: 27,
        span: 3555..3556,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 127,
        column: 7,
        span: 3558..3564,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 127,
        column: 8,
        span: 3564..3565,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "os",
        ),
        line: 127,
        column: 10,
        span: 3565..3567,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 127,
        column: 11,
        span: 3567..3568,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "remove",
        ),
        line: 127,
        column: 17,
        span: 3568..3574,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 127,
        column: 18,
        span: 3574..3575,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "file",
        ),
        line: 127,
        column: 22,
        span: 3575..3579,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 127,
        column: 23,
        span: 3579..3580,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 127,
        column: 24,
        span: 3580..3581,
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        line: 129,
        column: 6,
        span: 3583..3588,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "t",
        ),
        line: 129,
        column: 8,
        span: 3589..3590,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 129,
        column: 10,
        span: 3591..3592,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'0123456789'",
        ),
        line: 129,
        column: 23,
        span: 3593..3605,
    },
    Token {
        kind: For,
        lexeme: Symbol(
            "for",
        ),
        line: 130,
        column: 4,
        span: 3606..3609,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "i",
        ),
        line: 130,
        column: 6,
        span: 3610..3611,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 130,
        column: 8,
        span: 3612..3613,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "1",
                    after_decimal: "",
                },
            ),
        ),
        line: 130,
        column: 10,
        span: 3613..3615,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 130,
        column: 11,
        span: 3615..3616,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "12",
                    after_decimal: "",
                },
            ),
        ),
        line: 130,
        column: 14,
        span: 3616..3619,
    },
    Token {
        kind: Do,
        lexeme: Symbol(
            "do",
        ),
        line: 130,
        column: 17,
        span: 3620..3622,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "t",
        ),
        line: 130,
        column: 19,
        span: 3623..3624,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 130,
        column: 21,
        span: 3625..3626,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "t",
        ),
        line: 130,
        column: 23,
        span: 3627..3628,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 130,
        column: 26,
        span: 3629..3631,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "t",
        ),
        line: 130,
        column: 28,
        span: 3632..3633,
    },
    Token {
        kind: Semicolon,
        lexeme: Symbol(
            ";",
        ),
        line: 130,
        column: 29,
        span: 3633..3634,
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        line: 130,
        column: 0,
        span: 3635..3638,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 131,
        column: 7,
        span: 3639..3645,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 131,
        column: 8,
        span: 3645..3646,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "string",
        ),
        line: 131,
        column: 14,
        span: 3646..3652,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 131,
        column: 15,
        span: 3652..3653,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "len",
        ),
        line: 131,
        column: 18,
        span: 3653..3656,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 131,
        column: 19,
        span: 3656..3657,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "t",
        ),
        line: 131,
        column: 20,
        span: 3657..3658,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 131,
        column: 21,
        span: 3658..3659,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 131,
        column: 24,
        span: 3660..3662,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "10",
                    after_decimal: "",
                },
            ),
        ),
        line: 131,
        column: 27,
        span: 3662..3665,
    },
    Token {
        kind: Star,
        lexeme: Symbol(
            "*",
        ),
        line: 131,
        column: 29,
        span: 3666..3667,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "2",
                    after_decimal: "",
                },
            ),
        ),
        line: 131,
        column: 31,
        span: 3667..3669,
    },
    Token {
        kind: Caret,
        lexeme: Symbol(
            "^",
        ),
        line: 131,
        column: 33,
        span: 3670..3671,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "12",
                    after_decimal: "",
                },
            ),
        ),
        line: 131,
        column: 36,
        span: 3671..3674,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 131,
        column: 37,
        span: 3674..3675,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 133,
        column: 3,
        span: 3677..3679,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 133,
        column: 4,
        span: 3679..3680,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "output",
        ),
        line: 133,
        column: 10,
        span: 3680..3686,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 133,
        column: 11,
        span: 3686..3687,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "file",
        ),
        line: 133,
        column: 15,
        span: 3687..3691,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 133,
        column: 16,
        span: 3691..3692,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 134,
        column: 3,
        span: 3693..3695,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 134,
        column: 4,
        span: 3695..3696,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "write",
        ),
        line: 134,
        column: 9,
        span: 3696..3701,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 134,
        column: 10,
        span: 3701..3702,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"alo\\n\"",
        ),
        line: 134,
        column: 17,
        span: 3702..3709,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 134,
        column: 18,
        span: 3709..3710,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 135,
        column: 3,
        span: 3711..3713,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 135,
        column: 4,
        span: 3713..3714,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "close",
        ),
        line: 135,
        column: 9,
        span: 3714..3719,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 135,
        column: 10,
        span: 3719..3720,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 135,
        column: 11,
        span: 3720..3721,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 136,
        column: 7,
        span: 3722..3728,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 136,
        column: 8,
        span: 3728..3729,
    },
    Token {
        kind: Not,
        lexeme: Symbol(
            "not",
        ),
        line: 136,
        column: 11,
        span: 3729..3732,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "pcall",
        ),
        line: 136,
        column: 17,
        span: 3733..3738,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 136,
        column: 18,
        span: 3738..3739,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 136,
        column: 20,
        span: 3739..3741,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 136,
        column: 21,
        span: 3741..3742,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "write",
        ),
        line: 136,
        column: 26,
        span: 3742..3747,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 136,
        column: 27,
        span: 3747..3748,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 136,
        column: 28,
        span: 3748..3749,
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        line: 137,
        column: 6,
        span: 3750..3755,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "f",
        ),
        line: 137,
        column: 8,
        span: 3756..3757,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 137,
        column: 10,
        span: 3758..3759,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 137,
        column: 13,
        span: 3760..3762,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 137,
        column: 14,
        span: 3762..3763,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "open",
        ),
        line: 137,
        column: 18,
        span: 3763..3767,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 137,
        column: 19,
        span: 3767..3768,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "file",
        ),
        line: 137,
        column: 23,
        span: 3768..3772,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 137,
        column: 24,
        span: 3772..3773,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"a\"",
        ),
        line: 137,
        column: 28,
        span: 3774..3777,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 137,
        column: 29,
        span: 3777..3778,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 138,
        column: 3,
        span: 3779..3781,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 138,
        column: 4,
        span: 3781..3782,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "output",
        ),
        line: 138,
        column: 10,
        span: 3782..3788,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 138,
        column: 11,
        span: 3788..3789,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "f",
        ),
        line: 138,
        column: 12,
        span: 3789..3790,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 138,
        column: 13,
        span: 3790..3791,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "collectgarbage",
        ),
        line: 139,
        column: 15,
        span: 3792..3806,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 139,
        column: 16,
        span: 3806..3807,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 139,
        column: 17,
        span: 3807..3808,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 141,
        column: 7,
        span: 3810..3816,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 141,
        column: 8,
        span: 3816..3817,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 141,
        column: 10,
        span: 3817..3819,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 141,
        column: 11,
        span: 3819..3820,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "write",
        ),
        line: 141,
        column: 16,
        span: 3820..3825,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 141,
        column: 17,
        span: 3825..3826,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "' '",
        ),
        line: 141,
        column: 20,
        span: 3826..3829,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 141,
        column: 23,
        span: 3830..3832,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "t",
        ),
        line: 141,
        column: 25,
        span: 3833..3834,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 141,
        column: 28,
        span: 3835..3837,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "' '",
        ),
        line: 141,
        column: 32,
        span: 3838..3841,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 141,
        column: 33,
        span: 3841..3842,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 141,
        column: 34,
        span: 3842..3843,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 142,
        column: 7,
        span: 3844..3850,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 142,
        column: 8,
        span: 3850..3851,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 142,
        column: 10,
        span: 3851..3853,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 142,
        column: 11,
        span: 3853..3854,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "write",
        ),
        line: 142,
        column: 16,
        span: 3854..3859,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 142,
        column: 17,
        span: 3859..3860,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "';'",
        ),
        line: 142,
        column: 20,
        span: 3860..3863,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 142,
        column: 21,
        span: 3863..3864,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'end of file\\n'",
        ),
        line: 142,
        column: 37,
        span: 3865..3880,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 142,
        column: 38,
        span: 3880..3881,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 142,
        column: 39,
        span: 3881..3882,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "f",
        ),
        line: 143,
        column: 2,
        span: 3883..3884,
    },
    Token {
        kind: Colon,
        lexeme: Symbol(
            ":",
        ),
        line: 143,
        column: 3,
        span: 3884..3885,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "flush",
        ),
        line: 143,
        column: 8,
        span: 3885..3890,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 143,
        column: 9,
        span: 3890..3891,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 143,
        column: 10,
        span: 3891..3892,
    },
    Token {
        kind: Semicolon,
        lexeme: Symbol(
            ";",
        ),
        line: 143,
        column: 11,
        span: 3892..3893,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 144,
        column: 3,
        span: 3894..3896,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 144,
        column: 4,
        span: 3896..3897,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "flush",
        ),
        line: 144,
        column: 9,
        span: 3897..3902,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 144,
        column: 10,
        span: 3902..3903,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 144,
        column: 11,
        span: 3903..3904,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "f",
        ),
        line: 145,
        column: 2,
        span: 3905..3906,
    },
    Token {
        kind: Colon,
        lexeme: Symbol(
            ":",
        ),
        line: 145,
        column: 3,
        span: 3906..3907,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "close",
        ),
        line: 145,
        column: 8,
        span: 3907..3912,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 145,
        column: 9,
        span: 3912..3913,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 145,
        column: 10,
        span: 3913..3914,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "print",
        ),
        line: 146,
        column: 6,
        span: 3915..3920,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 146,
        column: 7,
        span: 3920..3921,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'+'",
        ),
        line: 146,
        column: 10,
        span: 3921..3924,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 146,
        column: 11,
        span: 3924..3925,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 148,
        column: 3,
        span: 3927..3929,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 148,
        column: 4,
        span: 3929..3930,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "input",
        ),
        line: 148,
        column: 9,
        span: 3930..3935,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 148,
        column: 10,
        span: 3935..3936,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "file",
        ),
        line: 148,
        column: 14,
        span: 3936..3940,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 148,
        column: 15,
        span: 3940..3941,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 149,
        column: 7,
        span: 3942..3948,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 149,
        column: 8,
        span: 3948..3949,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 149,
        column: 10,
        span: 3949..3951,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 149,
        column: 11,
        span: 3951..3952,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "read",
        ),
        line: 149,
        column: 15,
        span: 3952..3956,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 149,
        column: 16,
        span: 3956..3957,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 149,
        column: 17,
        span: 3957..3958,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 149,
        column: 20,
        span: 3959..3961,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"alo\"",
        ),
        line: 149,
        column: 26,
        span: 3962..3967,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 149,
        column: 27,
        span: 3967..3968,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 150,
        column: 7,
        span: 3969..3975,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 150,
        column: 8,
        span: 3975..3976,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 150,
        column: 10,
        span: 3976..3978,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 150,
        column: 11,
        span: 3978..3979,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "read",
        ),
        line: 150,
        column: 15,
        span: 3979..3983,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 150,
        column: 16,
        span: 3983..3984,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "1",
                    after_decimal: "",
                },
            ),
        ),
        line: 150,
        column: 17,
        span: 3983..3985,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 150,
        column: 18,
        span: 3985..3986,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 150,
        column: 21,
        span: 3987..3989,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "' '",
        ),
        line: 150,
        column: 25,
        span: 3990..3993,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 150,
        column: 26,
        span: 3993..3994,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 151,
        column: 7,
        span: 3995..4001,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 151,
        column: 8,
        span: 4001..4002,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 151,
        column: 10,
        span: 4002..4004,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 151,
        column: 11,
        span: 4004..4005,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "read",
        ),
        line: 151,
        column: 15,
        span: 4005..4009,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 151,
        column: 16,
        span: 4009..4010,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "string",
        ),
        line: 151,
        column: 22,
        span: 4010..4016,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 151,
        column: 23,
        span: 4016..4017,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "len",
        ),
        line: 151,
        column: 26,
        span: 4017..4020,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 151,
        column: 27,
        span: 4020..4021,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "t",
        ),
        line: 151,
        column: 28,
        span: 4021..4022,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 151,
        column: 29,
        span: 4022..4023,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 151,
        column: 30,
        span: 4023..4024,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 151,
        column: 33,
        span: 4025..4027,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "t",
        ),
        line: 151,
        column: 35,
        span: 4028..4029,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 151,
        column: 36,
        span: 4029..4030,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 152,
        column: 7,
        span: 4031..4037,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 152,
        column: 8,
        span: 4037..4038,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 152,
        column: 10,
        span: 4038..4040,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 152,
        column: 11,
        span: 4040..4041,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "read",
        ),
        line: 152,
        column: 15,
        span: 4041..4045,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 152,
        column: 16,
        span: 4045..4046,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "1",
                    after_decimal: "",
                },
            ),
        ),
        line: 152,
        column: 17,
        span: 4045..4047,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 152,
        column: 18,
        span: 4047..4048,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 152,
        column: 21,
        span: 4049..4051,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "' '",
        ),
        line: 152,
        column: 25,
        span: 4052..4055,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 152,
        column: 26,
        span: 4055..4056,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 153,
        column: 7,
        span: 4057..4063,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 153,
        column: 8,
        span: 4063..4064,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 153,
        column: 10,
        span: 4064..4066,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 153,
        column: 11,
        span: 4066..4067,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "read",
        ),
        line: 153,
        column: 15,
        span: 4067..4071,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 153,
        column: 16,
        span: 4071..4072,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "0",
                    after_decimal: "",
                },
            ),
        ),
        line: 153,
        column: 17,
        span: 4071..4073,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 153,
        column: 18,
        span: 4073..4074,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 153,
        column: 19,
        span: 4074..4075,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 154,
        column: 7,
        span: 4076..4082,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 154,
        column: 8,
        span: 4082..4083,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 154,
        column: 10,
        span: 4083..4085,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 154,
        column: 11,
        span: 4085..4086,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "read",
        ),
        line: 154,
        column: 15,
        span: 4086..4090,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 154,
        column: 16,
        span: 4090..4091,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'*a'",
        ),
        line: 154,
        column: 20,
        span: 4091..4095,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 154,
        column: 21,
        span: 4095..4096,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 154,
        column: 24,
        span: 4097..4099,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "';end of file\\n'",
        ),
        line: 154,
        column: 41,
        span: 4100..4116,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 154,
        column: 42,
        span: 4116..4117,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 155,
        column: 7,
        span: 4118..4124,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 155,
        column: 8,
        span: 4124..4125,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 155,
        column: 10,
        span: 4125..4127,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 155,
        column: 11,
        span: 4127..4128,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "read",
        ),
        line: 155,
        column: 15,
        span: 4128..4132,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 155,
        column: 16,
        span: 4132..4133,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "0",
                    after_decimal: "",
                },
            ),
        ),
        line: 155,
        column: 17,
        span: 4132..4134,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 155,
        column: 18,
        span: 4134..4135,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 155,
        column: 21,
        span: 4136..4138,
    },
    Token {
        kind: Nil,
        lexeme: Symbol(
            "nil",
        ),
        line: 155,
        column: 25,
        span: 4139..4142,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 155,
        column: 26,
        span: 4142..4143,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 156,
        column: 7,
        span: 4144..4150,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 156,
        column: 8,
        span: 4150..4151,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 156,
        column: 10,
        span: 4151..4153,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 156,
        column: 11,
        span: 4153..4154,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "close",
        ),
        line: 156,
        column: 16,
        span: 4154..4159,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 156,
        column: 17,
        span: 4159..4160,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 156,
        column: 19,
        span: 4160..4162,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 156,
        column: 20,
        span: 4162..4163,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "input",
        ),
        line: 156,
        column: 25,
        span: 4163..4168,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 156,
        column: 26,
        span: 4168..4169,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 156,
        column: 27,
        span: 4169..4170,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 156,
        column: 28,
        span: 4170..4171,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 156,
        column: 29,
        span: 4171..4172,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 158,
        column: 7,
        span: 4174..4180,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 158,
        column: 8,
        span: 4180..4181,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "os",
        ),
        line: 158,
        column: 10,
        span: 4181..4183,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 158,
        column: 11,
        span: 4183..4184,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "remove",
        ),
        line: 158,
        column: 17,
        span: 4184..4190,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 158,
        column: 18,
        span: 4190..4191,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "file",
        ),
        line: 158,
        column: 22,
        span: 4191..4195,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 158,
        column: 23,
        span: 4195..4196,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 158,
        column: 24,
        span: 4196..4197,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "print",
        ),
        line: 159,
        column: 6,
        span: 4198..4203,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 159,
        column: 7,
        span: 4203..4204,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'+'",
        ),
        line: 159,
        column: 10,
        span: 4204..4207,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 159,
        column: 11,
        span: 4207..4208,
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        line: 161,
        column: 6,
        span: 4210..4215,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "x1",
        ),
        line: 161,
        column: 9,
        span: 4216..4218,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 161,
        column: 11,
        span: 4219..4220,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"string\\n\\n\\\\com \\\"\\\"''coisas [[estranhas]] ]]'\"",
        ),
        line: 161,
        column: 60,
        span: 4221..4269,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 162,
        column: 3,
        span: 4270..4272,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 162,
        column: 4,
        span: 4272..4273,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "output",
        ),
        line: 162,
        column: 10,
        span: 4273..4279,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 162,
        column: 11,
        span: 4279..4280,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "file",
        ),
        line: 162,
        column: 15,
        span: 4280..4284,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 162,
        column: 16,
        span: 4284..4285,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 163,
        column: 7,
        span: 4286..4292,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 163,
        column: 8,
        span: 4292..4293,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 163,
        column: 10,
        span: 4293..4295,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 163,
        column: 11,
        span: 4295..4296,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "write",
        ),
        line: 163,
        column: 16,
        span: 4296..4301,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 163,
        column: 17,
        span: 4301..4302,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "string",
        ),
        line: 163,
        column: 23,
        span: 4302..4308,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 163,
        column: 24,
        span: 4308..4309,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "format",
        ),
        line: 163,
        column: 30,
        span: 4309..4315,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 163,
        column: 31,
        span: 4315..4316,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"x2 = %q\\n-- comment without ending EOS\"",
        ),
        line: 163,
        column: 71,
        span: 4316..4356,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 163,
        column: 72,
        span: 4356..4357,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "x1",
        ),
        line: 163,
        column: 75,
        span: 4358..4360,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 163,
        column: 76,
        span: 4360..4361,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 163,
        column: 77,
        span: 4361..4362,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 163,
        column: 78,
        span: 4362..4363,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 164,
        column: 3,
        span: 4364..4366,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 164,
        column: 4,
        span: 4366..4367,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "close",
        ),
        line: 164,
        column: 9,
        span: 4367..4372,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 164,
        column: 10,
        span: 4372..4373,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 164,
        column: 11,
        span: 4373..4374,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 165,
        column: 7,
        span: 4375..4381,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 165,
        column: 8,
        span: 4381..4382,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "loadfile",
        ),
        line: 165,
        column: 16,
        span: 4382..4390,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 165,
        column: 17,
        span: 4390..4391,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "file",
        ),
        line: 165,
        column: 21,
        span: 4391..4395,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 165,
        column: 22,
        span: 4395..4396,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 165,
        column: 23,
        span: 4396..4397,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 165,
        column: 24,
        span: 4397..4398,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 165,
        column: 25,
        span: 4398..4399,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 166,
        column: 7,
        span: 4400..4406,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 166,
        column: 8,
        span: 4406..4407,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "x1",
        ),
        line: 166,
        column: 10,
        span: 4407..4409,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 166,
        column: 13,
        span: 4410..4412,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "x2",
        ),
        line: 166,
        column: 16,
        span: 4413..4415,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 166,
        column: 17,
        span: 4415..4416,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "print",
        ),
        line: 167,
        column: 6,
        span: 4417..4422,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 167,
        column: 7,
        span: 4422..4423,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'+'",
        ),
        line: 167,
        column: 10,
        span: 4423..4426,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 167,
        column: 11,
        span: 4426..4427,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 168,
        column: 7,
        span: 4428..4434,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 168,
        column: 8,
        span: 4434..4435,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "os",
        ),
        line: 168,
        column: 10,
        span: 4435..4437,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 168,
        column: 11,
        span: 4437..4438,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "remove",
        ),
        line: 168,
        column: 17,
        span: 4438..4444,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 168,
        column: 18,
        span: 4444..4445,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "file",
        ),
        line: 168,
        column: 22,
        span: 4445..4449,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 168,
        column: 23,
        span: 4449..4450,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 168,
        column: 24,
        span: 4450..4451,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 169,
        column: 7,
        span: 4452..4458,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 169,
        column: 8,
        span: 4458..4459,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "os",
        ),
        line: 169,
        column: 10,
        span: 4459..4461,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 169,
        column: 11,
        span: 4461..4462,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "remove",
        ),
        line: 169,
        column: 17,
        span: 4462..4468,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 169,
        column: 18,
        span: 4468..4469,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "file",
        ),
        line: 169,
        column: 22,
        span: 4469..4473,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 169,
        column: 23,
        span: 4473..4474,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 169,
        column: 26,
        span: 4475..4477,
    },
    Token {
        kind: Nil,
        lexeme: Symbol(
            "nil",
        ),
        line: 169,
        column: 30,
        span: 4478..4481,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 169,
        column: 31,
        span: 4481..4482,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 170,
        column: 7,
        span: 4483..4489,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 170,
        column: 8,
        span: 4489..4490,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "os",
        ),
        line: 170,
        column: 10,
        span: 4490..4492,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 170,
        column: 11,
        span: 4492..4493,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "remove",
        ),
        line: 170,
        column: 17,
        span: 4493..4499,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 170,
        column: 18,
        span: 4499..4500,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "otherfile",
        ),
        line: 170,
        column: 27,
        span: 4500..4509,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 170,
        column: 28,
        span: 4509..4510,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 170,
        column: 31,
        span: 4511..4513,
    },
    Token {
        kind: Nil,
        lexeme: Symbol(
            "nil",
        ),
        line: 170,
        column: 35,
        span: 4514..4517,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 170,
        column: 36,
        span: 4517..4518,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 172,
        column: 3,
        span: 4520..4522,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 172,
        column: 4,
        span: 4522..4523,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "output",
        ),
        line: 172,
        column: 10,
        span: 4523..4529,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 172,
        column: 11,
        span: 4529..4530,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "file",
        ),
        line: 172,
        column: 15,
        span: 4530..4534,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 172,
        column: 16,
        span: 4534..4535,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 173,
        column: 7,
        span: 4536..4542,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 173,
        column: 8,
        span: 4542..4543,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 173,
        column: 10,
        span: 4543..4545,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 173,
        column: 11,
        span: 4545..4546,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "write",
        ),
        line: 173,
        column: 16,
        span: 4546..4551,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 173,
        column: 17,
        span: 4551..4552,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"qualquer coisa\\n\"",
        ),
        line: 173,
        column: 35,
        span: 4552..4570,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 173,
        column: 36,
        span: 4570..4571,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 173,
        column: 37,
        span: 4571..4572,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 174,
        column: 7,
        span: 4573..4579,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 174,
        column: 8,
        span: 4579..4580,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 174,
        column: 10,
        span: 4580..4582,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 174,
        column: 11,
        span: 4582..4583,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "write",
        ),
        line: 174,
        column: 16,
        span: 4583..4588,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 174,
        column: 17,
        span: 4588..4589,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"mais qualquer coisa\"",
        ),
        line: 174,
        column: 38,
        span: 4589..4610,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 174,
        column: 39,
        span: 4610..4611,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 174,
        column: 40,
        span: 4611..4612,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 175,
        column: 3,
        span: 4613..4615,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 175,
        column: 4,
        span: 4615..4616,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "close",
        ),
        line: 175,
        column: 9,
        span: 4616..4621,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 175,
        column: 10,
        span: 4621..4622,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 175,
        column: 11,
        span: 4622..4623,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 176,
        column: 3,
        span: 4624..4626,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 176,
        column: 4,
        span: 4626..4627,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "output",
        ),
        line: 176,
        column: 10,
        span: 4627..4633,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 176,
        column: 11,
        span: 4633..4634,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 176,
        column: 17,
        span: 4634..4640,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 176,
        column: 18,
        span: 4640..4641,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 176,
        column: 20,
        span: 4641..4643,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 176,
        column: 21,
        span: 4643..4644,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "open",
        ),
        line: 176,
        column: 25,
        span: 4644..4648,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 176,
        column: 26,
        span: 4648..4649,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "otherfile",
        ),
        line: 176,
        column: 35,
        span: 4649..4658,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 176,
        column: 36,
        span: 4658..4659,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'wb'",
        ),
        line: 176,
        column: 41,
        span: 4660..4664,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 176,
        column: 42,
        span: 4664..4665,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 176,
        column: 43,
        span: 4665..4666,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 176,
        column: 44,
        span: 4666..4667,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 177,
        column: 7,
        span: 4668..4674,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 177,
        column: 8,
        span: 4674..4675,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 177,
        column: 10,
        span: 4675..4677,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 177,
        column: 11,
        span: 4677..4678,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "write",
        ),
        line: 177,
        column: 16,
        span: 4678..4683,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 177,
        column: 17,
        span: 4683..4684,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"outra coisa\\0\\1\\3\\0\\0\\0\\0\\255\\0\"",
        ),
        line: 177,
        column: 50,
        span: 4684..4717,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 177,
        column: 51,
        span: 4717..4718,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 177,
        column: 52,
        span: 4718..4719,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 178,
        column: 3,
        span: 4720..4722,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 178,
        column: 4,
        span: 4722..4723,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "close",
        ),
        line: 178,
        column: 9,
        span: 4723..4728,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 178,
        column: 10,
        span: 4728..4729,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 178,
        column: 11,
        span: 4729..4730,
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        line: 180,
        column: 6,
        span: 4732..4737,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "filehandle",
        ),
        line: 180,
        column: 17,
        span: 4738..4748,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 180,
        column: 19,
        span: 4749..4750,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 180,
        column: 26,
        span: 4751..4757,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 180,
        column: 27,
        span: 4757..4758,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 180,
        column: 29,
        span: 4758..4760,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 180,
        column: 30,
        span: 4760..4761,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "open",
        ),
        line: 180,
        column: 34,
        span: 4761..4765,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 180,
        column: 35,
        span: 4765..4766,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "file",
        ),
        line: 180,
        column: 39,
        span: 4766..4770,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 180,
        column: 40,
        span: 4770..4771,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'r'",
        ),
        line: 180,
        column: 44,
        span: 4772..4775,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 180,
        column: 45,
        span: 4775..4776,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 180,
        column: 46,
        span: 4776..4777,
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        line: 181,
        column: 6,
        span: 4778..4783,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "otherfilehandle",
        ),
        line: 181,
        column: 22,
        span: 4784..4799,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 181,
        column: 24,
        span: 4800..4801,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 181,
        column: 31,
        span: 4802..4808,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 181,
        column: 32,
        span: 4808..4809,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 181,
        column: 34,
        span: 4809..4811,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 181,
        column: 35,
        span: 4811..4812,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "open",
        ),
        line: 181,
        column: 39,
        span: 4812..4816,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 181,
        column: 40,
        span: 4816..4817,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "otherfile",
        ),
        line: 181,
        column: 49,
        span: 4817..4826,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 181,
        column: 50,
        span: 4826..4827,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'rb'",
        ),
        line: 181,
        column: 55,
        span: 4828..4832,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 181,
        column: 56,
        span: 4832..4833,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 181,
        column: 57,
        span: 4833..4834,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 182,
        column: 7,
        span: 4835..4841,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 182,
        column: 8,
        span: 4841..4842,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "filehandle",
        ),
        line: 182,
        column: 18,
        span: 4842..4852,
    },
    Token {
        kind: NotEquals,
        lexeme: Symbol(
            "~=",
        ),
        line: 182,
        column: 21,
        span: 4853..4855,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "otherfilehandle",
        ),
        line: 182,
        column: 37,
        span: 4856..4871,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 182,
        column: 38,
        span: 4871..4872,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 183,
        column: 7,
        span: 4873..4879,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 183,
        column: 8,
        span: 4879..4880,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "type",
        ),
        line: 183,
        column: 12,
        span: 4880..4884,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 183,
        column: 13,
        span: 4884..4885,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "filehandle",
        ),
        line: 183,
        column: 23,
        span: 4885..4895,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 183,
        column: 24,
        span: 4895..4896,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 183,
        column: 27,
        span: 4897..4899,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"userdata\"",
        ),
        line: 183,
        column: 38,
        span: 4900..4910,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 183,
        column: 39,
        span: 4910..4911,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 184,
        column: 7,
        span: 4912..4918,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 184,
        column: 8,
        span: 4918..4919,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "filehandle",
        ),
        line: 184,
        column: 18,
        span: 4919..4929,
    },
    Token {
        kind: Colon,
        lexeme: Symbol(
            ":",
        ),
        line: 184,
        column: 19,
        span: 4929..4930,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "read",
        ),
        line: 184,
        column: 23,
        span: 4930..4934,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 184,
        column: 24,
        span: 4934..4935,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'*l'",
        ),
        line: 184,
        column: 28,
        span: 4935..4939,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 184,
        column: 29,
        span: 4939..4940,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 184,
        column: 32,
        span: 4941..4943,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"qualquer coisa\"",
        ),
        line: 184,
        column: 49,
        span: 4944..4960,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 184,
        column: 50,
        span: 4960..4961,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 185,
        column: 3,
        span: 4962..4964,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 185,
        column: 4,
        span: 4964..4965,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "input",
        ),
        line: 185,
        column: 9,
        span: 4965..4970,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 185,
        column: 10,
        span: 4970..4971,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "otherfilehandle",
        ),
        line: 185,
        column: 25,
        span: 4971..4986,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 185,
        column: 26,
        span: 4986..4987,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 186,
        column: 7,
        span: 4988..4994,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 186,
        column: 8,
        span: 4994..4995,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 186,
        column: 10,
        span: 4995..4997,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 186,
        column: 11,
        span: 4997..4998,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "read",
        ),
        line: 186,
        column: 15,
        span: 4998..5002,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 186,
        column: 16,
        span: 5002..5003,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "string",
        ),
        line: 186,
        column: 22,
        span: 5003..5009,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 186,
        column: 23,
        span: 5009..5010,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "len",
        ),
        line: 186,
        column: 26,
        span: 5010..5013,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"outra coisa\"",
        ),
        line: 186,
        column: 40,
        span: 5014..5027,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 186,
        column: 41,
        span: 5027..5028,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 186,
        column: 44,
        span: 5029..5031,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"outra coisa\"",
        ),
        line: 186,
        column: 58,
        span: 5032..5045,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 186,
        column: 59,
        span: 5045..5046,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 187,
        column: 7,
        span: 5047..5053,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 187,
        column: 8,
        span: 5053..5054,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "filehandle",
        ),
        line: 187,
        column: 18,
        span: 5054..5064,
    },
    Token {
        kind: Colon,
        lexeme: Symbol(
            ":",
        ),
        line: 187,
        column: 19,
        span: 5064..5065,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "read",
        ),
        line: 187,
        column: 23,
        span: 5065..5069,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 187,
        column: 24,
        span: 5069..5070,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'*l'",
        ),
        line: 187,
        column: 28,
        span: 5070..5074,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 187,
        column: 29,
        span: 5074..5075,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 187,
        column: 32,
        span: 5076..5078,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"mais qualquer coisa\"",
        ),
        line: 187,
        column: 54,
        span: 5079..5100,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 187,
        column: 55,
        span: 5100..5101,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "filehandle",
        ),
        line: 188,
        column: 11,
        span: 5102..5112,
    },
    Token {
        kind: Colon,
        lexeme: Symbol(
            ":",
        ),
        line: 188,
        column: 12,
        span: 5112..5113,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "close",
        ),
        line: 188,
        column: 17,
        span: 5113..5118,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 188,
        column: 18,
        span: 5118..5119,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 188,
        column: 19,
        span: 5119..5120,
    },
    Token {
        kind: Semicolon,
        lexeme: Symbol(
            ";",
        ),
        line: 188,
        column: 20,
        span: 5120..5121,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 189,
        column: 7,
        span: 5122..5128,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 189,
        column: 8,
        span: 5128..5129,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "type",
        ),
        line: 189,
        column: 12,
        span: 5129..5133,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 189,
        column: 13,
        span: 5133..5134,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "filehandle",
        ),
        line: 189,
        column: 23,
        span: 5134..5144,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 189,
        column: 24,
        span: 5144..5145,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 189,
        column: 27,
        span: 5146..5148,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"userdata\"",
        ),
        line: 189,
        column: 38,
        span: 5149..5159,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 189,
        column: 39,
        span: 5159..5160,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 190,
        column: 3,
        span: 5161..5163,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 190,
        column: 4,
        span: 5163..5164,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "input",
        ),
        line: 190,
        column: 9,
        span: 5164..5169,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 190,
        column: 10,
        span: 5169..5170,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "otherfilehandle",
        ),
        line: 190,
        column: 25,
        span: 5170..5185,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 190,
        column: 26,
        span: 5185..5186,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 191,
        column: 7,
        span: 5187..5193,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 191,
        column: 8,
        span: 5193..5194,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 191,
        column: 10,
        span: 5194..5196,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 191,
        column: 11,
        span: 5196..5197,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "read",
        ),
        line: 191,
        column: 15,
        span: 5197..5201,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 191,
        column: 16,
        span: 5201..5202,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "4",
                    after_decimal: "",
                },
            ),
        ),
        line: 191,
        column: 17,
        span: 5201..5203,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 191,
        column: 18,
        span: 5203..5204,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 191,
        column: 21,
        span: 5205..5207,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"\\0\\1\\3\\0\"",
        ),
        line: 191,
        column: 32,
        span: 5208..5218,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 191,
        column: 33,
        span: 5218..5219,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 192,
        column: 7,
        span: 5220..5226,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 192,
        column: 8,
        span: 5226..5227,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 192,
        column: 10,
        span: 5227..5229,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 192,
        column: 11,
        span: 5229..5230,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "read",
        ),
        line: 192,
        column: 15,
        span: 5230..5234,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 192,
        column: 16,
        span: 5234..5235,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "3",
                    after_decimal: "",
                },
            ),
        ),
        line: 192,
        column: 17,
        span: 5234..5236,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 192,
        column: 18,
        span: 5236..5237,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 192,
        column: 21,
        span: 5238..5240,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"\\0\\0\\0\"",
        ),
        line: 192,
        column: 30,
        span: 5241..5249,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 192,
        column: 31,
        span: 5249..5250,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 193,
        column: 7,
        span: 5251..5257,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 193,
        column: 8,
        span: 5257..5258,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 193,
        column: 10,
        span: 5258..5260,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 193,
        column: 11,
        span: 5260..5261,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "read",
        ),
        line: 193,
        column: 15,
        span: 5261..5265,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 193,
        column: 16,
        span: 5265..5266,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "0",
                    after_decimal: "",
                },
            ),
        ),
        line: 193,
        column: 17,
        span: 5265..5267,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 193,
        column: 18,
        span: 5267..5268,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 193,
        column: 21,
        span: 5269..5271,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"\"",
        ),
        line: 193,
        column: 24,
        span: 5272..5274,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 193,
        column: 25,
        span: 5274..5275,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 194,
        column: 7,
        span: 5294..5300,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 194,
        column: 8,
        span: 5300..5301,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 194,
        column: 10,
        span: 5301..5303,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 194,
        column: 11,
        span: 5303..5304,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "read",
        ),
        line: 194,
        column: 15,
        span: 5304..5308,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 194,
        column: 16,
        span: 5308..5309,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "1",
                    after_decimal: "",
                },
            ),
        ),
        line: 194,
        column: 17,
        span: 5308..5310,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 194,
        column: 18,
        span: 5310..5311,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 194,
        column: 21,
        span: 5312..5314,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"\\255\"",
        ),
        line: 194,
        column: 28,
        span: 5315..5321,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 194,
        column: 29,
        span: 5321..5322,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 195,
        column: 7,
        span: 5323..5329,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 195,
        column: 8,
        span: 5329..5330,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 195,
        column: 10,
        span: 5330..5332,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 195,
        column: 11,
        span: 5332..5333,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "read",
        ),
        line: 195,
        column: 15,
        span: 5333..5337,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 195,
        column: 16,
        span: 5337..5338,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'*a'",
        ),
        line: 195,
        column: 20,
        span: 5338..5342,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 195,
        column: 21,
        span: 5342..5343,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 195,
        column: 24,
        span: 5344..5346,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"\\0\"",
        ),
        line: 195,
        column: 29,
        span: 5347..5351,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 195,
        column: 30,
        span: 5351..5352,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 196,
        column: 7,
        span: 5353..5359,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 196,
        column: 8,
        span: 5359..5360,
    },
    Token {
        kind: Not,
        lexeme: Symbol(
            "not",
        ),
        line: 196,
        column: 11,
        span: 5360..5363,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 196,
        column: 14,
        span: 5364..5366,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 196,
        column: 15,
        span: 5366..5367,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "read",
        ),
        line: 196,
        column: 19,
        span: 5367..5371,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 196,
        column: 20,
        span: 5371..5372,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "0",
                    after_decimal: "",
                },
            ),
        ),
        line: 196,
        column: 21,
        span: 5371..5373,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 196,
        column: 22,
        span: 5373..5374,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 196,
        column: 23,
        span: 5374..5375,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 197,
        column: 7,
        span: 5376..5382,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 197,
        column: 8,
        span: 5382..5383,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "otherfilehandle",
        ),
        line: 197,
        column: 23,
        span: 5383..5398,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 197,
        column: 26,
        span: 5399..5401,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 197,
        column: 29,
        span: 5402..5404,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 197,
        column: 30,
        span: 5404..5405,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "input",
        ),
        line: 197,
        column: 35,
        span: 5405..5410,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 197,
        column: 36,
        span: 5410..5411,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 197,
        column: 37,
        span: 5411..5412,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 197,
        column: 38,
        span: 5412..5413,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "otherfilehandle",
        ),
        line: 198,
        column: 16,
        span: 5414..5429,
    },
    Token {
        kind: Colon,
        lexeme: Symbol(
            ":",
        ),
        line: 198,
        column: 17,
        span: 5429..5430,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "close",
        ),
        line: 198,
        column: 22,
        span: 5430..5435,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 198,
        column: 23,
        span: 5435..5436,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 198,
        column: 24,
        span: 5436..5437,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 199,
        column: 7,
        span: 5438..5444,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 199,
        column: 8,
        span: 5444..5445,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "os",
        ),
        line: 199,
        column: 10,
        span: 5445..5447,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 199,
        column: 11,
        span: 5447..5448,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "remove",
        ),
        line: 199,
        column: 17,
        span: 5448..5454,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 199,
        column: 18,
        span: 5454..5455,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "file",
        ),
        line: 199,
        column: 22,
        span: 5455..5459,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 199,
        column: 23,
        span: 5459..5460,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 199,
        column: 24,
        span: 5460..5461,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 200,
        column: 7,
        span: 5462..5468,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 200,
        column: 8,
        span: 5468..5469,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "os",
        ),
        line: 200,
        column: 10,
        span: 5469..5471,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 200,
        column: 11,
        span: 5471..5472,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "remove",
        ),
        line: 200,
        column: 17,
        span: 5472..5478,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 200,
        column: 18,
        span: 5478..5479,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "otherfile",
        ),
        line: 200,
        column: 27,
        span: 5479..5488,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 200,
        column: 28,
        span: 5488..5489,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 200,
        column: 29,
        span: 5489..5490,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "collectgarbage",
        ),
        line: 201,
        column: 15,
        span: 5491..5505,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 201,
        column: 16,
        span: 5505..5506,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 201,
        column: 17,
        span: 5506..5507,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 203,
        column: 3,
        span: 5509..5511,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 203,
        column: 4,
        span: 5511..5512,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "output",
        ),
        line: 203,
        column: 10,
        span: 5512..5518,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 203,
        column: 11,
        span: 5518..5519,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "file",
        ),
        line: 203,
        column: 15,
        span: 5519..5523,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 203,
        column: 16,
        span: 5523..5524,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 204,
        column: 3,
        span: 5525..5527,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 204,
        column: 4,
        span: 5527..5528,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "write",
        ),
        line: 204,
        column: 9,
        span: 5528..5533,
    },
    Token {
        kind: MultilineString,
        lexeme: Symbol(
            "[[\n 123.4\t-56e-2  not a number\nsecond line\nthird line\n\nand the rest of the file\n]]",
        ),
        line: 210,
        column: 3,
        span: 5534..5616,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 211,
        column: 3,
        span: 5617..5619,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 211,
        column: 4,
        span: 5619..5620,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "close",
        ),
        line: 211,
        column: 9,
        span: 5620..5625,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 211,
        column: 10,
        span: 5625..5626,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 211,
        column: 11,
        span: 5626..5627,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 212,
        column: 3,
        span: 5628..5630,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 212,
        column: 4,
        span: 5630..5631,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "input",
        ),
        line: 212,
        column: 9,
        span: 5631..5636,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 212,
        column: 10,
        span: 5636..5637,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "file",
        ),
        line: 212,
        column: 14,
        span: 5637..5641,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 212,
        column: 15,
        span: 5641..5642,
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        line: 213,
        column: 6,
        span: 5643..5648,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "_",
        ),
        line: 213,
        column: 8,
        span: 5649..5650,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 213,
        column: 9,
        span: 5650..5651,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 213,
        column: 11,
        span: 5652..5653,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 213,
        column: 12,
        span: 5653..5654,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "b",
        ),
        line: 213,
        column: 14,
        span: 5655..5656,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 213,
        column: 15,
        span: 5656..5657,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "c",
        ),
        line: 213,
        column: 17,
        span: 5658..5659,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 213,
        column: 18,
        span: 5659..5660,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "d",
        ),
        line: 213,
        column: 20,
        span: 5661..5662,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 213,
        column: 21,
        span: 5662..5663,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "e",
        ),
        line: 213,
        column: 23,
        span: 5664..5665,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 213,
        column: 24,
        span: 5665..5666,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "h",
        ),
        line: 213,
        column: 26,
        span: 5667..5668,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 213,
        column: 27,
        span: 5668..5669,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "__",
        ),
        line: 213,
        column: 30,
        span: 5670..5672,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 213,
        column: 32,
        span: 5673..5674,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 213,
        column: 35,
        span: 5675..5677,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 213,
        column: 36,
        span: 5677..5678,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "read",
        ),
        line: 213,
        column: 40,
        span: 5678..5682,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 213,
        column: 41,
        span: 5682..5683,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "1",
                    after_decimal: "",
                },
            ),
        ),
        line: 213,
        column: 42,
        span: 5682..5684,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 213,
        column: 43,
        span: 5684..5685,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'*n'",
        ),
        line: 213,
        column: 48,
        span: 5686..5690,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 213,
        column: 49,
        span: 5690..5691,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'*n'",
        ),
        line: 213,
        column: 54,
        span: 5692..5696,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 213,
        column: 55,
        span: 5696..5697,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'*l'",
        ),
        line: 213,
        column: 60,
        span: 5698..5702,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 213,
        column: 61,
        span: 5702..5703,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'*l'",
        ),
        line: 213,
        column: 66,
        span: 5704..5708,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 213,
        column: 67,
        span: 5708..5709,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'*l'",
        ),
        line: 213,
        column: 72,
        span: 5710..5714,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 213,
        column: 73,
        span: 5714..5715,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'*a'",
        ),
        line: 213,
        column: 78,
        span: 5716..5720,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 213,
        column: 79,
        span: 5720..5721,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "10",
                    after_decimal: "",
                },
            ),
        ),
        line: 213,
        column: 82,
        span: 5721..5724,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 213,
        column: 83,
        span: 5724..5725,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 214,
        column: 7,
        span: 5726..5732,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 214,
        column: 8,
        span: 5732..5733,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 214,
        column: 10,
        span: 5733..5735,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 214,
        column: 11,
        span: 5735..5736,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "close",
        ),
        line: 214,
        column: 16,
        span: 5736..5741,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 214,
        column: 17,
        span: 5741..5742,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 214,
        column: 19,
        span: 5742..5744,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 214,
        column: 20,
        span: 5744..5745,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "input",
        ),
        line: 214,
        column: 25,
        span: 5745..5750,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 214,
        column: 26,
        span: 5750..5751,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 214,
        column: 27,
        span: 5751..5752,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 214,
        column: 28,
        span: 5752..5753,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 214,
        column: 29,
        span: 5753..5754,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 215,
        column: 7,
        span: 5755..5761,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 215,
        column: 8,
        span: 5761..5762,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "_",
        ),
        line: 215,
        column: 9,
        span: 5762..5763,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 215,
        column: 12,
        span: 5764..5766,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "' '",
        ),
        line: 215,
        column: 16,
        span: 5767..5770,
    },
    Token {
        kind: And,
        lexeme: Symbol(
            "and",
        ),
        line: 215,
        column: 20,
        span: 5771..5774,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "__",
        ),
        line: 215,
        column: 23,
        span: 5775..5777,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 215,
        column: 26,
        span: 5778..5780,
    },
    Token {
        kind: Nil,
        lexeme: Symbol(
            "nil",
        ),
        line: 215,
        column: 30,
        span: 5781..5784,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 215,
        column: 31,
        span: 5784..5785,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 216,
        column: 7,
        span: 5786..5792,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 216,
        column: 8,
        span: 5792..5793,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "type",
        ),
        line: 216,
        column: 12,
        span: 5793..5797,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 216,
        column: 13,
        span: 5797..5798,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 216,
        column: 14,
        span: 5798..5799,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 216,
        column: 15,
        span: 5799..5800,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 216,
        column: 18,
        span: 5801..5803,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'number'",
        ),
        line: 216,
        column: 27,
        span: 5804..5812,
    },
    Token {
        kind: And,
        lexeme: Symbol(
            "and",
        ),
        line: 216,
        column: 31,
        span: 5813..5816,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 216,
        column: 33,
        span: 5817..5818,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 216,
        column: 36,
        span: 5819..5821,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "123",
                    after_decimal: ".4",
                },
            ),
        ),
        line: 216,
        column: 42,
        span: 5821..5827,
    },
    Token {
        kind: And,
        lexeme: Symbol(
            "and",
        ),
        line: 216,
        column: 46,
        span: 5828..5831,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "b",
        ),
        line: 216,
        column: 48,
        span: 5832..5833,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 216,
        column: 51,
        span: 5834..5836,
    },
    Token {
        kind: Minus,
        lexeme: Symbol(
            "-",
        ),
        line: 216,
        column: 53,
        span: 5837..5838,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Scientific {
                mantissa: Decimal {
                    before_decimal: "56",
                    after_decimal: "",
                },
                exponent: "-2",
            },
        ),
        line: 216,
        column: 58,
        span: 5837..5843,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 216,
        column: 59,
        span: 5843..5844,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 217,
        column: 7,
        span: 5845..5851,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 217,
        column: 8,
        span: 5851..5852,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "d",
        ),
        line: 217,
        column: 9,
        span: 5852..5853,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 217,
        column: 12,
        span: 5854..5856,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'second line'",
        ),
        line: 217,
        column: 26,
        span: 5857..5870,
    },
    Token {
        kind: And,
        lexeme: Symbol(
            "and",
        ),
        line: 217,
        column: 30,
        span: 5871..5874,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "e",
        ),
        line: 217,
        column: 32,
        span: 5875..5876,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 217,
        column: 35,
        span: 5877..5879,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'third line'",
        ),
        line: 217,
        column: 48,
        span: 5880..5892,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 217,
        column: 49,
        span: 5892..5893,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 218,
        column: 7,
        span: 5894..5900,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 218,
        column: 8,
        span: 5900..5901,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "h",
        ),
        line: 218,
        column: 9,
        span: 5901..5902,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 218,
        column: 12,
        span: 5903..5905,
    },
    Token {
        kind: MultilineString,
        lexeme: Symbol(
            "[[\n\nand the rest of the file\n]]",
        ),
        line: 221,
        column: 3,
        span: 5906..5937,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 221,
        column: 4,
        span: 5937..5938,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 222,
        column: 7,
        span: 5939..5945,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 222,
        column: 8,
        span: 5945..5946,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "os",
        ),
        line: 222,
        column: 10,
        span: 5946..5948,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 222,
        column: 11,
        span: 5948..5949,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "remove",
        ),
        line: 222,
        column: 17,
        span: 5949..5955,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 222,
        column: 18,
        span: 5955..5956,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "file",
        ),
        line: 222,
        column: 22,
        span: 5956..5960,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 222,
        column: 23,
        span: 5960..5961,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 222,
        column: 24,
        span: 5961..5962,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "collectgarbage",
        ),
        line: 223,
        column: 15,
        span: 5963..5977,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 223,
        column: 16,
        span: 5977..5978,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 223,
        column: 17,
        span: 5978..5979,
    },
    Token {
        kind: Do,
        lexeme: Symbol(
            "do",
        ),
        line: 226,
        column: 0,
        span: 6000..6002,
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        line: 227,
        column: 8,
        span: 6005..6010,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "f",
        ),
        line: 227,
        column: 10,
        span: 6011..6012,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 227,
        column: 12,
        span: 6013..6014,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 227,
        column: 19,
        span: 6015..6021,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 227,
        column: 20,
        span: 6021..6022,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 227,
        column: 22,
        span: 6022..6024,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 227,
        column: 23,
        span: 6024..6025,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "open",
        ),
        line: 227,
        column: 27,
        span: 6025..6029,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 227,
        column: 28,
        span: 6029..6030,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "file",
        ),
        line: 227,
        column: 32,
        span: 6030..6034,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 227,
        column: 33,
        span: 6034..6035,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"w\"",
        ),
        line: 227,
        column: 37,
        span: 6036..6039,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 227,
        column: 38,
        span: 6039..6040,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 227,
        column: 39,
        span: 6040..6041,
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        line: 228,
        column: 8,
        span: 6044..6049,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "fr",
        ),
        line: 228,
        column: 11,
        span: 6050..6052,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 228,
        column: 13,
        span: 6053..6054,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 228,
        column: 20,
        span: 6055..6061,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 228,
        column: 21,
        span: 6061..6062,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 228,
        column: 23,
        span: 6062..6064,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 228,
        column: 24,
        span: 6064..6065,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "open",
        ),
        line: 228,
        column: 28,
        span: 6065..6069,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 228,
        column: 29,
        span: 6069..6070,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "file",
        ),
        line: 228,
        column: 33,
        span: 6070..6074,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 228,
        column: 34,
        span: 6074..6075,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"r\"",
        ),
        line: 228,
        column: 38,
        span: 6076..6079,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 228,
        column: 39,
        span: 6079..6080,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 228,
        column: 40,
        span: 6080..6081,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 229,
        column: 9,
        span: 6084..6090,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 229,
        column: 10,
        span: 6090..6091,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "f",
        ),
        line: 229,
        column: 11,
        span: 6091..6092,
    },
    Token {
        kind: Colon,
        lexeme: Symbol(
            ":",
        ),
        line: 229,
        column: 12,
        span: 6092..6093,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "setvbuf",
        ),
        line: 229,
        column: 19,
        span: 6093..6100,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 229,
        column: 20,
        span: 6100..6101,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"full\"",
        ),
        line: 229,
        column: 26,
        span: 6101..6107,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 229,
        column: 27,
        span: 6107..6108,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "2000",
                    after_decimal: "",
                },
            ),
        ),
        line: 229,
        column: 32,
        span: 6108..6113,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 229,
        column: 33,
        span: 6113..6114,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 229,
        column: 34,
        span: 6114..6115,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "f",
        ),
        line: 230,
        column: 4,
        span: 6118..6119,
    },
    Token {
        kind: Colon,
        lexeme: Symbol(
            ":",
        ),
        line: 230,
        column: 5,
        span: 6119..6120,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "write",
        ),
        line: 230,
        column: 10,
        span: 6120..6125,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 230,
        column: 11,
        span: 6125..6126,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"x\"",
        ),
        line: 230,
        column: 14,
        span: 6126..6129,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 230,
        column: 15,
        span: 6129..6130,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 231,
        column: 9,
        span: 6133..6139,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 231,
        column: 10,
        span: 6139..6140,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "fr",
        ),
        line: 231,
        column: 12,
        span: 6140..6142,
    },
    Token {
        kind: Colon,
        lexeme: Symbol(
            ":",
        ),
        line: 231,
        column: 13,
        span: 6142..6143,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "read",
        ),
        line: 231,
        column: 17,
        span: 6143..6147,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 231,
        column: 18,
        span: 6147..6148,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"*all\"",
        ),
        line: 231,
        column: 24,
        span: 6148..6154,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 231,
        column: 25,
        span: 6154..6155,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 231,
        column: 28,
        span: 6156..6158,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"\"",
        ),
        line: 231,
        column: 31,
        span: 6159..6161,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 231,
        column: 32,
        span: 6161..6162,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "f",
        ),
        line: 232,
        column: 4,
        span: 6204..6205,
    },
    Token {
        kind: Colon,
        lexeme: Symbol(
            ":",
        ),
        line: 232,
        column: 5,
        span: 6205..6206,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "close",
        ),
        line: 232,
        column: 10,
        span: 6206..6211,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 232,
        column: 11,
        span: 6211..6212,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 232,
        column: 12,
        span: 6212..6213,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "fr",
        ),
        line: 233,
        column: 5,
        span: 6216..6218,
    },
    Token {
        kind: Colon,
        lexeme: Symbol(
            ":",
        ),
        line: 233,
        column: 6,
        span: 6218..6219,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "seek",
        ),
        line: 233,
        column: 10,
        span: 6219..6223,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 233,
        column: 11,
        span: 6223..6224,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"set\"",
        ),
        line: 233,
        column: 16,
        span: 6224..6229,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 233,
        column: 17,
        span: 6229..6230,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 234,
        column: 9,
        span: 6233..6239,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 234,
        column: 10,
        span: 6239..6240,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "fr",
        ),
        line: 234,
        column: 12,
        span: 6240..6242,
    },
    Token {
        kind: Colon,
        lexeme: Symbol(
            ":",
        ),
        line: 234,
        column: 13,
        span: 6242..6243,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "read",
        ),
        line: 234,
        column: 17,
        span: 6243..6247,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 234,
        column: 18,
        span: 6247..6248,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"*all\"",
        ),
        line: 234,
        column: 24,
        span: 6248..6254,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 234,
        column: 25,
        span: 6254..6255,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 234,
        column: 28,
        span: 6256..6258,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"x\"",
        ),
        line: 234,
        column: 32,
        span: 6259..6262,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 234,
        column: 33,
        span: 6262..6263,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "f",
        ),
        line: 235,
        column: 4,
        span: 6288..6289,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 235,
        column: 6,
        span: 6290..6291,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 235,
        column: 13,
        span: 6292..6298,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 235,
        column: 14,
        span: 6298..6299,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 235,
        column: 16,
        span: 6299..6301,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 235,
        column: 17,
        span: 6301..6302,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "open",
        ),
        line: 235,
        column: 21,
        span: 6302..6306,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 235,
        column: 22,
        span: 6306..6307,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "file",
        ),
        line: 235,
        column: 26,
        span: 6307..6311,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 235,
        column: 27,
        span: 6311..6312,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 235,
        column: 28,
        span: 6312..6313,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"w\"",
        ),
        line: 235,
        column: 32,
        span: 6314..6317,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 235,
        column: 33,
        span: 6317..6318,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 236,
        column: 9,
        span: 6321..6327,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 236,
        column: 10,
        span: 6327..6328,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "f",
        ),
        line: 236,
        column: 11,
        span: 6328..6329,
    },
    Token {
        kind: Colon,
        lexeme: Symbol(
            ":",
        ),
        line: 236,
        column: 12,
        span: 6329..6330,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "setvbuf",
        ),
        line: 236,
        column: 19,
        span: 6330..6337,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 236,
        column: 20,
        span: 6337..6338,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"no\"",
        ),
        line: 236,
        column: 24,
        span: 6338..6342,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 236,
        column: 25,
        span: 6342..6343,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 236,
        column: 26,
        span: 6343..6344,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "f",
        ),
        line: 237,
        column: 4,
        span: 6347..6348,
    },
    Token {
        kind: Colon,
        lexeme: Symbol(
            ":",
        ),
        line: 237,
        column: 5,
        span: 6348..6349,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "write",
        ),
        line: 237,
        column: 10,
        span: 6349..6354,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 237,
        column: 11,
        span: 6354..6355,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"x\"",
        ),
        line: 237,
        column: 14,
        span: 6355..6358,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 237,
        column: 15,
        span: 6358..6359,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "fr",
        ),
        line: 238,
        column: 5,
        span: 6362..6364,
    },
    Token {
        kind: Colon,
        lexeme: Symbol(
            ":",
        ),
        line: 238,
        column: 6,
        span: 6364..6365,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "seek",
        ),
        line: 238,
        column: 10,
        span: 6365..6369,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 238,
        column: 11,
        span: 6369..6370,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"set\"",
        ),
        line: 238,
        column: 16,
        span: 6370..6375,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 238,
        column: 17,
        span: 6375..6376,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 239,
        column: 9,
        span: 6379..6385,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 239,
        column: 10,
        span: 6385..6386,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "fr",
        ),
        line: 239,
        column: 12,
        span: 6386..6388,
    },
    Token {
        kind: Colon,
        lexeme: Symbol(
            ":",
        ),
        line: 239,
        column: 13,
        span: 6388..6389,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "read",
        ),
        line: 239,
        column: 17,
        span: 6389..6393,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 239,
        column: 18,
        span: 6393..6394,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"*all\"",
        ),
        line: 239,
        column: 24,
        span: 6394..6400,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 239,
        column: 25,
        span: 6400..6401,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 239,
        column: 28,
        span: 6402..6404,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"x\"",
        ),
        line: 239,
        column: 32,
        span: 6405..6408,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 239,
        column: 33,
        span: 6408..6409,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "f",
        ),
        line: 240,
        column: 4,
        span: 6442..6443,
    },
    Token {
        kind: Colon,
        lexeme: Symbol(
            ":",
        ),
        line: 240,
        column: 5,
        span: 6443..6444,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "close",
        ),
        line: 240,
        column: 10,
        span: 6444..6449,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 240,
        column: 11,
        span: 6449..6450,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 240,
        column: 12,
        span: 6450..6451,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "f",
        ),
        line: 241,
        column: 4,
        span: 6454..6455,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 241,
        column: 6,
        span: 6456..6457,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 241,
        column: 13,
        span: 6458..6464,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 241,
        column: 14,
        span: 6464..6465,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 241,
        column: 16,
        span: 6465..6467,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 241,
        column: 17,
        span: 6467..6468,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "open",
        ),
        line: 241,
        column: 21,
        span: 6468..6472,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 241,
        column: 22,
        span: 6472..6473,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "file",
        ),
        line: 241,
        column: 26,
        span: 6473..6477,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 241,
        column: 27,
        span: 6477..6478,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"a\"",
        ),
        line: 241,
        column: 31,
        span: 6479..6482,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 241,
        column: 32,
        span: 6482..6483,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 241,
        column: 33,
        span: 6483..6484,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 242,
        column: 9,
        span: 6487..6493,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 242,
        column: 10,
        span: 6493..6494,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "f",
        ),
        line: 242,
        column: 11,
        span: 6494..6495,
    },
    Token {
        kind: Colon,
        lexeme: Symbol(
            ":",
        ),
        line: 242,
        column: 12,
        span: 6495..6496,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "setvbuf",
        ),
        line: 242,
        column: 19,
        span: 6496..6503,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 242,
        column: 20,
        span: 6503..6504,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"line\"",
        ),
        line: 242,
        column: 26,
        span: 6504..6510,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 242,
        column: 27,
        span: 6510..6511,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 242,
        column: 28,
        span: 6511..6512,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "f",
        ),
        line: 243,
        column: 4,
        span: 6515..6516,
    },
    Token {
        kind: Colon,
        lexeme: Symbol(
            ":",
        ),
        line: 243,
        column: 5,
        span: 6516..6517,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "write",
        ),
        line: 243,
        column: 10,
        span: 6517..6522,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 243,
        column: 11,
        span: 6522..6523,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"x\"",
        ),
        line: 243,
        column: 14,
        span: 6523..6526,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 243,
        column: 15,
        span: 6526..6527,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "fr",
        ),
        line: 244,
        column: 5,
        span: 6530..6532,
    },
    Token {
        kind: Colon,
        lexeme: Symbol(
            ":",
        ),
        line: 244,
        column: 6,
        span: 6532..6533,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "seek",
        ),
        line: 244,
        column: 10,
        span: 6533..6537,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 244,
        column: 11,
        span: 6537..6538,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"set\"",
        ),
        line: 244,
        column: 16,
        span: 6538..6543,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 244,
        column: 17,
        span: 6543..6544,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "1",
                    after_decimal: "",
                },
            ),
        ),
        line: 244,
        column: 19,
        span: 6544..6546,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 244,
        column: 20,
        span: 6546..6547,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 245,
        column: 9,
        span: 6550..6556,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 245,
        column: 10,
        span: 6556..6557,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "fr",
        ),
        line: 245,
        column: 12,
        span: 6557..6559,
    },
    Token {
        kind: Colon,
        lexeme: Symbol(
            ":",
        ),
        line: 245,
        column: 13,
        span: 6559..6560,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "read",
        ),
        line: 245,
        column: 17,
        span: 6560..6564,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 245,
        column: 18,
        span: 6564..6565,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"*all\"",
        ),
        line: 245,
        column: 24,
        span: 6565..6571,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 245,
        column: 25,
        span: 6571..6572,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 245,
        column: 28,
        span: 6573..6575,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"\"",
        ),
        line: 245,
        column: 31,
        span: 6576..6578,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 245,
        column: 32,
        span: 6578..6579,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "f",
        ),
        line: 246,
        column: 4,
        span: 6621..6622,
    },
    Token {
        kind: Colon,
        lexeme: Symbol(
            ":",
        ),
        line: 246,
        column: 5,
        span: 6622..6623,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "write",
        ),
        line: 246,
        column: 10,
        span: 6623..6628,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 246,
        column: 11,
        span: 6628..6629,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"a\\n\"",
        ),
        line: 246,
        column: 16,
        span: 6629..6634,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 246,
        column: 17,
        span: 6634..6635,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "fr",
        ),
        line: 247,
        column: 5,
        span: 6638..6640,
    },
    Token {
        kind: Colon,
        lexeme: Symbol(
            ":",
        ),
        line: 247,
        column: 6,
        span: 6640..6641,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "seek",
        ),
        line: 247,
        column: 10,
        span: 6641..6645,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 247,
        column: 11,
        span: 6645..6646,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"set\"",
        ),
        line: 247,
        column: 16,
        span: 6646..6651,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 247,
        column: 17,
        span: 6651..6652,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "1",
                    after_decimal: "",
                },
            ),
        ),
        line: 247,
        column: 19,
        span: 6652..6654,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 247,
        column: 20,
        span: 6654..6655,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 248,
        column: 9,
        span: 6658..6664,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 248,
        column: 10,
        span: 6664..6665,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "fr",
        ),
        line: 248,
        column: 12,
        span: 6665..6667,
    },
    Token {
        kind: Colon,
        lexeme: Symbol(
            ":",
        ),
        line: 248,
        column: 13,
        span: 6667..6668,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "read",
        ),
        line: 248,
        column: 17,
        span: 6668..6672,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 248,
        column: 18,
        span: 6672..6673,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"*all\"",
        ),
        line: 248,
        column: 24,
        span: 6673..6679,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 248,
        column: 25,
        span: 6679..6680,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 248,
        column: 28,
        span: 6681..6683,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"xa\\n\"",
        ),
        line: 248,
        column: 35,
        span: 6684..6690,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 248,
        column: 36,
        span: 6690..6691,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "f",
        ),
        line: 249,
        column: 4,
        span: 6722..6723,
    },
    Token {
        kind: Colon,
        lexeme: Symbol(
            ":",
        ),
        line: 249,
        column: 5,
        span: 6723..6724,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "close",
        ),
        line: 249,
        column: 10,
        span: 6724..6729,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 249,
        column: 11,
        span: 6729..6730,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 249,
        column: 12,
        span: 6730..6731,
    },
    Token {
        kind: Semicolon,
        lexeme: Symbol(
            ";",
        ),
        line: 249,
        column: 13,
        span: 6731..6732,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "fr",
        ),
        line: 250,
        column: 5,
        span: 6735..6737,
    },
    Token {
        kind: Colon,
        lexeme: Symbol(
            ":",
        ),
        line: 250,
        column: 6,
        span: 6737..6738,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "close",
        ),
        line: 250,
        column: 11,
        span: 6738..6743,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 250,
        column: 12,
        span: 6743..6744,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 250,
        column: 13,
        span: 6744..6745,
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        line: 251,
        column: 0,
        span: 6746..6749,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 255,
        column: 3,
        span: 6786..6788,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 255,
        column: 4,
        span: 6788..6789,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "output",
        ),
        line: 255,
        column: 10,
        span: 6789..6795,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 255,
        column: 11,
        span: 6795..6796,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "file",
        ),
        line: 255,
        column: 15,
        span: 6796..6800,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 255,
        column: 16,
        span: 6800..6801,
    },
    Token {
        kind: For,
        lexeme: Symbol(
            "for",
        ),
        line: 256,
        column: 4,
        span: 6802..6805,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "i",
        ),
        line: 256,
        column: 6,
        span: 6806..6807,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 256,
        column: 8,
        span: 6808..6809,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "1",
                    after_decimal: "",
                },
            ),
        ),
        line: 256,
        column: 10,
        span: 6809..6811,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 256,
        column: 11,
        span: 6811..6812,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "5001",
                    after_decimal: "",
                },
            ),
        ),
        line: 256,
        column: 16,
        span: 6812..6817,
    },
    Token {
        kind: Do,
        lexeme: Symbol(
            "do",
        ),
        line: 256,
        column: 19,
        span: 6818..6820,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 256,
        column: 22,
        span: 6821..6823,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 256,
        column: 23,
        span: 6823..6824,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "write",
        ),
        line: 256,
        column: 28,
        span: 6824..6829,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 256,
        column: 29,
        span: 6829..6830,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'0123456789123'",
        ),
        line: 256,
        column: 44,
        span: 6830..6845,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 256,
        column: 45,
        span: 6845..6846,
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        line: 256,
        column: 0,
        span: 6847..6850,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 257,
        column: 3,
        span: 6851..6853,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 257,
        column: 4,
        span: 6853..6854,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "write",
        ),
        line: 257,
        column: 9,
        span: 6854..6859,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 257,
        column: 10,
        span: 6859..6860,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'\\n12346'",
        ),
        line: 257,
        column: 19,
        span: 6860..6869,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 257,
        column: 20,
        span: 6869..6870,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 258,
        column: 3,
        span: 6871..6873,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 258,
        column: 4,
        span: 6873..6874,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "close",
        ),
        line: 258,
        column: 9,
        span: 6874..6879,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 258,
        column: 10,
        span: 6879..6880,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 258,
        column: 11,
        span: 6880..6881,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 259,
        column: 3,
        span: 6882..6884,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 259,
        column: 4,
        span: 6884..6885,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "input",
        ),
        line: 259,
        column: 9,
        span: 6885..6890,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 259,
        column: 10,
        span: 6890..6891,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "file",
        ),
        line: 259,
        column: 14,
        span: 6891..6895,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 259,
        column: 15,
        span: 6895..6896,
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        line: 260,
        column: 6,
        span: 6897..6902,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "x",
        ),
        line: 260,
        column: 8,
        span: 6903..6904,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 260,
        column: 10,
        span: 6905..6906,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 260,
        column: 13,
        span: 6907..6909,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 260,
        column: 14,
        span: 6909..6910,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "read",
        ),
        line: 260,
        column: 18,
        span: 6910..6914,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 260,
        column: 19,
        span: 6914..6915,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'*a'",
        ),
        line: 260,
        column: 23,
        span: 6915..6919,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 260,
        column: 24,
        span: 6919..6920,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 261,
        column: 3,
        span: 6921..6923,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 261,
        column: 4,
        span: 6923..6924,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "input",
        ),
        line: 261,
        column: 9,
        span: 6924..6929,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 261,
        column: 10,
        span: 6929..6930,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 261,
        column: 11,
        span: 6930..6931,
    },
    Token {
        kind: Colon,
        lexeme: Symbol(
            ":",
        ),
        line: 261,
        column: 12,
        span: 6931..6932,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "seek",
        ),
        line: 261,
        column: 16,
        span: 6932..6936,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 261,
        column: 17,
        span: 6936..6937,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'set'",
        ),
        line: 261,
        column: 22,
        span: 6937..6942,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 261,
        column: 23,
        span: 6942..6943,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "0",
                    after_decimal: "",
                },
            ),
        ),
        line: 261,
        column: 25,
        span: 6943..6945,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 261,
        column: 26,
        span: 6945..6946,
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        line: 262,
        column: 6,
        span: 6947..6952,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "y",
        ),
        line: 262,
        column: 8,
        span: 6953..6954,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 262,
        column: 10,
        span: 6955..6956,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 262,
        column: 13,
        span: 6957..6959,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 262,
        column: 14,
        span: 6959..6960,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "read",
        ),
        line: 262,
        column: 18,
        span: 6960..6964,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 262,
        column: 19,
        span: 6964..6965,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "30001",
                    after_decimal: "",
                },
            ),
        ),
        line: 262,
        column: 24,
        span: 6964..6970,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 262,
        column: 25,
        span: 6970..6971,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 262,
        column: 28,
        span: 6972..6974,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 262,
        column: 31,
        span: 6975..6977,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 262,
        column: 32,
        span: 6977..6978,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "read",
        ),
        line: 262,
        column: 36,
        span: 6978..6982,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 262,
        column: 37,
        span: 6982..6983,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "1005",
                    after_decimal: "",
                },
            ),
        ),
        line: 262,
        column: 41,
        span: 6982..6987,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 262,
        column: 42,
        span: 6987..6988,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 262,
        column: 45,
        span: 6989..6991,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 262,
        column: 48,
        span: 6992..6994,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 262,
        column: 49,
        span: 6994..6995,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "read",
        ),
        line: 262,
        column: 53,
        span: 6995..6999,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 262,
        column: 54,
        span: 6999..7000,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "0",
                    after_decimal: "",
                },
            ),
        ),
        line: 262,
        column: 55,
        span: 6999..7001,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 262,
        column: 56,
        span: 7001..7002,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 262,
        column: 59,
        span: 7003..7005,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 262,
        column: 62,
        span: 7006..7008,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 262,
        column: 63,
        span: 7008..7009,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "read",
        ),
        line: 262,
        column: 67,
        span: 7009..7013,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 262,
        column: 68,
        span: 7013..7014,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "1",
                    after_decimal: "",
                },
            ),
        ),
        line: 262,
        column: 69,
        span: 7013..7015,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 262,
        column: 70,
        span: 7015..7016,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 262,
        column: 73,
        span: 7017..7019,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 262,
        column: 76,
        span: 7020..7022,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 262,
        column: 77,
        span: 7022..7023,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "read",
        ),
        line: 262,
        column: 81,
        span: 7023..7027,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 262,
        column: 82,
        span: 7027..7028,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "100003",
                    after_decimal: "",
                },
            ),
        ),
        line: 262,
        column: 88,
        span: 7027..7034,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 262,
        column: 89,
        span: 7034..7035,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 263,
        column: 7,
        span: 7036..7042,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 263,
        column: 8,
        span: 7042..7043,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "x",
        ),
        line: 263,
        column: 9,
        span: 7043..7044,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 263,
        column: 12,
        span: 7045..7047,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "y",
        ),
        line: 263,
        column: 14,
        span: 7048..7049,
    },
    Token {
        kind: And,
        lexeme: Symbol(
            "and",
        ),
        line: 263,
        column: 18,
        span: 7050..7053,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "string",
        ),
        line: 263,
        column: 25,
        span: 7054..7060,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 263,
        column: 26,
        span: 7060..7061,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "len",
        ),
        line: 263,
        column: 29,
        span: 7061..7064,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 263,
        column: 30,
        span: 7064..7065,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "x",
        ),
        line: 263,
        column: 31,
        span: 7065..7066,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 263,
        column: 32,
        span: 7066..7067,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 263,
        column: 35,
        span: 7068..7070,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "5001",
                    after_decimal: "",
                },
            ),
        ),
        line: 263,
        column: 40,
        span: 7070..7075,
    },
    Token {
        kind: Star,
        lexeme: Symbol(
            "*",
        ),
        line: 263,
        column: 42,
        span: 7076..7077,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "13",
                    after_decimal: "",
                },
            ),
        ),
        line: 263,
        column: 45,
        span: 7077..7080,
    },
    Token {
        kind: Plus,
        lexeme: Symbol(
            "+",
        ),
        line: 263,
        column: 47,
        span: 7081..7082,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "6",
                    after_decimal: "",
                },
            ),
        ),
        line: 263,
        column: 49,
        span: 7082..7084,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 263,
        column: 50,
        span: 7084..7085,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 264,
        column: 3,
        span: 7086..7088,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 264,
        column: 4,
        span: 7088..7089,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "input",
        ),
        line: 264,
        column: 9,
        span: 7089..7094,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 264,
        column: 10,
        span: 7094..7095,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 264,
        column: 11,
        span: 7095..7096,
    },
    Token {
        kind: Colon,
        lexeme: Symbol(
            ":",
        ),
        line: 264,
        column: 12,
        span: 7096..7097,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "seek",
        ),
        line: 264,
        column: 16,
        span: 7097..7101,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 264,
        column: 17,
        span: 7101..7102,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'set'",
        ),
        line: 264,
        column: 22,
        span: 7102..7107,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 264,
        column: 23,
        span: 7107..7108,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "0",
                    after_decimal: "",
                },
            ),
        ),
        line: 264,
        column: 25,
        span: 7108..7110,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 264,
        column: 26,
        span: 7110..7111,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "y",
        ),
        line: 265,
        column: 2,
        span: 7112..7113,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 265,
        column: 4,
        span: 7114..7115,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 265,
        column: 7,
        span: 7116..7118,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 265,
        column: 8,
        span: 7118..7119,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "read",
        ),
        line: 265,
        column: 12,
        span: 7119..7123,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 265,
        column: 13,
        span: 7123..7124,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 265,
        column: 14,
        span: 7124..7125,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 266,
        column: 7,
        span: 7139..7145,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 266,
        column: 8,
        span: 7145..7146,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "x",
        ),
        line: 266,
        column: 9,
        span: 7146..7147,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 266,
        column: 12,
        span: 7148..7150,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "y",
        ),
        line: 266,
        column: 14,
        span: 7151..7152,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 266,
        column: 17,
        span: 7153..7155,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'\\n'",
        ),
        line: 266,
        column: 22,
        span: 7156..7160,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 266,
        column: 25,
        span: 7161..7163,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 266,
        column: 28,
        span: 7164..7166,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 266,
        column: 29,
        span: 7166..7167,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "read",
        ),
        line: 266,
        column: 33,
        span: 7167..7171,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 266,
        column: 34,
        span: 7171..7172,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 266,
        column: 35,
        span: 7172..7173,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 266,
        column: 36,
        span: 7173..7174,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 267,
        column: 7,
        span: 7175..7181,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 267,
        column: 8,
        span: 7181..7182,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 267,
        column: 10,
        span: 7182..7184,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 267,
        column: 11,
        span: 7184..7185,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "read",
        ),
        line: 267,
        column: 15,
        span: 7185..7189,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 267,
        column: 16,
        span: 7189..7190,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 267,
        column: 17,
        span: 7190..7191,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 267,
        column: 20,
        span: 7192..7194,
    },
    Token {
        kind: Nil,
        lexeme: Symbol(
            "nil",
        ),
        line: 267,
        column: 24,
        span: 7195..7198,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 267,
        column: 25,
        span: 7198..7199,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 268,
        column: 3,
        span: 7200..7202,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 268,
        column: 4,
        span: 7202..7203,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "close",
        ),
        line: 268,
        column: 9,
        span: 7203..7208,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 268,
        column: 10,
        span: 7208..7209,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 268,
        column: 12,
        span: 7209..7211,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 268,
        column: 13,
        span: 7211..7212,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "input",
        ),
        line: 268,
        column: 18,
        span: 7212..7217,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 268,
        column: 19,
        span: 7217..7218,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 268,
        column: 20,
        span: 7218..7219,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 268,
        column: 21,
        span: 7219..7220,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 269,
        column: 7,
        span: 7221..7227,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 269,
        column: 8,
        span: 7227..7228,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "os",
        ),
        line: 269,
        column: 10,
        span: 7228..7230,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 269,
        column: 11,
        span: 7230..7231,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "remove",
        ),
        line: 269,
        column: 17,
        span: 7231..7237,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 269,
        column: 18,
        span: 7237..7238,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "file",
        ),
        line: 269,
        column: 22,
        span: 7238..7242,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 269,
        column: 23,
        span: 7242..7243,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 269,
        column: 24,
        span: 7243..7244,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "x",
        ),
        line: 270,
        column: 2,
        span: 7245..7246,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 270,
        column: 4,
        span: 7247..7248,
    },
    Token {
        kind: Nil,
        lexeme: Symbol(
            "nil",
        ),
        line: 270,
        column: 8,
        span: 7249..7252,
    },
    Token {
        kind: Semicolon,
        lexeme: Symbol(
            ";",
        ),
        line: 270,
        column: 9,
        span: 7252..7253,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "y",
        ),
        line: 271,
        column: 2,
        span: 7254..7255,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 271,
        column: 4,
        span: 7256..7257,
    },
    Token {
        kind: Nil,
        lexeme: Symbol(
            "nil",
        ),
        line: 271,
        column: 0,
        span: 7258..7261,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "x",
        ),
        line: 273,
        column: 2,
        span: 7263..7264,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 273,
        column: 3,
        span: 7264..7265,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "y",
        ),
        line: 273,
        column: 5,
        span: 7266..7267,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 273,
        column: 7,
        span: 7268..7269,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "pcall",
        ),
        line: 273,
        column: 13,
        span: 7270..7275,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 273,
        column: 14,
        span: 7275..7276,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 273,
        column: 16,
        span: 7276..7278,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 273,
        column: 17,
        span: 7278..7279,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "popen",
        ),
        line: 273,
        column: 22,
        span: 7279..7284,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 273,
        column: 23,
        span: 7284..7285,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"ls\"",
        ),
        line: 273,
        column: 28,
        span: 7286..7290,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 273,
        column: 29,
        span: 7290..7291,
    },
    Token {
        kind: If,
        lexeme: Symbol(
            "if",
        ),
        line: 274,
        column: 3,
        span: 7292..7294,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "x",
        ),
        line: 274,
        column: 5,
        span: 7295..7296,
    },
    Token {
        kind: Then,
        lexeme: Symbol(
            "then",
        ),
        line: 274,
        column: 0,
        span: 7297..7301,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 275,
        column: 9,
        span: 7304..7310,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 275,
        column: 10,
        span: 7310..7311,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "y",
        ),
        line: 275,
        column: 11,
        span: 7311..7312,
    },
    Token {
        kind: Colon,
        lexeme: Symbol(
            ":",
        ),
        line: 275,
        column: 12,
        span: 7312..7313,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "read",
        ),
        line: 275,
        column: 16,
        span: 7313..7317,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 275,
        column: 17,
        span: 7317..7318,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"*a\"",
        ),
        line: 275,
        column: 21,
        span: 7318..7322,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 275,
        column: 22,
        span: 7322..7323,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 275,
        column: 23,
        span: 7323..7324,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 276,
        column: 9,
        span: 7327..7333,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 276,
        column: 10,
        span: 7333..7334,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "y",
        ),
        line: 276,
        column: 11,
        span: 7334..7335,
    },
    Token {
        kind: Colon,
        lexeme: Symbol(
            ":",
        ),
        line: 276,
        column: 12,
        span: 7335..7336,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "close",
        ),
        line: 276,
        column: 17,
        span: 7336..7341,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 276,
        column: 18,
        span: 7341..7342,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 276,
        column: 19,
        span: 7342..7343,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 276,
        column: 20,
        span: 7343..7344,
    },
    Token {
        kind: Else,
        lexeme: Symbol(
            "else",
        ),
        line: 277,
        column: 0,
        span: 7345..7349,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 278,
        column: 4,
        span: 7352..7353,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "Message",
        ),
        line: 278,
        column: 11,
        span: 7353..7360,
    },
    Token {
        kind: Or,
        lexeme: Symbol(
            "or",
        ),
        line: 278,
        column: 14,
        span: 7361..7363,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "print",
        ),
        line: 278,
        column: 20,
        span: 7364..7369,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 278,
        column: 21,
        span: 7369..7370,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 278,
        column: 22,
        span: 7370..7371,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'\\a\\n >>> popen not available<<<\\n\\a'",
        ),
        line: 278,
        column: 59,
        span: 7371..7408,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 278,
        column: 60,
        span: 7408..7409,
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        line: 279,
        column: 0,
        span: 7410..7413,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "print",
        ),
        line: 281,
        column: 6,
        span: 7415..7420,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'+'",
        ),
        line: 281,
        column: 10,
        span: 7421..7424,
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        line: 283,
        column: 6,
        span: 7426..7431,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "t",
        ),
        line: 283,
        column: 8,
        span: 7432..7433,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 283,
        column: 10,
        span: 7434..7435,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "os",
        ),
        line: 283,
        column: 13,
        span: 7436..7438,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 283,
        column: 14,
        span: 7438..7439,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "time",
        ),
        line: 283,
        column: 18,
        span: 7439..7443,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 283,
        column: 19,
        span: 7443..7444,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 283,
        column: 20,
        span: 7444..7445,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "T",
        ),
        line: 284,
        column: 2,
        span: 7446..7447,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 284,
        column: 4,
        span: 7448..7449,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "os",
        ),
        line: 284,
        column: 7,
        span: 7450..7452,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 284,
        column: 8,
        span: 7452..7453,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "date",
        ),
        line: 284,
        column: 12,
        span: 7453..7457,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 284,
        column: 13,
        span: 7457..7458,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"*t\"",
        ),
        line: 284,
        column: 17,
        span: 7458..7462,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 284,
        column: 18,
        span: 7462..7463,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "t",
        ),
        line: 284,
        column: 20,
        span: 7464..7465,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 284,
        column: 21,
        span: 7465..7466,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "loadstring",
        ),
        line: 285,
        column: 11,
        span: 7467..7477,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 285,
        column: 12,
        span: 7477..7478,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "os",
        ),
        line: 285,
        column: 14,
        span: 7478..7480,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 285,
        column: 15,
        span: 7480..7481,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "date",
        ),
        line: 285,
        column: 19,
        span: 7481..7485,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 285,
        column: 20,
        span: 7485..7486,
    },
    Token {
        kind: MultilineString,
        lexeme: Symbol(
            "[[assert(T.year==%Y and T.month==%m and T.day==%d and\n  T.hour==%H and T.min==%M and T.sec==%S and\n  T.wday==%w+1 and T.yday==%j and type(T.isdst) == 'boolean')]]",
        ),
        line: 287,
        column: 64,
        span: 7486..7648,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 287,
        column: 65,
        span: 7648..7649,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "t",
        ),
        line: 287,
        column: 67,
        span: 7650..7651,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 287,
        column: 68,
        span: 7651..7652,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 287,
        column: 69,
        span: 7652..7653,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 287,
        column: 70,
        span: 7653..7654,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 287,
        column: 71,
        span: 7654..7655,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 289,
        column: 7,
        span: 7657..7663,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 289,
        column: 8,
        span: 7663..7664,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "os",
        ),
        line: 289,
        column: 10,
        span: 7664..7666,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 289,
        column: 11,
        span: 7666..7667,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "time",
        ),
        line: 289,
        column: 15,
        span: 7667..7671,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 289,
        column: 16,
        span: 7671..7672,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "T",
        ),
        line: 289,
        column: 17,
        span: 7672..7673,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 289,
        column: 18,
        span: 7673..7674,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 289,
        column: 21,
        span: 7675..7677,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "t",
        ),
        line: 289,
        column: 23,
        span: 7678..7679,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 289,
        column: 24,
        span: 7679..7680,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "T",
        ),
        line: 291,
        column: 2,
        span: 7682..7683,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 291,
        column: 4,
        span: 7684..7685,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "os",
        ),
        line: 291,
        column: 7,
        span: 7686..7688,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 291,
        column: 8,
        span: 7688..7689,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "date",
        ),
        line: 291,
        column: 12,
        span: 7689..7693,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 291,
        column: 13,
        span: 7693..7694,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"!*t\"",
        ),
        line: 291,
        column: 18,
        span: 7694..7699,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 291,
        column: 19,
        span: 7699..7700,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "t",
        ),
        line: 291,
        column: 21,
        span: 7701..7702,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 291,
        column: 22,
        span: 7702..7703,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "loadstring",
        ),
        line: 292,
        column: 11,
        span: 7704..7714,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 292,
        column: 12,
        span: 7714..7715,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "os",
        ),
        line: 292,
        column: 14,
        span: 7715..7717,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 292,
        column: 15,
        span: 7717..7718,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "date",
        ),
        line: 292,
        column: 19,
        span: 7718..7722,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 292,
        column: 20,
        span: 7722..7723,
    },
    Token {
        kind: MultilineString,
        lexeme: Symbol(
            "[[!assert(T.year==%Y and T.month==%m and T.day==%d and\n  T.hour==%H and T.min==%M and T.sec==%S and\n  T.wday==%w+1 and T.yday==%j and type(T.isdst) == 'boolean')]]",
        ),
        line: 294,
        column: 64,
        span: 7723..7886,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 294,
        column: 65,
        span: 7886..7887,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "t",
        ),
        line: 294,
        column: 67,
        span: 7888..7889,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 294,
        column: 68,
        span: 7889..7890,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 294,
        column: 69,
        span: 7890..7891,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 294,
        column: 70,
        span: 7891..7892,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 294,
        column: 71,
        span: 7892..7893,
    },
    Token {
        kind: Do,
        lexeme: Symbol(
            "do",
        ),
        line: 296,
        column: 0,
        span: 7895..7897,
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        line: 297,
        column: 8,
        span: 7900..7905,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "T",
        ),
        line: 297,
        column: 10,
        span: 7906..7907,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 297,
        column: 12,
        span: 7908..7909,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "os",
        ),
        line: 297,
        column: 15,
        span: 7910..7912,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 297,
        column: 16,
        span: 7912..7913,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "date",
        ),
        line: 297,
        column: 20,
        span: 7913..7917,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 297,
        column: 21,
        span: 7917..7918,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"*t\"",
        ),
        line: 297,
        column: 25,
        span: 7918..7922,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 297,
        column: 26,
        span: 7922..7923,
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        line: 298,
        column: 8,
        span: 7926..7931,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "t",
        ),
        line: 298,
        column: 10,
        span: 7932..7933,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 298,
        column: 12,
        span: 7934..7935,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "os",
        ),
        line: 298,
        column: 15,
        span: 7936..7938,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 298,
        column: 16,
        span: 7938..7939,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "time",
        ),
        line: 298,
        column: 20,
        span: 7939..7943,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 298,
        column: 21,
        span: 7943..7944,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "T",
        ),
        line: 298,
        column: 22,
        span: 7944..7945,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 298,
        column: 23,
        span: 7945..7946,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 299,
        column: 9,
        span: 7949..7955,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 299,
        column: 10,
        span: 7955..7956,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "type",
        ),
        line: 299,
        column: 14,
        span: 7956..7960,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 299,
        column: 15,
        span: 7960..7961,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "T",
        ),
        line: 299,
        column: 16,
        span: 7961..7962,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 299,
        column: 17,
        span: 7962..7963,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "isdst",
        ),
        line: 299,
        column: 22,
        span: 7963..7968,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 299,
        column: 23,
        span: 7968..7969,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 299,
        column: 26,
        span: 7970..7972,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'boolean'",
        ),
        line: 299,
        column: 36,
        span: 7973..7982,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 299,
        column: 37,
        span: 7982..7983,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "T",
        ),
        line: 300,
        column: 4,
        span: 7986..7987,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 300,
        column: 5,
        span: 7987..7988,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "isdst",
        ),
        line: 300,
        column: 10,
        span: 7988..7993,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 300,
        column: 12,
        span: 7994..7995,
    },
    Token {
        kind: Nil,
        lexeme: Symbol(
            "nil",
        ),
        line: 300,
        column: 0,
        span: 7996..7999,
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        line: 301,
        column: 8,
        span: 8002..8007,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "t1",
        ),
        line: 301,
        column: 11,
        span: 8008..8010,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 301,
        column: 13,
        span: 8011..8012,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "os",
        ),
        line: 301,
        column: 16,
        span: 8013..8015,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 301,
        column: 17,
        span: 8015..8016,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "time",
        ),
        line: 301,
        column: 21,
        span: 8016..8020,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 301,
        column: 22,
        span: 8020..8021,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "T",
        ),
        line: 301,
        column: 23,
        span: 8021..8022,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 301,
        column: 24,
        span: 8022..8023,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 302,
        column: 9,
        span: 8026..8032,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 302,
        column: 10,
        span: 8032..8033,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "t",
        ),
        line: 302,
        column: 11,
        span: 8033..8034,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 302,
        column: 14,
        span: 8035..8037,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "t1",
        ),
        line: 302,
        column: 17,
        span: 8038..8040,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 302,
        column: 18,
        span: 8040..8041,
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        line: 303,
        column: 0,
        span: 8085..8088,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "t",
        ),
        line: 305,
        column: 2,
        span: 8090..8091,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 305,
        column: 4,
        span: 8092..8093,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "os",
        ),
        line: 305,
        column: 7,
        span: 8094..8096,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 305,
        column: 8,
        span: 8096..8097,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "time",
        ),
        line: 305,
        column: 12,
        span: 8097..8101,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 305,
        column: 13,
        span: 8101..8102,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "T",
        ),
        line: 305,
        column: 14,
        span: 8102..8103,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 305,
        column: 15,
        span: 8103..8104,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "T",
        ),
        line: 306,
        column: 2,
        span: 8105..8106,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 306,
        column: 3,
        span: 8106..8107,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "year",
        ),
        line: 306,
        column: 7,
        span: 8107..8111,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 306,
        column: 9,
        span: 8112..8113,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "T",
        ),
        line: 306,
        column: 11,
        span: 8114..8115,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 306,
        column: 12,
        span: 8115..8116,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "year",
        ),
        line: 306,
        column: 16,
        span: 8116..8120,
    },
    Token {
        kind: Minus,
        lexeme: Symbol(
            "-",
        ),
        line: 306,
        column: 18,
        span: 8121..8122,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "1",
                    after_decimal: "",
                },
            ),
        ),
        line: 306,
        column: 20,
        span: 8122..8124,
    },
    Token {
        kind: Semicolon,
        lexeme: Symbol(
            ";",
        ),
        line: 306,
        column: 21,
        span: 8124..8125,
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        line: 307,
        column: 6,
        span: 8126..8131,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "t1",
        ),
        line: 307,
        column: 9,
        span: 8132..8134,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 307,
        column: 11,
        span: 8135..8136,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "os",
        ),
        line: 307,
        column: 14,
        span: 8137..8139,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 307,
        column: 15,
        span: 8139..8140,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "time",
        ),
        line: 307,
        column: 19,
        span: 8140..8144,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 307,
        column: 20,
        span: 8144..8145,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "T",
        ),
        line: 307,
        column: 21,
        span: 8145..8146,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 307,
        column: 22,
        span: 8146..8147,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 309,
        column: 7,
        span: 8172..8178,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 309,
        column: 8,
        span: 8178..8179,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "math",
        ),
        line: 309,
        column: 12,
        span: 8179..8183,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 309,
        column: 13,
        span: 8183..8184,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "abs",
        ),
        line: 309,
        column: 16,
        span: 8184..8187,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 309,
        column: 17,
        span: 8187..8188,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "os",
        ),
        line: 309,
        column: 19,
        span: 8188..8190,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 309,
        column: 20,
        span: 8190..8191,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "difftime",
        ),
        line: 309,
        column: 28,
        span: 8191..8199,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 309,
        column: 29,
        span: 8199..8200,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "t",
        ),
        line: 309,
        column: 30,
        span: 8200..8201,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 309,
        column: 31,
        span: 8201..8202,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "t1",
        ),
        line: 309,
        column: 34,
        span: 8203..8205,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 309,
        column: 35,
        span: 8205..8206,
    },
    Token {
        kind: Slash,
        lexeme: Symbol(
            "/",
        ),
        line: 309,
        column: 37,
        span: 8207..8208,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 309,
        column: 39,
        span: 8209..8210,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "24",
                    after_decimal: "",
                },
            ),
        ),
        line: 309,
        column: 41,
        span: 8209..8212,
    },
    Token {
        kind: Star,
        lexeme: Symbol(
            "*",
        ),
        line: 309,
        column: 43,
        span: 8213..8214,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "3600",
                    after_decimal: "",
                },
            ),
        ),
        line: 309,
        column: 48,
        span: 8214..8219,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 309,
        column: 49,
        span: 8219..8220,
    },
    Token {
        kind: Minus,
        lexeme: Symbol(
            "-",
        ),
        line: 309,
        column: 51,
        span: 8221..8222,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "365",
                    after_decimal: "",
                },
            ),
        ),
        line: 309,
        column: 55,
        span: 8222..8226,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 309,
        column: 56,
        span: 8226..8227,
    },
    Token {
        kind: LessThan,
        lexeme: Symbol(
            "<",
        ),
        line: 309,
        column: 58,
        span: 8228..8229,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "2",
                    after_decimal: "",
                },
            ),
        ),
        line: 309,
        column: 60,
        span: 8229..8231,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 309,
        column: 61,
        span: 8231..8232,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "t",
        ),
        line: 311,
        column: 2,
        span: 8234..8235,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 311,
        column: 4,
        span: 8236..8237,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "os",
        ),
        line: 311,
        column: 7,
        span: 8238..8240,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 311,
        column: 8,
        span: 8240..8241,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "time",
        ),
        line: 311,
        column: 12,
        span: 8241..8245,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 311,
        column: 13,
        span: 8245..8246,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 311,
        column: 14,
        span: 8246..8247,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "t1",
        ),
        line: 312,
        column: 3,
        span: 8248..8250,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 312,
        column: 5,
        span: 8251..8252,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "os",
        ),
        line: 312,
        column: 8,
        span: 8253..8255,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 312,
        column: 9,
        span: 8255..8256,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "time",
        ),
        line: 312,
        column: 13,
        span: 8256..8260,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 312,
        column: 14,
        span: 8260..8261,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "os",
        ),
        line: 312,
        column: 16,
        span: 8261..8263,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 312,
        column: 17,
        span: 8263..8264,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "date",
        ),
        line: 312,
        column: 21,
        span: 8264..8268,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 312,
        column: 22,
        span: 8268..8269,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"*t\"",
        ),
        line: 312,
        column: 26,
        span: 8269..8273,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 312,
        column: 27,
        span: 8273..8274,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 312,
        column: 28,
        span: 8274..8275,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 313,
        column: 7,
        span: 8276..8282,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 313,
        column: 8,
        span: 8282..8283,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "os",
        ),
        line: 313,
        column: 10,
        span: 8283..8285,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 313,
        column: 11,
        span: 8285..8286,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "difftime",
        ),
        line: 313,
        column: 19,
        span: 8286..8294,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 313,
        column: 20,
        span: 8294..8295,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "t1",
        ),
        line: 313,
        column: 22,
        span: 8295..8297,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 313,
        column: 23,
        span: 8297..8298,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "t",
        ),
        line: 313,
        column: 25,
        span: 8299..8300,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 313,
        column: 26,
        span: 8300..8301,
    },
    Token {
        kind: LessThanOrEqual,
        lexeme: Symbol(
            "<=",
        ),
        line: 313,
        column: 29,
        span: 8302..8304,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "2",
                    after_decimal: "",
                },
            ),
        ),
        line: 313,
        column: 31,
        span: 8304..8306,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 313,
        column: 32,
        span: 8306..8307,
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        line: 315,
        column: 6,
        span: 8309..8314,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "t1",
        ),
        line: 315,
        column: 9,
        span: 8315..8317,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 315,
        column: 11,
        span: 8318..8319,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "os",
        ),
        line: 315,
        column: 14,
        span: 8320..8322,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 315,
        column: 15,
        span: 8322..8323,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "time",
        ),
        line: 315,
        column: 19,
        span: 8323..8327,
    },
    Token {
        kind: LeftBrace,
        lexeme: Symbol(
            "{",
        ),
        line: 315,
        column: 21,
        span: 8328..8329,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "year",
        ),
        line: 315,
        column: 26,
        span: 8330..8334,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 315,
        column: 28,
        span: 8335..8336,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "2000",
                    after_decimal: "",
                },
            ),
        ),
        line: 315,
        column: 33,
        span: 8336..8341,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 315,
        column: 34,
        span: 8341..8342,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "month",
        ),
        line: 315,
        column: 40,
        span: 8343..8348,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 315,
        column: 42,
        span: 8349..8350,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "10",
                    after_decimal: "",
                },
            ),
        ),
        line: 315,
        column: 45,
        span: 8350..8353,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 315,
        column: 46,
        span: 8353..8354,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "day",
        ),
        line: 315,
        column: 50,
        span: 8355..8358,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 315,
        column: 52,
        span: 8359..8360,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "1",
                    after_decimal: "",
                },
            ),
        ),
        line: 315,
        column: 54,
        span: 8360..8362,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 315,
        column: 55,
        span: 8362..8363,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "hour",
        ),
        line: 315,
        column: 60,
        span: 8364..8368,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 315,
        column: 62,
        span: 8369..8370,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "23",
                    after_decimal: "",
                },
            ),
        ),
        line: 315,
        column: 65,
        span: 8370..8373,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 315,
        column: 66,
        span: 8373..8374,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "min",
        ),
        line: 315,
        column: 70,
        span: 8375..8378,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 315,
        column: 72,
        span: 8379..8380,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "12",
                    after_decimal: "",
                },
            ),
        ),
        line: 315,
        column: 75,
        span: 8380..8383,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 315,
        column: 76,
        span: 8383..8384,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "sec",
        ),
        line: 315,
        column: 80,
        span: 8385..8388,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 315,
        column: 82,
        span: 8389..8390,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "17",
                    after_decimal: "",
                },
            ),
        ),
        line: 315,
        column: 85,
        span: 8390..8393,
    },
    Token {
        kind: RightBrace,
        lexeme: Symbol(
            "}",
        ),
        line: 315,
        column: 87,
        span: 8394..8395,
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        line: 316,
        column: 6,
        span: 8396..8401,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "t2",
        ),
        line: 316,
        column: 9,
        span: 8402..8404,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 316,
        column: 11,
        span: 8405..8406,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "os",
        ),
        line: 316,
        column: 14,
        span: 8407..8409,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 316,
        column: 15,
        span: 8409..8410,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "time",
        ),
        line: 316,
        column: 19,
        span: 8410..8414,
    },
    Token {
        kind: LeftBrace,
        lexeme: Symbol(
            "{",
        ),
        line: 316,
        column: 21,
        span: 8415..8416,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "year",
        ),
        line: 316,
        column: 26,
        span: 8417..8421,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 316,
        column: 28,
        span: 8422..8423,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "2000",
                    after_decimal: "",
                },
            ),
        ),
        line: 316,
        column: 33,
        span: 8423..8428,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 316,
        column: 34,
        span: 8428..8429,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "month",
        ),
        line: 316,
        column: 40,
        span: 8430..8435,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 316,
        column: 42,
        span: 8436..8437,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "10",
                    after_decimal: "",
                },
            ),
        ),
        line: 316,
        column: 45,
        span: 8437..8440,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 316,
        column: 46,
        span: 8440..8441,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "day",
        ),
        line: 316,
        column: 50,
        span: 8442..8445,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 316,
        column: 52,
        span: 8446..8447,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "1",
                    after_decimal: "",
                },
            ),
        ),
        line: 316,
        column: 54,
        span: 8447..8449,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 316,
        column: 55,
        span: 8449..8450,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "hour",
        ),
        line: 316,
        column: 60,
        span: 8451..8455,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 316,
        column: 62,
        span: 8456..8457,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "23",
                    after_decimal: "",
                },
            ),
        ),
        line: 316,
        column: 65,
        span: 8457..8460,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 316,
        column: 66,
        span: 8460..8461,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "min",
        ),
        line: 316,
        column: 70,
        span: 8462..8465,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 316,
        column: 72,
        span: 8466..8467,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "10",
                    after_decimal: "",
                },
            ),
        ),
        line: 316,
        column: 75,
        span: 8467..8470,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 316,
        column: 76,
        span: 8470..8471,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "sec",
        ),
        line: 316,
        column: 80,
        span: 8472..8475,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 316,
        column: 82,
        span: 8476..8477,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "19",
                    after_decimal: "",
                },
            ),
        ),
        line: 316,
        column: 85,
        span: 8477..8480,
    },
    Token {
        kind: RightBrace,
        lexeme: Symbol(
            "}",
        ),
        line: 316,
        column: 87,
        span: 8481..8482,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 317,
        column: 7,
        span: 8483..8489,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 317,
        column: 8,
        span: 8489..8490,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "os",
        ),
        line: 317,
        column: 10,
        span: 8490..8492,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 317,
        column: 11,
        span: 8492..8493,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "difftime",
        ),
        line: 317,
        column: 19,
        span: 8493..8501,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 317,
        column: 20,
        span: 8501..8502,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "t1",
        ),
        line: 317,
        column: 22,
        span: 8502..8504,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 317,
        column: 23,
        span: 8504..8505,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "t2",
        ),
        line: 317,
        column: 26,
        span: 8506..8508,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 317,
        column: 27,
        span: 8508..8509,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 317,
        column: 30,
        span: 8510..8512,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "60",
                    after_decimal: "",
                },
            ),
        ),
        line: 317,
        column: 33,
        span: 8512..8515,
    },
    Token {
        kind: Star,
        lexeme: Symbol(
            "*",
        ),
        line: 317,
        column: 35,
        span: 8516..8517,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "2",
                    after_decimal: "",
                },
            ),
        ),
        line: 317,
        column: 37,
        span: 8517..8519,
    },
    Token {
        kind: Minus,
        lexeme: Symbol(
            "-",
        ),
        line: 317,
        column: 39,
        span: 8520..8521,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "2",
                    after_decimal: "",
                },
            ),
        ),
        line: 317,
        column: 41,
        span: 8521..8523,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 317,
        column: 42,
        span: 8523..8524,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 319,
        column: 3,
        span: 8526..8528,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 319,
        column: 4,
        span: 8528..8529,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "output",
        ),
        line: 319,
        column: 10,
        span: 8529..8535,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 319,
        column: 11,
        span: 8535..8536,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 319,
        column: 13,
        span: 8536..8538,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 319,
        column: 14,
        span: 8538..8539,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "stdout",
        ),
        line: 319,
        column: 20,
        span: 8539..8545,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 319,
        column: 21,
        span: 8545..8546,
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        line: 320,
        column: 6,
        span: 8547..8552,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "d",
        ),
        line: 320,
        column: 8,
        span: 8553..8554,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 320,
        column: 10,
        span: 8555..8556,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "os",
        ),
        line: 320,
        column: 13,
        span: 8557..8559,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 320,
        column: 14,
        span: 8559..8560,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "date",
        ),
        line: 320,
        column: 18,
        span: 8560..8564,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 320,
        column: 19,
        span: 8564..8565,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'%d'",
        ),
        line: 320,
        column: 23,
        span: 8565..8569,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 320,
        column: 24,
        span: 8569..8570,
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        line: 321,
        column: 6,
        span: 8571..8576,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "m",
        ),
        line: 321,
        column: 8,
        span: 8577..8578,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 321,
        column: 10,
        span: 8579..8580,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "os",
        ),
        line: 321,
        column: 13,
        span: 8581..8583,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 321,
        column: 14,
        span: 8583..8584,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "date",
        ),
        line: 321,
        column: 18,
        span: 8584..8588,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 321,
        column: 19,
        span: 8588..8589,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'%m'",
        ),
        line: 321,
        column: 23,
        span: 8589..8593,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 321,
        column: 24,
        span: 8593..8594,
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        line: 322,
        column: 6,
        span: 8595..8600,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 322,
        column: 8,
        span: 8601..8602,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 322,
        column: 10,
        span: 8603..8604,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "os",
        ),
        line: 322,
        column: 13,
        span: 8605..8607,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 322,
        column: 14,
        span: 8607..8608,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "date",
        ),
        line: 322,
        column: 18,
        span: 8608..8612,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 322,
        column: 19,
        span: 8612..8613,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'%Y'",
        ),
        line: 322,
        column: 23,
        span: 8613..8617,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 322,
        column: 24,
        span: 8617..8618,
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        line: 323,
        column: 6,
        span: 8619..8624,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "ds",
        ),
        line: 323,
        column: 9,
        span: 8625..8627,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 323,
        column: 11,
        span: 8628..8629,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "os",
        ),
        line: 323,
        column: 14,
        span: 8630..8632,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 323,
        column: 15,
        span: 8632..8633,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "date",
        ),
        line: 323,
        column: 19,
        span: 8633..8637,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 323,
        column: 20,
        span: 8637..8638,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'%w'",
        ),
        line: 323,
        column: 24,
        span: 8638..8642,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 323,
        column: 25,
        span: 8642..8643,
    },
    Token {
        kind: Plus,
        lexeme: Symbol(
            "+",
        ),
        line: 323,
        column: 27,
        span: 8644..8645,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "1",
                    after_decimal: "",
                },
            ),
        ),
        line: 323,
        column: 0,
        span: 8645..8647,
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        line: 324,
        column: 6,
        span: 8648..8653,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "h",
        ),
        line: 324,
        column: 8,
        span: 8654..8655,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 324,
        column: 10,
        span: 8656..8657,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "os",
        ),
        line: 324,
        column: 13,
        span: 8658..8660,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 324,
        column: 14,
        span: 8660..8661,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "date",
        ),
        line: 324,
        column: 18,
        span: 8661..8665,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 324,
        column: 19,
        span: 8665..8666,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'%H'",
        ),
        line: 324,
        column: 23,
        span: 8666..8670,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 324,
        column: 24,
        span: 8670..8671,
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        line: 325,
        column: 6,
        span: 8672..8677,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "min",
        ),
        line: 325,
        column: 10,
        span: 8678..8681,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 325,
        column: 12,
        span: 8682..8683,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "os",
        ),
        line: 325,
        column: 15,
        span: 8684..8686,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 325,
        column: 16,
        span: 8686..8687,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "date",
        ),
        line: 325,
        column: 20,
        span: 8687..8691,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 325,
        column: 21,
        span: 8691..8692,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'%M'",
        ),
        line: 325,
        column: 25,
        span: 8692..8696,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 325,
        column: 26,
        span: 8696..8697,
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        line: 326,
        column: 6,
        span: 8698..8703,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "s",
        ),
        line: 326,
        column: 8,
        span: 8704..8705,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 326,
        column: 10,
        span: 8706..8707,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "os",
        ),
        line: 326,
        column: 13,
        span: 8708..8710,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 326,
        column: 14,
        span: 8710..8711,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "date",
        ),
        line: 326,
        column: 18,
        span: 8711..8715,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 326,
        column: 19,
        span: 8715..8716,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'%S'",
        ),
        line: 326,
        column: 23,
        span: 8716..8720,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 326,
        column: 24,
        span: 8720..8721,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 327,
        column: 3,
        span: 8722..8724,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 327,
        column: 4,
        span: 8724..8725,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "write",
        ),
        line: 327,
        column: 9,
        span: 8725..8730,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 327,
        column: 10,
        span: 8730..8731,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "string",
        ),
        line: 327,
        column: 16,
        span: 8731..8737,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 327,
        column: 17,
        span: 8737..8738,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "format",
        ),
        line: 327,
        column: 23,
        span: 8738..8744,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 327,
        column: 24,
        span: 8744..8745,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'test done on %2.2d/%2.2d/%d'",
        ),
        line: 327,
        column: 53,
        span: 8745..8774,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 327,
        column: 54,
        span: 8774..8775,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "d",
        ),
        line: 327,
        column: 56,
        span: 8776..8777,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 327,
        column: 57,
        span: 8777..8778,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "m",
        ),
        line: 327,
        column: 59,
        span: 8779..8780,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 327,
        column: 60,
        span: 8780..8781,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 327,
        column: 62,
        span: 8782..8783,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 327,
        column: 63,
        span: 8783..8784,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 327,
        column: 64,
        span: 8784..8785,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 328,
        column: 3,
        span: 8786..8788,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 328,
        column: 4,
        span: 8788..8789,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "write",
        ),
        line: 328,
        column: 9,
        span: 8789..8794,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 328,
        column: 10,
        span: 8794..8795,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "string",
        ),
        line: 328,
        column: 16,
        span: 8795..8801,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 328,
        column: 17,
        span: 8801..8802,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "format",
        ),
        line: 328,
        column: 23,
        span: 8802..8808,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 328,
        column: 24,
        span: 8808..8809,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "', at %2.2d:%2.2d:%2.2d\\n'",
        ),
        line: 328,
        column: 50,
        span: 8809..8835,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 328,
        column: 51,
        span: 8835..8836,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "h",
        ),
        line: 328,
        column: 53,
        span: 8837..8838,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 328,
        column: 54,
        span: 8838..8839,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "min",
        ),
        line: 328,
        column: 58,
        span: 8840..8843,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 328,
        column: 59,
        span: 8843..8844,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "s",
        ),
        line: 328,
        column: 61,
        span: 8845..8846,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 328,
        column: 62,
        span: 8846..8847,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 328,
        column: 63,
        span: 8847..8848,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 329,
        column: 3,
        span: 8849..8851,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 329,
        column: 4,
        span: 8851..8852,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "write",
        ),
        line: 329,
        column: 9,
        span: 8852..8857,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 329,
        column: 10,
        span: 8857..8858,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "string",
        ),
        line: 329,
        column: 16,
        span: 8858..8864,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 329,
        column: 17,
        span: 8864..8865,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "format",
        ),
        line: 329,
        column: 23,
        span: 8865..8871,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 329,
        column: 24,
        span: 8871..8872,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'%s\\n'",
        ),
        line: 329,
        column: 30,
        span: 8872..8878,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 329,
        column: 31,
        span: 8878..8879,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "_VERSION",
        ),
        line: 329,
        column: 40,
        span: 8880..8888,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 329,
        column: 41,
        span: 8888..8889,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 329,
        column: 42,
        span: 8889..8890,
    },
]
