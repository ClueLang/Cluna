---
source: src/main.rs
expression: scanned
input_file: test-data/lua5.2-tests/verybig.lua
---
[
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "print",
        ),
        line: 1,
        column: 5,
        span: 0..5,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"testing RK\"",
        ),
        line: 1,
        column: 18,
        span: 6..18,
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        line: 4,
        column: 6,
        span: 77..82,
    },
    Token {
        kind: Function,
        lexeme: Symbol(
            "function",
        ),
        line: 4,
        column: 15,
        span: 83..91,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "foo",
        ),
        line: 4,
        column: 19,
        span: 92..95,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 4,
        column: 21,
        span: 96..97,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 4,
        column: 22,
        span: 97..98,
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        line: 5,
        column: 8,
        span: 101..106,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "dummy",
        ),
        line: 5,
        column: 14,
        span: 107..112,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 5,
        column: 16,
        span: 113..114,
    },
    Token {
        kind: LeftBrace,
        lexeme: Symbol(
            "{",
        ),
        line: 5,
        column: 18,
        span: 115..116,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "1",
                    after_decimal: "",
                },
            ),
        ),
        line: 7,
        column: 7,
        span: 174..176,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 7,
        column: 8,
        span: 176..177,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "2",
                    after_decimal: "",
                },
            ),
        ),
        line: 7,
        column: 10,
        span: 177..179,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 7,
        column: 11,
        span: 179..180,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "3",
                    after_decimal: "",
                },
            ),
        ),
        line: 7,
        column: 13,
        span: 180..182,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 7,
        column: 14,
        span: 182..183,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "4",
                    after_decimal: "",
                },
            ),
        ),
        line: 7,
        column: 16,
        span: 183..185,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 7,
        column: 17,
        span: 185..186,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "5",
                    after_decimal: "",
                },
            ),
        ),
        line: 7,
        column: 19,
        span: 186..188,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 7,
        column: 20,
        span: 188..189,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "6",
                    after_decimal: "",
                },
            ),
        ),
        line: 7,
        column: 22,
        span: 189..191,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 7,
        column: 23,
        span: 191..192,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "7",
                    after_decimal: "",
                },
            ),
        ),
        line: 7,
        column: 25,
        span: 192..194,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 7,
        column: 26,
        span: 194..195,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "8",
                    after_decimal: "",
                },
            ),
        ),
        line: 7,
        column: 28,
        span: 195..197,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 7,
        column: 29,
        span: 197..198,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "9",
                    after_decimal: "",
                },
            ),
        ),
        line: 7,
        column: 31,
        span: 198..200,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 7,
        column: 32,
        span: 200..201,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "10",
                    after_decimal: "",
                },
            ),
        ),
        line: 7,
        column: 35,
        span: 201..204,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 7,
        column: 36,
        span: 204..205,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "11",
                    after_decimal: "",
                },
            ),
        ),
        line: 7,
        column: 39,
        span: 205..208,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 7,
        column: 40,
        span: 208..209,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "12",
                    after_decimal: "",
                },
            ),
        ),
        line: 7,
        column: 43,
        span: 209..212,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 7,
        column: 44,
        span: 212..213,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "13",
                    after_decimal: "",
                },
            ),
        ),
        line: 7,
        column: 47,
        span: 213..216,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 7,
        column: 48,
        span: 216..217,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "14",
                    after_decimal: "",
                },
            ),
        ),
        line: 7,
        column: 51,
        span: 217..220,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 7,
        column: 52,
        span: 220..221,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "15",
                    after_decimal: "",
                },
            ),
        ),
        line: 7,
        column: 55,
        span: 221..224,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 7,
        column: 56,
        span: 224..225,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "16",
                    after_decimal: "",
                },
            ),
        ),
        line: 7,
        column: 59,
        span: 225..228,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 7,
        column: 60,
        span: 228..229,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "17",
                    after_decimal: "",
                },
            ),
        ),
        line: 8,
        column: 8,
        span: 234..237,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 8,
        column: 9,
        span: 237..238,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "18",
                    after_decimal: "",
                },
            ),
        ),
        line: 8,
        column: 12,
        span: 238..241,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 8,
        column: 13,
        span: 241..242,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "19",
                    after_decimal: "",
                },
            ),
        ),
        line: 8,
        column: 16,
        span: 242..245,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 8,
        column: 17,
        span: 245..246,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "20",
                    after_decimal: "",
                },
            ),
        ),
        line: 8,
        column: 20,
        span: 246..249,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 8,
        column: 21,
        span: 249..250,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "21",
                    after_decimal: "",
                },
            ),
        ),
        line: 8,
        column: 24,
        span: 250..253,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 8,
        column: 25,
        span: 253..254,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "22",
                    after_decimal: "",
                },
            ),
        ),
        line: 8,
        column: 28,
        span: 254..257,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 8,
        column: 29,
        span: 257..258,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "23",
                    after_decimal: "",
                },
            ),
        ),
        line: 8,
        column: 32,
        span: 258..261,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 8,
        column: 33,
        span: 261..262,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "24",
                    after_decimal: "",
                },
            ),
        ),
        line: 8,
        column: 36,
        span: 262..265,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 8,
        column: 37,
        span: 265..266,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "25",
                    after_decimal: "",
                },
            ),
        ),
        line: 8,
        column: 40,
        span: 266..269,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 8,
        column: 41,
        span: 269..270,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "26",
                    after_decimal: "",
                },
            ),
        ),
        line: 8,
        column: 44,
        span: 270..273,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 8,
        column: 45,
        span: 273..274,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "27",
                    after_decimal: "",
                },
            ),
        ),
        line: 8,
        column: 48,
        span: 274..277,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 8,
        column: 49,
        span: 277..278,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "28",
                    after_decimal: "",
                },
            ),
        ),
        line: 8,
        column: 52,
        span: 278..281,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 8,
        column: 53,
        span: 281..282,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "29",
                    after_decimal: "",
                },
            ),
        ),
        line: 8,
        column: 56,
        span: 282..285,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 8,
        column: 57,
        span: 285..286,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "30",
                    after_decimal: "",
                },
            ),
        ),
        line: 8,
        column: 60,
        span: 286..289,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 8,
        column: 61,
        span: 289..290,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "31",
                    after_decimal: "",
                },
            ),
        ),
        line: 8,
        column: 64,
        span: 290..293,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 8,
        column: 65,
        span: 293..294,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "32",
                    after_decimal: "",
                },
            ),
        ),
        line: 8,
        column: 68,
        span: 294..297,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 8,
        column: 69,
        span: 297..298,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "33",
                    after_decimal: "",
                },
            ),
        ),
        line: 9,
        column: 8,
        span: 303..306,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 9,
        column: 9,
        span: 306..307,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "34",
                    after_decimal: "",
                },
            ),
        ),
        line: 9,
        column: 12,
        span: 307..310,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 9,
        column: 13,
        span: 310..311,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "35",
                    after_decimal: "",
                },
            ),
        ),
        line: 9,
        column: 16,
        span: 311..314,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 9,
        column: 17,
        span: 314..315,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "36",
                    after_decimal: "",
                },
            ),
        ),
        line: 9,
        column: 20,
        span: 315..318,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 9,
        column: 21,
        span: 318..319,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "37",
                    after_decimal: "",
                },
            ),
        ),
        line: 9,
        column: 24,
        span: 319..322,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 9,
        column: 25,
        span: 322..323,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "38",
                    after_decimal: "",
                },
            ),
        ),
        line: 9,
        column: 28,
        span: 323..326,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 9,
        column: 29,
        span: 326..327,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "39",
                    after_decimal: "",
                },
            ),
        ),
        line: 9,
        column: 32,
        span: 327..330,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 9,
        column: 33,
        span: 330..331,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "40",
                    after_decimal: "",
                },
            ),
        ),
        line: 9,
        column: 36,
        span: 331..334,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 9,
        column: 37,
        span: 334..335,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "41",
                    after_decimal: "",
                },
            ),
        ),
        line: 9,
        column: 40,
        span: 335..338,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 9,
        column: 41,
        span: 338..339,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "42",
                    after_decimal: "",
                },
            ),
        ),
        line: 9,
        column: 44,
        span: 339..342,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 9,
        column: 45,
        span: 342..343,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "43",
                    after_decimal: "",
                },
            ),
        ),
        line: 9,
        column: 48,
        span: 343..346,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 9,
        column: 49,
        span: 346..347,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "44",
                    after_decimal: "",
                },
            ),
        ),
        line: 9,
        column: 52,
        span: 347..350,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 9,
        column: 53,
        span: 350..351,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "45",
                    after_decimal: "",
                },
            ),
        ),
        line: 9,
        column: 56,
        span: 351..354,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 9,
        column: 57,
        span: 354..355,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "46",
                    after_decimal: "",
                },
            ),
        ),
        line: 9,
        column: 60,
        span: 355..358,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 9,
        column: 61,
        span: 358..359,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "47",
                    after_decimal: "",
                },
            ),
        ),
        line: 9,
        column: 64,
        span: 359..362,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 9,
        column: 65,
        span: 362..363,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "48",
                    after_decimal: "",
                },
            ),
        ),
        line: 9,
        column: 68,
        span: 363..366,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 9,
        column: 69,
        span: 366..367,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "49",
                    after_decimal: "",
                },
            ),
        ),
        line: 10,
        column: 8,
        span: 372..375,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 10,
        column: 9,
        span: 375..376,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "50",
                    after_decimal: "",
                },
            ),
        ),
        line: 10,
        column: 12,
        span: 376..379,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 10,
        column: 13,
        span: 379..380,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "51",
                    after_decimal: "",
                },
            ),
        ),
        line: 10,
        column: 16,
        span: 380..383,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 10,
        column: 17,
        span: 383..384,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "52",
                    after_decimal: "",
                },
            ),
        ),
        line: 10,
        column: 20,
        span: 384..387,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 10,
        column: 21,
        span: 387..388,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "53",
                    after_decimal: "",
                },
            ),
        ),
        line: 10,
        column: 24,
        span: 388..391,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 10,
        column: 25,
        span: 391..392,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "54",
                    after_decimal: "",
                },
            ),
        ),
        line: 10,
        column: 28,
        span: 392..395,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 10,
        column: 29,
        span: 395..396,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "55",
                    after_decimal: "",
                },
            ),
        ),
        line: 10,
        column: 32,
        span: 396..399,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 10,
        column: 33,
        span: 399..400,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "56",
                    after_decimal: "",
                },
            ),
        ),
        line: 10,
        column: 36,
        span: 400..403,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 10,
        column: 37,
        span: 403..404,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "57",
                    after_decimal: "",
                },
            ),
        ),
        line: 10,
        column: 40,
        span: 404..407,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 10,
        column: 41,
        span: 407..408,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "58",
                    after_decimal: "",
                },
            ),
        ),
        line: 10,
        column: 44,
        span: 408..411,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 10,
        column: 45,
        span: 411..412,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "59",
                    after_decimal: "",
                },
            ),
        ),
        line: 10,
        column: 48,
        span: 412..415,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 10,
        column: 49,
        span: 415..416,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "60",
                    after_decimal: "",
                },
            ),
        ),
        line: 10,
        column: 52,
        span: 416..419,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 10,
        column: 53,
        span: 419..420,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "61",
                    after_decimal: "",
                },
            ),
        ),
        line: 10,
        column: 56,
        span: 420..423,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 10,
        column: 57,
        span: 423..424,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "62",
                    after_decimal: "",
                },
            ),
        ),
        line: 10,
        column: 60,
        span: 424..427,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 10,
        column: 61,
        span: 427..428,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "63",
                    after_decimal: "",
                },
            ),
        ),
        line: 10,
        column: 64,
        span: 428..431,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 10,
        column: 65,
        span: 431..432,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "64",
                    after_decimal: "",
                },
            ),
        ),
        line: 10,
        column: 68,
        span: 432..435,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 10,
        column: 69,
        span: 435..436,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "65",
                    after_decimal: "",
                },
            ),
        ),
        line: 11,
        column: 8,
        span: 441..444,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 11,
        column: 9,
        span: 444..445,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "66",
                    after_decimal: "",
                },
            ),
        ),
        line: 11,
        column: 12,
        span: 445..448,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 11,
        column: 13,
        span: 448..449,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "67",
                    after_decimal: "",
                },
            ),
        ),
        line: 11,
        column: 16,
        span: 449..452,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 11,
        column: 17,
        span: 452..453,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "68",
                    after_decimal: "",
                },
            ),
        ),
        line: 11,
        column: 20,
        span: 453..456,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 11,
        column: 21,
        span: 456..457,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "69",
                    after_decimal: "",
                },
            ),
        ),
        line: 11,
        column: 24,
        span: 457..460,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 11,
        column: 25,
        span: 460..461,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "70",
                    after_decimal: "",
                },
            ),
        ),
        line: 11,
        column: 28,
        span: 461..464,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 11,
        column: 29,
        span: 464..465,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "71",
                    after_decimal: "",
                },
            ),
        ),
        line: 11,
        column: 32,
        span: 465..468,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 11,
        column: 33,
        span: 468..469,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "72",
                    after_decimal: "",
                },
            ),
        ),
        line: 11,
        column: 36,
        span: 469..472,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 11,
        column: 37,
        span: 472..473,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "73",
                    after_decimal: "",
                },
            ),
        ),
        line: 11,
        column: 40,
        span: 473..476,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 11,
        column: 41,
        span: 476..477,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "74",
                    after_decimal: "",
                },
            ),
        ),
        line: 11,
        column: 44,
        span: 477..480,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 11,
        column: 45,
        span: 480..481,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "75",
                    after_decimal: "",
                },
            ),
        ),
        line: 11,
        column: 48,
        span: 481..484,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 11,
        column: 49,
        span: 484..485,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "76",
                    after_decimal: "",
                },
            ),
        ),
        line: 11,
        column: 52,
        span: 485..488,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 11,
        column: 53,
        span: 488..489,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "77",
                    after_decimal: "",
                },
            ),
        ),
        line: 11,
        column: 56,
        span: 489..492,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 11,
        column: 57,
        span: 492..493,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "78",
                    after_decimal: "",
                },
            ),
        ),
        line: 11,
        column: 60,
        span: 493..496,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 11,
        column: 61,
        span: 496..497,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "79",
                    after_decimal: "",
                },
            ),
        ),
        line: 11,
        column: 64,
        span: 497..500,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 11,
        column: 65,
        span: 500..501,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "80",
                    after_decimal: "",
                },
            ),
        ),
        line: 11,
        column: 68,
        span: 501..504,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 11,
        column: 69,
        span: 504..505,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "81",
                    after_decimal: "",
                },
            ),
        ),
        line: 12,
        column: 8,
        span: 510..513,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 12,
        column: 9,
        span: 513..514,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "82",
                    after_decimal: "",
                },
            ),
        ),
        line: 12,
        column: 12,
        span: 514..517,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 12,
        column: 13,
        span: 517..518,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "83",
                    after_decimal: "",
                },
            ),
        ),
        line: 12,
        column: 16,
        span: 518..521,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 12,
        column: 17,
        span: 521..522,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "84",
                    after_decimal: "",
                },
            ),
        ),
        line: 12,
        column: 20,
        span: 522..525,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 12,
        column: 21,
        span: 525..526,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "85",
                    after_decimal: "",
                },
            ),
        ),
        line: 12,
        column: 24,
        span: 526..529,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 12,
        column: 25,
        span: 529..530,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "86",
                    after_decimal: "",
                },
            ),
        ),
        line: 12,
        column: 28,
        span: 530..533,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 12,
        column: 29,
        span: 533..534,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "87",
                    after_decimal: "",
                },
            ),
        ),
        line: 12,
        column: 32,
        span: 534..537,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 12,
        column: 33,
        span: 537..538,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "88",
                    after_decimal: "",
                },
            ),
        ),
        line: 12,
        column: 36,
        span: 538..541,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 12,
        column: 37,
        span: 541..542,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "89",
                    after_decimal: "",
                },
            ),
        ),
        line: 12,
        column: 40,
        span: 542..545,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 12,
        column: 41,
        span: 545..546,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "90",
                    after_decimal: "",
                },
            ),
        ),
        line: 12,
        column: 44,
        span: 546..549,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 12,
        column: 45,
        span: 549..550,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "91",
                    after_decimal: "",
                },
            ),
        ),
        line: 12,
        column: 48,
        span: 550..553,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 12,
        column: 49,
        span: 553..554,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "92",
                    after_decimal: "",
                },
            ),
        ),
        line: 12,
        column: 52,
        span: 554..557,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 12,
        column: 53,
        span: 557..558,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "93",
                    after_decimal: "",
                },
            ),
        ),
        line: 12,
        column: 56,
        span: 558..561,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 12,
        column: 57,
        span: 561..562,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "94",
                    after_decimal: "",
                },
            ),
        ),
        line: 12,
        column: 60,
        span: 562..565,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 12,
        column: 61,
        span: 565..566,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "95",
                    after_decimal: "",
                },
            ),
        ),
        line: 12,
        column: 64,
        span: 566..569,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 12,
        column: 65,
        span: 569..570,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "96",
                    after_decimal: "",
                },
            ),
        ),
        line: 12,
        column: 68,
        span: 570..573,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 12,
        column: 69,
        span: 573..574,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "97",
                    after_decimal: "",
                },
            ),
        ),
        line: 13,
        column: 8,
        span: 579..582,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 13,
        column: 9,
        span: 582..583,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "98",
                    after_decimal: "",
                },
            ),
        ),
        line: 13,
        column: 12,
        span: 583..586,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 13,
        column: 13,
        span: 586..587,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "99",
                    after_decimal: "",
                },
            ),
        ),
        line: 13,
        column: 16,
        span: 587..590,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 13,
        column: 17,
        span: 590..591,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "100",
                    after_decimal: "",
                },
            ),
        ),
        line: 13,
        column: 21,
        span: 591..595,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 13,
        column: 22,
        span: 595..596,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "101",
                    after_decimal: "",
                },
            ),
        ),
        line: 13,
        column: 26,
        span: 596..600,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 13,
        column: 27,
        span: 600..601,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "102",
                    after_decimal: "",
                },
            ),
        ),
        line: 13,
        column: 31,
        span: 601..605,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 13,
        column: 32,
        span: 605..606,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "103",
                    after_decimal: "",
                },
            ),
        ),
        line: 13,
        column: 36,
        span: 606..610,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 13,
        column: 37,
        span: 610..611,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "104",
                    after_decimal: "",
                },
            ),
        ),
        line: 13,
        column: 41,
        span: 611..615,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 13,
        column: 42,
        span: 615..616,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "105",
                    after_decimal: "",
                },
            ),
        ),
        line: 14,
        column: 9,
        span: 621..625,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 14,
        column: 10,
        span: 625..626,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "106",
                    after_decimal: "",
                },
            ),
        ),
        line: 14,
        column: 14,
        span: 626..630,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 14,
        column: 15,
        span: 630..631,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "107",
                    after_decimal: "",
                },
            ),
        ),
        line: 14,
        column: 19,
        span: 631..635,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 14,
        column: 20,
        span: 635..636,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "108",
                    after_decimal: "",
                },
            ),
        ),
        line: 14,
        column: 24,
        span: 636..640,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 14,
        column: 25,
        span: 640..641,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "109",
                    after_decimal: "",
                },
            ),
        ),
        line: 14,
        column: 29,
        span: 641..645,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 14,
        column: 30,
        span: 645..646,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "110",
                    after_decimal: "",
                },
            ),
        ),
        line: 14,
        column: 34,
        span: 646..650,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 14,
        column: 35,
        span: 650..651,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "111",
                    after_decimal: "",
                },
            ),
        ),
        line: 14,
        column: 39,
        span: 651..655,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 14,
        column: 40,
        span: 655..656,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "112",
                    after_decimal: "",
                },
            ),
        ),
        line: 14,
        column: 44,
        span: 656..660,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 14,
        column: 45,
        span: 660..661,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "113",
                    after_decimal: "",
                },
            ),
        ),
        line: 15,
        column: 9,
        span: 666..670,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 15,
        column: 10,
        span: 670..671,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "114",
                    after_decimal: "",
                },
            ),
        ),
        line: 15,
        column: 14,
        span: 671..675,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 15,
        column: 15,
        span: 675..676,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "115",
                    after_decimal: "",
                },
            ),
        ),
        line: 15,
        column: 19,
        span: 676..680,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 15,
        column: 20,
        span: 680..681,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "116",
                    after_decimal: "",
                },
            ),
        ),
        line: 15,
        column: 24,
        span: 681..685,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 15,
        column: 25,
        span: 685..686,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "117",
                    after_decimal: "",
                },
            ),
        ),
        line: 15,
        column: 29,
        span: 686..690,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 15,
        column: 30,
        span: 690..691,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "118",
                    after_decimal: "",
                },
            ),
        ),
        line: 15,
        column: 34,
        span: 691..695,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 15,
        column: 35,
        span: 695..696,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "119",
                    after_decimal: "",
                },
            ),
        ),
        line: 15,
        column: 39,
        span: 696..700,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 15,
        column: 40,
        span: 700..701,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "120",
                    after_decimal: "",
                },
            ),
        ),
        line: 15,
        column: 44,
        span: 701..705,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 15,
        column: 45,
        span: 705..706,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "121",
                    after_decimal: "",
                },
            ),
        ),
        line: 16,
        column: 9,
        span: 711..715,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 16,
        column: 10,
        span: 715..716,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "122",
                    after_decimal: "",
                },
            ),
        ),
        line: 16,
        column: 14,
        span: 716..720,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 16,
        column: 15,
        span: 720..721,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "123",
                    after_decimal: "",
                },
            ),
        ),
        line: 16,
        column: 19,
        span: 721..725,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 16,
        column: 20,
        span: 725..726,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "124",
                    after_decimal: "",
                },
            ),
        ),
        line: 16,
        column: 24,
        span: 726..730,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 16,
        column: 25,
        span: 730..731,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "125",
                    after_decimal: "",
                },
            ),
        ),
        line: 16,
        column: 29,
        span: 731..735,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 16,
        column: 30,
        span: 735..736,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "126",
                    after_decimal: "",
                },
            ),
        ),
        line: 16,
        column: 34,
        span: 736..740,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 16,
        column: 35,
        span: 740..741,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "127",
                    after_decimal: "",
                },
            ),
        ),
        line: 16,
        column: 39,
        span: 741..745,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 16,
        column: 40,
        span: 745..746,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "128",
                    after_decimal: "",
                },
            ),
        ),
        line: 16,
        column: 44,
        span: 746..750,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 16,
        column: 45,
        span: 750..751,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "129",
                    after_decimal: "",
                },
            ),
        ),
        line: 17,
        column: 9,
        span: 756..760,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 17,
        column: 10,
        span: 760..761,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "130",
                    after_decimal: "",
                },
            ),
        ),
        line: 17,
        column: 14,
        span: 761..765,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 17,
        column: 15,
        span: 765..766,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "131",
                    after_decimal: "",
                },
            ),
        ),
        line: 17,
        column: 19,
        span: 766..770,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 17,
        column: 20,
        span: 770..771,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "132",
                    after_decimal: "",
                },
            ),
        ),
        line: 17,
        column: 24,
        span: 771..775,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 17,
        column: 25,
        span: 775..776,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "133",
                    after_decimal: "",
                },
            ),
        ),
        line: 17,
        column: 29,
        span: 776..780,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 17,
        column: 30,
        span: 780..781,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "134",
                    after_decimal: "",
                },
            ),
        ),
        line: 17,
        column: 34,
        span: 781..785,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 17,
        column: 35,
        span: 785..786,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "135",
                    after_decimal: "",
                },
            ),
        ),
        line: 17,
        column: 39,
        span: 786..790,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 17,
        column: 40,
        span: 790..791,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "136",
                    after_decimal: "",
                },
            ),
        ),
        line: 17,
        column: 44,
        span: 791..795,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 17,
        column: 45,
        span: 795..796,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "137",
                    after_decimal: "",
                },
            ),
        ),
        line: 18,
        column: 9,
        span: 801..805,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 18,
        column: 10,
        span: 805..806,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "138",
                    after_decimal: "",
                },
            ),
        ),
        line: 18,
        column: 14,
        span: 806..810,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 18,
        column: 15,
        span: 810..811,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "139",
                    after_decimal: "",
                },
            ),
        ),
        line: 18,
        column: 19,
        span: 811..815,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 18,
        column: 20,
        span: 815..816,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "140",
                    after_decimal: "",
                },
            ),
        ),
        line: 18,
        column: 24,
        span: 816..820,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 18,
        column: 25,
        span: 820..821,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "141",
                    after_decimal: "",
                },
            ),
        ),
        line: 18,
        column: 29,
        span: 821..825,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 18,
        column: 30,
        span: 825..826,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "142",
                    after_decimal: "",
                },
            ),
        ),
        line: 18,
        column: 34,
        span: 826..830,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 18,
        column: 35,
        span: 830..831,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "143",
                    after_decimal: "",
                },
            ),
        ),
        line: 18,
        column: 39,
        span: 831..835,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 18,
        column: 40,
        span: 835..836,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "144",
                    after_decimal: "",
                },
            ),
        ),
        line: 18,
        column: 44,
        span: 836..840,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 18,
        column: 45,
        span: 840..841,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "145",
                    after_decimal: "",
                },
            ),
        ),
        line: 19,
        column: 9,
        span: 846..850,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 19,
        column: 10,
        span: 850..851,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "146",
                    after_decimal: "",
                },
            ),
        ),
        line: 19,
        column: 14,
        span: 851..855,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 19,
        column: 15,
        span: 855..856,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "147",
                    after_decimal: "",
                },
            ),
        ),
        line: 19,
        column: 19,
        span: 856..860,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 19,
        column: 20,
        span: 860..861,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "148",
                    after_decimal: "",
                },
            ),
        ),
        line: 19,
        column: 24,
        span: 861..865,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 19,
        column: 25,
        span: 865..866,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "149",
                    after_decimal: "",
                },
            ),
        ),
        line: 19,
        column: 29,
        span: 866..870,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 19,
        column: 30,
        span: 870..871,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "150",
                    after_decimal: "",
                },
            ),
        ),
        line: 19,
        column: 34,
        span: 871..875,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 19,
        column: 35,
        span: 875..876,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "151",
                    after_decimal: "",
                },
            ),
        ),
        line: 19,
        column: 39,
        span: 876..880,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 19,
        column: 40,
        span: 880..881,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "152",
                    after_decimal: "",
                },
            ),
        ),
        line: 19,
        column: 44,
        span: 881..885,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 19,
        column: 45,
        span: 885..886,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "153",
                    after_decimal: "",
                },
            ),
        ),
        line: 20,
        column: 9,
        span: 891..895,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 20,
        column: 10,
        span: 895..896,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "154",
                    after_decimal: "",
                },
            ),
        ),
        line: 20,
        column: 14,
        span: 896..900,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 20,
        column: 15,
        span: 900..901,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "155",
                    after_decimal: "",
                },
            ),
        ),
        line: 20,
        column: 19,
        span: 901..905,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 20,
        column: 20,
        span: 905..906,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "156",
                    after_decimal: "",
                },
            ),
        ),
        line: 20,
        column: 24,
        span: 906..910,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 20,
        column: 25,
        span: 910..911,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "157",
                    after_decimal: "",
                },
            ),
        ),
        line: 20,
        column: 29,
        span: 911..915,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 20,
        column: 30,
        span: 915..916,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "158",
                    after_decimal: "",
                },
            ),
        ),
        line: 20,
        column: 34,
        span: 916..920,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 20,
        column: 35,
        span: 920..921,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "159",
                    after_decimal: "",
                },
            ),
        ),
        line: 20,
        column: 39,
        span: 921..925,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 20,
        column: 40,
        span: 925..926,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "160",
                    after_decimal: "",
                },
            ),
        ),
        line: 20,
        column: 44,
        span: 926..930,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 20,
        column: 45,
        span: 930..931,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "161",
                    after_decimal: "",
                },
            ),
        ),
        line: 21,
        column: 9,
        span: 936..940,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 21,
        column: 10,
        span: 940..941,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "162",
                    after_decimal: "",
                },
            ),
        ),
        line: 21,
        column: 14,
        span: 941..945,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 21,
        column: 15,
        span: 945..946,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "163",
                    after_decimal: "",
                },
            ),
        ),
        line: 21,
        column: 19,
        span: 946..950,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 21,
        column: 20,
        span: 950..951,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "164",
                    after_decimal: "",
                },
            ),
        ),
        line: 21,
        column: 24,
        span: 951..955,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 21,
        column: 25,
        span: 955..956,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "165",
                    after_decimal: "",
                },
            ),
        ),
        line: 21,
        column: 29,
        span: 956..960,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 21,
        column: 30,
        span: 960..961,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "166",
                    after_decimal: "",
                },
            ),
        ),
        line: 21,
        column: 34,
        span: 961..965,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 21,
        column: 35,
        span: 965..966,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "167",
                    after_decimal: "",
                },
            ),
        ),
        line: 21,
        column: 39,
        span: 966..970,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 21,
        column: 40,
        span: 970..971,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "168",
                    after_decimal: "",
                },
            ),
        ),
        line: 21,
        column: 44,
        span: 971..975,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 21,
        column: 45,
        span: 975..976,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "169",
                    after_decimal: "",
                },
            ),
        ),
        line: 22,
        column: 9,
        span: 981..985,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 22,
        column: 10,
        span: 985..986,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "170",
                    after_decimal: "",
                },
            ),
        ),
        line: 22,
        column: 14,
        span: 986..990,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 22,
        column: 15,
        span: 990..991,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "171",
                    after_decimal: "",
                },
            ),
        ),
        line: 22,
        column: 19,
        span: 991..995,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 22,
        column: 20,
        span: 995..996,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "172",
                    after_decimal: "",
                },
            ),
        ),
        line: 22,
        column: 24,
        span: 996..1000,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 22,
        column: 25,
        span: 1000..1001,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "173",
                    after_decimal: "",
                },
            ),
        ),
        line: 22,
        column: 29,
        span: 1001..1005,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 22,
        column: 30,
        span: 1005..1006,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "174",
                    after_decimal: "",
                },
            ),
        ),
        line: 22,
        column: 34,
        span: 1006..1010,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 22,
        column: 35,
        span: 1010..1011,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "175",
                    after_decimal: "",
                },
            ),
        ),
        line: 22,
        column: 39,
        span: 1011..1015,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 22,
        column: 40,
        span: 1015..1016,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "176",
                    after_decimal: "",
                },
            ),
        ),
        line: 22,
        column: 44,
        span: 1016..1020,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 22,
        column: 45,
        span: 1020..1021,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "177",
                    after_decimal: "",
                },
            ),
        ),
        line: 23,
        column: 9,
        span: 1026..1030,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 23,
        column: 10,
        span: 1030..1031,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "178",
                    after_decimal: "",
                },
            ),
        ),
        line: 23,
        column: 14,
        span: 1031..1035,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 23,
        column: 15,
        span: 1035..1036,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "179",
                    after_decimal: "",
                },
            ),
        ),
        line: 23,
        column: 19,
        span: 1036..1040,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 23,
        column: 20,
        span: 1040..1041,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "180",
                    after_decimal: "",
                },
            ),
        ),
        line: 23,
        column: 24,
        span: 1041..1045,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 23,
        column: 25,
        span: 1045..1046,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "181",
                    after_decimal: "",
                },
            ),
        ),
        line: 23,
        column: 29,
        span: 1046..1050,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 23,
        column: 30,
        span: 1050..1051,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "182",
                    after_decimal: "",
                },
            ),
        ),
        line: 23,
        column: 34,
        span: 1051..1055,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 23,
        column: 35,
        span: 1055..1056,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "183",
                    after_decimal: "",
                },
            ),
        ),
        line: 23,
        column: 39,
        span: 1056..1060,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 23,
        column: 40,
        span: 1060..1061,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "184",
                    after_decimal: "",
                },
            ),
        ),
        line: 23,
        column: 44,
        span: 1061..1065,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 23,
        column: 45,
        span: 1065..1066,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "185",
                    after_decimal: "",
                },
            ),
        ),
        line: 24,
        column: 9,
        span: 1071..1075,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 24,
        column: 10,
        span: 1075..1076,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "186",
                    after_decimal: "",
                },
            ),
        ),
        line: 24,
        column: 14,
        span: 1076..1080,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 24,
        column: 15,
        span: 1080..1081,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "187",
                    after_decimal: "",
                },
            ),
        ),
        line: 24,
        column: 19,
        span: 1081..1085,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 24,
        column: 20,
        span: 1085..1086,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "188",
                    after_decimal: "",
                },
            ),
        ),
        line: 24,
        column: 24,
        span: 1086..1090,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 24,
        column: 25,
        span: 1090..1091,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "189",
                    after_decimal: "",
                },
            ),
        ),
        line: 24,
        column: 29,
        span: 1091..1095,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 24,
        column: 30,
        span: 1095..1096,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "190",
                    after_decimal: "",
                },
            ),
        ),
        line: 24,
        column: 34,
        span: 1096..1100,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 24,
        column: 35,
        span: 1100..1101,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "191",
                    after_decimal: "",
                },
            ),
        ),
        line: 24,
        column: 39,
        span: 1101..1105,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 24,
        column: 40,
        span: 1105..1106,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "192",
                    after_decimal: "",
                },
            ),
        ),
        line: 24,
        column: 44,
        span: 1106..1110,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 24,
        column: 45,
        span: 1110..1111,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "193",
                    after_decimal: "",
                },
            ),
        ),
        line: 25,
        column: 9,
        span: 1116..1120,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 25,
        column: 10,
        span: 1120..1121,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "194",
                    after_decimal: "",
                },
            ),
        ),
        line: 25,
        column: 14,
        span: 1121..1125,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 25,
        column: 15,
        span: 1125..1126,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "195",
                    after_decimal: "",
                },
            ),
        ),
        line: 25,
        column: 19,
        span: 1126..1130,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 25,
        column: 20,
        span: 1130..1131,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "196",
                    after_decimal: "",
                },
            ),
        ),
        line: 25,
        column: 24,
        span: 1131..1135,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 25,
        column: 25,
        span: 1135..1136,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "197",
                    after_decimal: "",
                },
            ),
        ),
        line: 25,
        column: 29,
        span: 1136..1140,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 25,
        column: 30,
        span: 1140..1141,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "198",
                    after_decimal: "",
                },
            ),
        ),
        line: 25,
        column: 34,
        span: 1141..1145,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 25,
        column: 35,
        span: 1145..1146,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "199",
                    after_decimal: "",
                },
            ),
        ),
        line: 25,
        column: 39,
        span: 1146..1150,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 25,
        column: 40,
        span: 1150..1151,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "200",
                    after_decimal: "",
                },
            ),
        ),
        line: 25,
        column: 44,
        span: 1151..1155,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 25,
        column: 45,
        span: 1155..1156,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "201",
                    after_decimal: "",
                },
            ),
        ),
        line: 26,
        column: 9,
        span: 1161..1165,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 26,
        column: 10,
        span: 1165..1166,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "202",
                    after_decimal: "",
                },
            ),
        ),
        line: 26,
        column: 14,
        span: 1166..1170,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 26,
        column: 15,
        span: 1170..1171,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "203",
                    after_decimal: "",
                },
            ),
        ),
        line: 26,
        column: 19,
        span: 1171..1175,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 26,
        column: 20,
        span: 1175..1176,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "204",
                    after_decimal: "",
                },
            ),
        ),
        line: 26,
        column: 24,
        span: 1176..1180,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 26,
        column: 25,
        span: 1180..1181,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "205",
                    after_decimal: "",
                },
            ),
        ),
        line: 26,
        column: 29,
        span: 1181..1185,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 26,
        column: 30,
        span: 1185..1186,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "206",
                    after_decimal: "",
                },
            ),
        ),
        line: 26,
        column: 34,
        span: 1186..1190,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 26,
        column: 35,
        span: 1190..1191,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "207",
                    after_decimal: "",
                },
            ),
        ),
        line: 26,
        column: 39,
        span: 1191..1195,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 26,
        column: 40,
        span: 1195..1196,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "208",
                    after_decimal: "",
                },
            ),
        ),
        line: 26,
        column: 44,
        span: 1196..1200,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 26,
        column: 45,
        span: 1200..1201,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "209",
                    after_decimal: "",
                },
            ),
        ),
        line: 27,
        column: 9,
        span: 1206..1210,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 27,
        column: 10,
        span: 1210..1211,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "210",
                    after_decimal: "",
                },
            ),
        ),
        line: 27,
        column: 14,
        span: 1211..1215,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 27,
        column: 15,
        span: 1215..1216,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "211",
                    after_decimal: "",
                },
            ),
        ),
        line: 27,
        column: 19,
        span: 1216..1220,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 27,
        column: 20,
        span: 1220..1221,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "212",
                    after_decimal: "",
                },
            ),
        ),
        line: 27,
        column: 24,
        span: 1221..1225,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 27,
        column: 25,
        span: 1225..1226,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "213",
                    after_decimal: "",
                },
            ),
        ),
        line: 27,
        column: 29,
        span: 1226..1230,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 27,
        column: 30,
        span: 1230..1231,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "214",
                    after_decimal: "",
                },
            ),
        ),
        line: 27,
        column: 34,
        span: 1231..1235,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 27,
        column: 35,
        span: 1235..1236,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "215",
                    after_decimal: "",
                },
            ),
        ),
        line: 27,
        column: 39,
        span: 1236..1240,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 27,
        column: 40,
        span: 1240..1241,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "216",
                    after_decimal: "",
                },
            ),
        ),
        line: 27,
        column: 44,
        span: 1241..1245,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 27,
        column: 45,
        span: 1245..1246,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "217",
                    after_decimal: "",
                },
            ),
        ),
        line: 28,
        column: 9,
        span: 1251..1255,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 28,
        column: 10,
        span: 1255..1256,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "218",
                    after_decimal: "",
                },
            ),
        ),
        line: 28,
        column: 14,
        span: 1256..1260,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 28,
        column: 15,
        span: 1260..1261,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "219",
                    after_decimal: "",
                },
            ),
        ),
        line: 28,
        column: 19,
        span: 1261..1265,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 28,
        column: 20,
        span: 1265..1266,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "220",
                    after_decimal: "",
                },
            ),
        ),
        line: 28,
        column: 24,
        span: 1266..1270,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 28,
        column: 25,
        span: 1270..1271,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "221",
                    after_decimal: "",
                },
            ),
        ),
        line: 28,
        column: 29,
        span: 1271..1275,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 28,
        column: 30,
        span: 1275..1276,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "222",
                    after_decimal: "",
                },
            ),
        ),
        line: 28,
        column: 34,
        span: 1276..1280,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 28,
        column: 35,
        span: 1280..1281,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "223",
                    after_decimal: "",
                },
            ),
        ),
        line: 28,
        column: 39,
        span: 1281..1285,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 28,
        column: 40,
        span: 1285..1286,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "224",
                    after_decimal: "",
                },
            ),
        ),
        line: 28,
        column: 44,
        span: 1286..1290,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 28,
        column: 45,
        span: 1290..1291,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "225",
                    after_decimal: "",
                },
            ),
        ),
        line: 29,
        column: 9,
        span: 1296..1300,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 29,
        column: 10,
        span: 1300..1301,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "226",
                    after_decimal: "",
                },
            ),
        ),
        line: 29,
        column: 14,
        span: 1301..1305,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 29,
        column: 15,
        span: 1305..1306,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "227",
                    after_decimal: "",
                },
            ),
        ),
        line: 29,
        column: 19,
        span: 1306..1310,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 29,
        column: 20,
        span: 1310..1311,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "228",
                    after_decimal: "",
                },
            ),
        ),
        line: 29,
        column: 24,
        span: 1311..1315,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 29,
        column: 25,
        span: 1315..1316,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "229",
                    after_decimal: "",
                },
            ),
        ),
        line: 29,
        column: 29,
        span: 1316..1320,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 29,
        column: 30,
        span: 1320..1321,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "230",
                    after_decimal: "",
                },
            ),
        ),
        line: 29,
        column: 34,
        span: 1321..1325,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 29,
        column: 35,
        span: 1325..1326,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "231",
                    after_decimal: "",
                },
            ),
        ),
        line: 29,
        column: 39,
        span: 1326..1330,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 29,
        column: 40,
        span: 1330..1331,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "232",
                    after_decimal: "",
                },
            ),
        ),
        line: 29,
        column: 44,
        span: 1331..1335,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 29,
        column: 45,
        span: 1335..1336,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "233",
                    after_decimal: "",
                },
            ),
        ),
        line: 30,
        column: 9,
        span: 1341..1345,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 30,
        column: 10,
        span: 1345..1346,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "234",
                    after_decimal: "",
                },
            ),
        ),
        line: 30,
        column: 14,
        span: 1346..1350,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 30,
        column: 15,
        span: 1350..1351,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "235",
                    after_decimal: "",
                },
            ),
        ),
        line: 30,
        column: 19,
        span: 1351..1355,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 30,
        column: 20,
        span: 1355..1356,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "236",
                    after_decimal: "",
                },
            ),
        ),
        line: 30,
        column: 24,
        span: 1356..1360,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 30,
        column: 25,
        span: 1360..1361,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "237",
                    after_decimal: "",
                },
            ),
        ),
        line: 30,
        column: 29,
        span: 1361..1365,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 30,
        column: 30,
        span: 1365..1366,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "238",
                    after_decimal: "",
                },
            ),
        ),
        line: 30,
        column: 34,
        span: 1366..1370,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 30,
        column: 35,
        span: 1370..1371,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "239",
                    after_decimal: "",
                },
            ),
        ),
        line: 30,
        column: 39,
        span: 1371..1375,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 30,
        column: 40,
        span: 1375..1376,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "240",
                    after_decimal: "",
                },
            ),
        ),
        line: 30,
        column: 44,
        span: 1376..1380,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 30,
        column: 45,
        span: 1380..1381,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "241",
                    after_decimal: "",
                },
            ),
        ),
        line: 31,
        column: 9,
        span: 1386..1390,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 31,
        column: 10,
        span: 1390..1391,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "242",
                    after_decimal: "",
                },
            ),
        ),
        line: 31,
        column: 14,
        span: 1391..1395,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 31,
        column: 15,
        span: 1395..1396,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "243",
                    after_decimal: "",
                },
            ),
        ),
        line: 31,
        column: 19,
        span: 1396..1400,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 31,
        column: 20,
        span: 1400..1401,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "244",
                    after_decimal: "",
                },
            ),
        ),
        line: 31,
        column: 24,
        span: 1401..1405,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 31,
        column: 25,
        span: 1405..1406,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "245",
                    after_decimal: "",
                },
            ),
        ),
        line: 31,
        column: 29,
        span: 1406..1410,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 31,
        column: 30,
        span: 1410..1411,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "246",
                    after_decimal: "",
                },
            ),
        ),
        line: 31,
        column: 34,
        span: 1411..1415,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 31,
        column: 35,
        span: 1415..1416,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "247",
                    after_decimal: "",
                },
            ),
        ),
        line: 31,
        column: 39,
        span: 1416..1420,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 31,
        column: 40,
        span: 1420..1421,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "248",
                    after_decimal: "",
                },
            ),
        ),
        line: 31,
        column: 44,
        span: 1421..1425,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 31,
        column: 45,
        span: 1425..1426,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "249",
                    after_decimal: "",
                },
            ),
        ),
        line: 32,
        column: 9,
        span: 1431..1435,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 32,
        column: 10,
        span: 1435..1436,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "250",
                    after_decimal: "",
                },
            ),
        ),
        line: 32,
        column: 14,
        span: 1436..1440,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 32,
        column: 15,
        span: 1440..1441,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "251",
                    after_decimal: "",
                },
            ),
        ),
        line: 32,
        column: 19,
        span: 1441..1445,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 32,
        column: 20,
        span: 1445..1446,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "252",
                    after_decimal: "",
                },
            ),
        ),
        line: 32,
        column: 24,
        span: 1446..1450,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 32,
        column: 25,
        span: 1450..1451,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "253",
                    after_decimal: "",
                },
            ),
        ),
        line: 32,
        column: 29,
        span: 1451..1455,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 32,
        column: 30,
        span: 1455..1456,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "254",
                    after_decimal: "",
                },
            ),
        ),
        line: 32,
        column: 34,
        span: 1456..1460,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 32,
        column: 35,
        span: 1460..1461,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "255",
                    after_decimal: "",
                },
            ),
        ),
        line: 32,
        column: 39,
        span: 1461..1465,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 32,
        column: 40,
        span: 1465..1466,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "256",
                    after_decimal: "",
                },
            ),
        ),
        line: 32,
        column: 44,
        span: 1466..1470,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 32,
        column: 45,
        span: 1470..1471,
    },
    Token {
        kind: RightBrace,
        lexeme: Symbol(
            "}",
        ),
        line: 33,
        column: 4,
        span: 1474..1475,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 34,
        column: 9,
        span: 1478..1484,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 34,
        column: 10,
        span: 1484..1485,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "24",
                    after_decimal: ".5",
                },
            ),
        ),
        line: 34,
        column: 14,
        span: 1484..1489,
    },
    Token {
        kind: Plus,
        lexeme: Symbol(
            "+",
        ),
        line: 34,
        column: 16,
        span: 1490..1491,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "0",
                    after_decimal: ".6",
                },
            ),
        ),
        line: 34,
        column: 20,
        span: 1491..1495,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 34,
        column: 23,
        span: 1496..1498,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "25",
                    after_decimal: ".1",
                },
            ),
        ),
        line: 34,
        column: 28,
        span: 1498..1503,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 34,
        column: 29,
        span: 1503..1504,
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        line: 35,
        column: 8,
        span: 1507..1512,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "t",
        ),
        line: 35,
        column: 10,
        span: 1513..1514,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 35,
        column: 12,
        span: 1515..1516,
    },
    Token {
        kind: LeftBrace,
        lexeme: Symbol(
            "{",
        ),
        line: 35,
        column: 14,
        span: 1517..1518,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "foo",
        ),
        line: 35,
        column: 17,
        span: 1518..1521,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 35,
        column: 19,
        span: 1522..1523,
    },
    Token {
        kind: Function,
        lexeme: Symbol(
            "function",
        ),
        line: 35,
        column: 28,
        span: 1524..1532,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 35,
        column: 30,
        span: 1533..1534,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "self",
        ),
        line: 35,
        column: 34,
        span: 1534..1538,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 35,
        column: 35,
        span: 1538..1539,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "x",
        ),
        line: 35,
        column: 37,
        span: 1540..1541,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 35,
        column: 38,
        span: 1541..1542,
    },
    Token {
        kind: Return,
        lexeme: Symbol(
            "return",
        ),
        line: 35,
        column: 45,
        span: 1543..1549,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "x",
        ),
        line: 35,
        column: 47,
        span: 1550..1551,
    },
    Token {
        kind: Plus,
        lexeme: Symbol(
            "+",
        ),
        line: 35,
        column: 49,
        span: 1552..1553,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "self",
        ),
        line: 35,
        column: 54,
        span: 1554..1558,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 35,
        column: 55,
        span: 1558..1559,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "x",
        ),
        line: 35,
        column: 56,
        span: 1559..1560,
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        line: 35,
        column: 60,
        span: 1561..1564,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 35,
        column: 61,
        span: 1564..1565,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "x",
        ),
        line: 35,
        column: 63,
        span: 1566..1567,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 35,
        column: 65,
        span: 1568..1569,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "10",
                    after_decimal: "",
                },
            ),
        ),
        line: 35,
        column: 68,
        span: 1569..1572,
    },
    Token {
        kind: RightBrace,
        lexeme: Symbol(
            "}",
        ),
        line: 35,
        column: 69,
        span: 1572..1573,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "t",
        ),
        line: 36,
        column: 4,
        span: 1576..1577,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 36,
        column: 5,
        span: 1577..1578,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "t",
        ),
        line: 36,
        column: 6,
        span: 1578..1579,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 36,
        column: 8,
        span: 1580..1581,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "t",
        ),
        line: 36,
        column: 0,
        span: 1582..1583,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 37,
        column: 9,
        span: 1586..1592,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 37,
        column: 10,
        span: 1592..1593,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "t",
        ),
        line: 37,
        column: 11,
        span: 1593..1594,
    },
    Token {
        kind: Colon,
        lexeme: Symbol(
            ":",
        ),
        line: 37,
        column: 12,
        span: 1594..1595,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "foo",
        ),
        line: 37,
        column: 15,
        span: 1595..1598,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 37,
        column: 16,
        span: 1598..1599,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "1",
                    after_decimal: ".5",
                },
            ),
        ),
        line: 37,
        column: 19,
        span: 1598..1602,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 37,
        column: 20,
        span: 1602..1603,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 37,
        column: 23,
        span: 1604..1606,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "11",
                    after_decimal: ".5",
                },
            ),
        ),
        line: 37,
        column: 28,
        span: 1606..1611,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 37,
        column: 29,
        span: 1611..1612,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 38,
        column: 9,
        span: 1615..1621,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 38,
        column: 10,
        span: 1621..1622,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "t",
        ),
        line: 38,
        column: 11,
        span: 1622..1623,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 38,
        column: 12,
        span: 1623..1624,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "t",
        ),
        line: 38,
        column: 13,
        span: 1624..1625,
    },
    Token {
        kind: Colon,
        lexeme: Symbol(
            ":",
        ),
        line: 38,
        column: 14,
        span: 1625..1626,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "foo",
        ),
        line: 38,
        column: 17,
        span: 1626..1629,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 38,
        column: 18,
        span: 1629..1630,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "0",
                    after_decimal: ".5",
                },
            ),
        ),
        line: 38,
        column: 21,
        span: 1629..1633,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 38,
        column: 22,
        span: 1633..1634,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 38,
        column: 25,
        span: 1635..1637,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "10",
                    after_decimal: ".5",
                },
            ),
        ),
        line: 38,
        column: 30,
        span: 1637..1642,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 38,
        column: 31,
        span: 1642..1643,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 39,
        column: 9,
        span: 1668..1674,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 39,
        column: 10,
        span: 1674..1675,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "24",
                    after_decimal: ".3",
                },
            ),
        ),
        line: 39,
        column: 14,
        span: 1674..1679,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 39,
        column: 17,
        span: 1680..1682,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "24",
                    after_decimal: ".3",
                },
            ),
        ),
        line: 39,
        column: 22,
        span: 1682..1687,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 39,
        column: 23,
        span: 1687..1688,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 40,
        column: 9,
        span: 1691..1697,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 40,
        column: 10,
        span: 1697..1698,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 40,
        column: 11,
        span: 1698..1699,
    },
    Token {
        kind: Function,
        lexeme: Symbol(
            "function",
        ),
        line: 40,
        column: 19,
        span: 1699..1707,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 40,
        column: 21,
        span: 1708..1709,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 40,
        column: 22,
        span: 1709..1710,
    },
    Token {
        kind: Return,
        lexeme: Symbol(
            "return",
        ),
        line: 40,
        column: 29,
        span: 1711..1717,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "t",
        ),
        line: 40,
        column: 31,
        span: 1718..1719,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 40,
        column: 32,
        span: 1719..1720,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "x",
        ),
        line: 40,
        column: 33,
        span: 1720..1721,
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        line: 40,
        column: 37,
        span: 1722..1725,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 40,
        column: 38,
        span: 1725..1726,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 40,
        column: 39,
        span: 1726..1727,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 40,
        column: 40,
        span: 1727..1728,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 40,
        column: 43,
        span: 1729..1731,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "10",
                    after_decimal: "",
                },
            ),
        ),
        line: 40,
        column: 46,
        span: 1731..1734,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 40,
        column: 47,
        span: 1734..1735,
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        line: 41,
        column: 0,
        span: 1736..1739,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "foo",
        ),
        line: 44,
        column: 4,
        span: 1742..1745,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 44,
        column: 5,
        span: 1745..1746,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 44,
        column: 6,
        span: 1746..1747,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "foo",
        ),
        line: 45,
        column: 4,
        span: 1748..1751,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 45,
        column: 6,
        span: 1752..1753,
    },
    Token {
        kind: Nil,
        lexeme: Symbol(
            "nil",
        ),
        line: 45,
        column: 0,
        span: 1754..1757,
    },
    Token {
        kind: If,
        lexeme: Symbol(
            "if",
        ),
        line: 47,
        column: 3,
        span: 1759..1761,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "_soft",
        ),
        line: 47,
        column: 9,
        span: 1762..1767,
    },
    Token {
        kind: Then,
        lexeme: Symbol(
            "then",
        ),
        line: 47,
        column: 14,
        span: 1768..1772,
    },
    Token {
        kind: Return,
        lexeme: Symbol(
            "return",
        ),
        line: 47,
        column: 21,
        span: 1773..1779,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "10",
                    after_decimal: "",
                },
            ),
        ),
        line: 47,
        column: 24,
        span: 1779..1782,
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        line: 47,
        column: 0,
        span: 1783..1786,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "print",
        ),
        line: 49,
        column: 6,
        span: 1788..1793,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"testing large programs (>64k)\"",
        ),
        line: 49,
        column: 38,
        span: 1794..1825,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "prog",
        ),
        line: 52,
        column: 5,
        span: 1870..1874,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 52,
        column: 7,
        span: 1875..1876,
    },
    Token {
        kind: MultilineString,
        lexeme: Symbol(
            "[[$\n\nlocal a,b\n\nb = {$1$\n  b30009 = 65534,\n  b30010 = 65535,\n  b30011 = 65536,\n  b30012 = 65537,\n  b30013 = 16777214,\n  b30014 = 16777215,\n  b30015 = 16777216,\n  b30016 = 16777217,\n  b30017 = 4294967294,\n  b30018 = 4294967295,\n  b30019 = 4294967296,\n  b30020 = 4294967297,\n  b30021 = -65534,\n  b30022 = -65535,\n  b30023 = -65536,\n  b30024 = -4294967297,\n  b30025 = 15012.5,\n  $2$\n};\n\nassert(b.a50008 == 25004 and b[\"a11\"] == 5.5)\nassert(b.a33007 == 16503.5 and b.a50009 == 25004.5)\nassert(b[\"b\"..30024] == -4294967297)\n\nfunction b:xxx (a,b) return a+b end\nassert(b:xxx(10, 12) == 22)   -- pushself with non-constant index\nb.xxx = nil\n\ns = 0; n=0\nfor a,b in pairs(b) do s=s+b; n=n+1 end\nassert(s==13977183656.5  and n==70001)\n\n\na = nil; b = nil\nprint'+'\n\nfunction f(x) b=x end\n\na = f{$3$} or 10\n\nassert(a==10)\nassert(b[1] == \"a10\" and b[2] == 5 and b[#b-1] == \"a50009\")\n\n\nfunction xxxx (x) return b[x] end\n\nassert(xxxx(3) == \"a11\")\n\na = nil; b=nil\nxxxx = nil\n\nreturn 10\n\n]]",
        ),
        line: 110,
        column: 3,
        span: 1877..2849,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "F",
        ),
        line: 113,
        column: 2,
        span: 2883..2884,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 113,
        column: 4,
        span: 2885..2886,
    },
    Token {
        kind: LeftBrace,
        lexeme: Symbol(
            "{",
        ),
        line: 113,
        column: 6,
        span: 2887..2888,
    },
    Token {
        kind: Function,
        lexeme: Symbol(
            "function",
        ),
        line: 114,
        column: 9,
        span: 2889..2897,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 114,
        column: 11,
        span: 2898..2899,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 114,
        column: 12,
        span: 2899..2900,
    },
    Token {
        kind: For,
        lexeme: Symbol(
            "for",
        ),
        line: 115,
        column: 6,
        span: 2912..2915,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "i",
        ),
        line: 115,
        column: 8,
        span: 2916..2917,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 115,
        column: 9,
        span: 2917..2918,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "10",
                    after_decimal: "",
                },
            ),
        ),
        line: 115,
        column: 11,
        span: 2917..2920,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 115,
        column: 12,
        span: 2920..2921,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "50009",
                    after_decimal: "",
                },
            ),
        ),
        line: 115,
        column: 17,
        span: 2920..2926,
    },
    Token {
        kind: Do,
        lexeme: Symbol(
            "do",
        ),
        line: 115,
        column: 0,
        span: 2927..2929,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 116,
        column: 7,
        span: 2934..2936,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 116,
        column: 8,
        span: 2936..2937,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "write",
        ),
        line: 116,
        column: 13,
        span: 2937..2942,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 116,
        column: 14,
        span: 2942..2943,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'a'",
        ),
        line: 116,
        column: 17,
        span: 2943..2946,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 116,
        column: 18,
        span: 2946..2947,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "i",
        ),
        line: 116,
        column: 20,
        span: 2948..2949,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 116,
        column: 21,
        span: 2949..2950,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "' = '",
        ),
        line: 116,
        column: 27,
        span: 2951..2956,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 116,
        column: 28,
        span: 2956..2957,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "5",
                    after_decimal: "",
                },
            ),
        ),
        line: 116,
        column: 30,
        span: 2957..2959,
    },
    Token {
        kind: Plus,
        lexeme: Symbol(
            "+",
        ),
        line: 116,
        column: 31,
        span: 2959..2960,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 116,
        column: 32,
        span: 2960..2961,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 116,
        column: 33,
        span: 2961..2962,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "i",
        ),
        line: 116,
        column: 34,
        span: 2962..2963,
    },
    Token {
        kind: Minus,
        lexeme: Symbol(
            "-",
        ),
        line: 116,
        column: 35,
        span: 2963..2964,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "10",
                    after_decimal: "",
                },
            ),
        ),
        line: 116,
        column: 37,
        span: 2963..2966,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 116,
        column: 38,
        span: 2966..2967,
    },
    Token {
        kind: Slash,
        lexeme: Symbol(
            "/",
        ),
        line: 116,
        column: 39,
        span: 2967..2968,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "2",
                    after_decimal: "",
                },
            ),
        ),
        line: 116,
        column: 40,
        span: 2967..2969,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 116,
        column: 41,
        span: 2969..2970,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 116,
        column: 42,
        span: 2970..2971,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "',\\n'",
        ),
        line: 116,
        column: 48,
        span: 2972..2977,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 116,
        column: 49,
        span: 2977..2978,
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        line: 117,
        column: 0,
        span: 2981..2984,
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        line: 118,
        column: 4,
        span: 2985..2988,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 118,
        column: 5,
        span: 2988..2989,
    },
    Token {
        kind: Function,
        lexeme: Symbol(
            "function",
        ),
        line: 120,
        column: 9,
        span: 2991..2999,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 120,
        column: 11,
        span: 3000..3001,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 120,
        column: 12,
        span: 3001..3002,
    },
    Token {
        kind: For,
        lexeme: Symbol(
            "for",
        ),
        line: 121,
        column: 6,
        span: 3014..3017,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "i",
        ),
        line: 121,
        column: 8,
        span: 3018..3019,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 121,
        column: 9,
        span: 3019..3020,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "30026",
                    after_decimal: "",
                },
            ),
        ),
        line: 121,
        column: 14,
        span: 3019..3025,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 121,
        column: 15,
        span: 3025..3026,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "50009",
                    after_decimal: "",
                },
            ),
        ),
        line: 121,
        column: 20,
        span: 3025..3031,
    },
    Token {
        kind: Do,
        lexeme: Symbol(
            "do",
        ),
        line: 121,
        column: 0,
        span: 3032..3034,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 122,
        column: 7,
        span: 3039..3041,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 122,
        column: 8,
        span: 3041..3042,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "write",
        ),
        line: 122,
        column: 13,
        span: 3042..3047,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 122,
        column: 14,
        span: 3047..3048,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'b'",
        ),
        line: 122,
        column: 17,
        span: 3048..3051,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 122,
        column: 18,
        span: 3051..3052,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "i",
        ),
        line: 122,
        column: 20,
        span: 3053..3054,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 122,
        column: 21,
        span: 3054..3055,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "' = '",
        ),
        line: 122,
        column: 27,
        span: 3056..3061,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 122,
        column: 28,
        span: 3061..3062,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "15013",
                    after_decimal: "",
                },
            ),
        ),
        line: 122,
        column: 34,
        span: 3062..3068,
    },
    Token {
        kind: Plus,
        lexeme: Symbol(
            "+",
        ),
        line: 122,
        column: 35,
        span: 3068..3069,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 122,
        column: 36,
        span: 3069..3070,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 122,
        column: 37,
        span: 3070..3071,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "i",
        ),
        line: 122,
        column: 38,
        span: 3071..3072,
    },
    Token {
        kind: Minus,
        lexeme: Symbol(
            "-",
        ),
        line: 122,
        column: 39,
        span: 3072..3073,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "30026",
                    after_decimal: "",
                },
            ),
        ),
        line: 122,
        column: 44,
        span: 3072..3078,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 122,
        column: 45,
        span: 3078..3079,
    },
    Token {
        kind: Slash,
        lexeme: Symbol(
            "/",
        ),
        line: 122,
        column: 46,
        span: 3079..3080,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "2",
                    after_decimal: "",
                },
            ),
        ),
        line: 122,
        column: 47,
        span: 3079..3081,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 122,
        column: 48,
        span: 3081..3082,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 122,
        column: 49,
        span: 3082..3083,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "',\\n'",
        ),
        line: 122,
        column: 55,
        span: 3084..3089,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 122,
        column: 56,
        span: 3089..3090,
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        line: 123,
        column: 0,
        span: 3093..3096,
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        line: 124,
        column: 4,
        span: 3097..3100,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 124,
        column: 5,
        span: 3100..3101,
    },
    Token {
        kind: Function,
        lexeme: Symbol(
            "function",
        ),
        line: 126,
        column: 9,
        span: 3103..3111,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 126,
        column: 11,
        span: 3112..3113,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 126,
        column: 12,
        span: 3113..3114,
    },
    Token {
        kind: For,
        lexeme: Symbol(
            "for",
        ),
        line: 127,
        column: 6,
        span: 3126..3129,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "i",
        ),
        line: 127,
        column: 8,
        span: 3130..3131,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 127,
        column: 9,
        span: 3131..3132,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "10",
                    after_decimal: "",
                },
            ),
        ),
        line: 127,
        column: 11,
        span: 3131..3134,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 127,
        column: 12,
        span: 3134..3135,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "50009",
                    after_decimal: "",
                },
            ),
        ),
        line: 127,
        column: 17,
        span: 3134..3140,
    },
    Token {
        kind: Do,
        lexeme: Symbol(
            "do",
        ),
        line: 127,
        column: 0,
        span: 3141..3143,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 128,
        column: 7,
        span: 3148..3150,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 128,
        column: 8,
        span: 3150..3151,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "write",
        ),
        line: 128,
        column: 13,
        span: 3151..3156,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 128,
        column: 14,
        span: 3156..3157,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'\"a'",
        ),
        line: 128,
        column: 18,
        span: 3157..3161,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 128,
        column: 19,
        span: 3161..3162,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "i",
        ),
        line: 128,
        column: 21,
        span: 3163..3164,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 128,
        column: 22,
        span: 3164..3165,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'\", '",
        ),
        line: 128,
        column: 28,
        span: 3166..3171,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 128,
        column: 29,
        span: 3171..3172,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "5",
                    after_decimal: "",
                },
            ),
        ),
        line: 128,
        column: 31,
        span: 3172..3174,
    },
    Token {
        kind: Plus,
        lexeme: Symbol(
            "+",
        ),
        line: 128,
        column: 32,
        span: 3174..3175,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 128,
        column: 33,
        span: 3175..3176,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 128,
        column: 34,
        span: 3176..3177,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "i",
        ),
        line: 128,
        column: 35,
        span: 3177..3178,
    },
    Token {
        kind: Minus,
        lexeme: Symbol(
            "-",
        ),
        line: 128,
        column: 36,
        span: 3178..3179,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "10",
                    after_decimal: "",
                },
            ),
        ),
        line: 128,
        column: 38,
        span: 3178..3181,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 128,
        column: 39,
        span: 3181..3182,
    },
    Token {
        kind: Slash,
        lexeme: Symbol(
            "/",
        ),
        line: 128,
        column: 40,
        span: 3182..3183,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "2",
                    after_decimal: "",
                },
            ),
        ),
        line: 128,
        column: 41,
        span: 3182..3184,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 128,
        column: 42,
        span: 3184..3185,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 128,
        column: 43,
        span: 3185..3186,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "',\\n'",
        ),
        line: 128,
        column: 49,
        span: 3187..3192,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 128,
        column: 50,
        span: 3192..3193,
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        line: 129,
        column: 0,
        span: 3196..3199,
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        line: 130,
        column: 4,
        span: 3200..3203,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 130,
        column: 5,
        span: 3203..3204,
    },
    Token {
        kind: RightBrace,
        lexeme: Symbol(
            "}",
        ),
        line: 131,
        column: 2,
        span: 3205..3206,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "file",
        ),
        line: 133,
        column: 5,
        span: 3208..3212,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 133,
        column: 7,
        span: 3213..3214,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "os",
        ),
        line: 133,
        column: 10,
        span: 3215..3217,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 133,
        column: 11,
        span: 3217..3218,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "tmpname",
        ),
        line: 133,
        column: 18,
        span: 3218..3225,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 133,
        column: 19,
        span: 3225..3226,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 133,
        column: 20,
        span: 3226..3227,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 134,
        column: 3,
        span: 3228..3230,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 134,
        column: 4,
        span: 3230..3231,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "output",
        ),
        line: 134,
        column: 10,
        span: 3231..3237,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 134,
        column: 11,
        span: 3237..3238,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "file",
        ),
        line: 134,
        column: 15,
        span: 3238..3242,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 134,
        column: 16,
        span: 3242..3243,
    },
    Token {
        kind: For,
        lexeme: Symbol(
            "for",
        ),
        line: 135,
        column: 4,
        span: 3244..3247,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "s",
        ),
        line: 135,
        column: 6,
        span: 3248..3249,
    },
    Token {
        kind: In,
        lexeme: Symbol(
            "in",
        ),
        line: 135,
        column: 9,
        span: 3250..3252,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "string",
        ),
        line: 135,
        column: 16,
        span: 3253..3259,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 135,
        column: 17,
        span: 3259..3260,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "gmatch",
        ),
        line: 135,
        column: 23,
        span: 3260..3266,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 135,
        column: 24,
        span: 3266..3267,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "prog",
        ),
        line: 135,
        column: 28,
        span: 3267..3271,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 135,
        column: 29,
        span: 3271..3272,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"$([^$]+)\"",
        ),
        line: 135,
        column: 40,
        span: 3273..3283,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 135,
        column: 41,
        span: 3283..3284,
    },
    Token {
        kind: Do,
        lexeme: Symbol(
            "do",
        ),
        line: 135,
        column: 0,
        span: 3285..3287,
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        line: 136,
        column: 8,
        span: 3290..3295,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "n",
        ),
        line: 136,
        column: 10,
        span: 3296..3297,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 136,
        column: 12,
        span: 3298..3299,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "tonumber",
        ),
        line: 136,
        column: 21,
        span: 3300..3308,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 136,
        column: 22,
        span: 3308..3309,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "s",
        ),
        line: 136,
        column: 23,
        span: 3309..3310,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 136,
        column: 24,
        span: 3310..3311,
    },
    Token {
        kind: If,
        lexeme: Symbol(
            "if",
        ),
        line: 137,
        column: 5,
        span: 3314..3316,
    },
    Token {
        kind: Not,
        lexeme: Symbol(
            "not",
        ),
        line: 137,
        column: 9,
        span: 3317..3320,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "n",
        ),
        line: 137,
        column: 11,
        span: 3321..3322,
    },
    Token {
        kind: Then,
        lexeme: Symbol(
            "then",
        ),
        line: 137,
        column: 16,
        span: 3323..3327,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 137,
        column: 19,
        span: 3328..3330,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 137,
        column: 20,
        span: 3330..3331,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "write",
        ),
        line: 137,
        column: 25,
        span: 3331..3336,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 137,
        column: 26,
        span: 3336..3337,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "s",
        ),
        line: 137,
        column: 27,
        span: 3337..3338,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 137,
        column: 28,
        span: 3338..3339,
    },
    Token {
        kind: Else,
        lexeme: Symbol(
            "else",
        ),
        line: 137,
        column: 33,
        span: 3340..3344,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "F",
        ),
        line: 137,
        column: 35,
        span: 3345..3346,
    },
    Token {
        kind: LeftBracket,
        lexeme: Symbol(
            "[",
        ),
        line: 137,
        column: 36,
        span: 3346..3347,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "n",
        ),
        line: 137,
        column: 37,
        span: 3347..3348,
    },
    Token {
        kind: RightBracket,
        lexeme: Symbol(
            "]",
        ),
        line: 137,
        column: 38,
        span: 3348..3349,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 137,
        column: 39,
        span: 3349..3350,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 137,
        column: 40,
        span: 3350..3351,
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        line: 137,
        column: 0,
        span: 3352..3355,
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        line: 138,
        column: 0,
        span: 3356..3359,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 139,
        column: 3,
        span: 3360..3362,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 139,
        column: 4,
        span: 3362..3363,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "close",
        ),
        line: 139,
        column: 9,
        span: 3363..3368,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 139,
        column: 10,
        span: 3368..3369,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 139,
        column: 11,
        span: 3369..3370,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "result",
        ),
        line: 140,
        column: 7,
        span: 3371..3377,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 140,
        column: 9,
        span: 3378..3379,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "dofile",
        ),
        line: 140,
        column: 16,
        span: 3380..3386,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 140,
        column: 17,
        span: 3386..3387,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "file",
        ),
        line: 140,
        column: 21,
        span: 3387..3391,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 140,
        column: 22,
        span: 3391..3392,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 141,
        column: 7,
        span: 3393..3399,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 141,
        column: 8,
        span: 3399..3400,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "os",
        ),
        line: 141,
        column: 10,
        span: 3400..3402,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 141,
        column: 11,
        span: 3402..3403,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "remove",
        ),
        line: 141,
        column: 17,
        span: 3403..3409,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 141,
        column: 18,
        span: 3409..3410,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "file",
        ),
        line: 141,
        column: 22,
        span: 3410..3414,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 141,
        column: 23,
        span: 3414..3415,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 141,
        column: 24,
        span: 3415..3416,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "print",
        ),
        line: 142,
        column: 6,
        span: 3417..3422,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'OK'",
        ),
        line: 142,
        column: 10,
        span: 3422..3426,
    },
    Token {
        kind: Return,
        lexeme: Symbol(
            "return",
        ),
        line: 143,
        column: 7,
        span: 3427..3433,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "result",
        ),
        line: 143,
        column: 0,
        span: 3434..3440,
    },
]
