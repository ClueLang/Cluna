---
source: src/main.rs
expression: parsed
input_file: test-data/lua5.2-tests/math.lua
---
[
    Ident(
        [
            Symbol(
                "print",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"testing numbers and math lib\"",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Number(
                            Scientific {
                                mantissa: Decimal {
                                    before_decimal: "0",
                                    after_decimal: "",
                                },
                                exponent: "12",
                            },
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "0",
                                    after_decimal: "",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "and",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "0",
                                    after_decimal: ".0",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "0",
                                    after_decimal: "",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "and",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "0",
                                    after_decimal: ".0",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "0",
                                    after_decimal: "",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "and",
                                true,
                            ),
                        ),
                        Number(
                            Scientific {
                                mantissa: Decimal {
                                    before_decimal: "0",
                                    after_decimal: ".2",
                                },
                                exponent: "2",
                            },
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "20",
                                    after_decimal: "",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "and",
                                true,
                            ),
                        ),
                        Number(
                            Scientific {
                                mantissa: Decimal {
                                    before_decimal: "2",
                                    after_decimal: ".0",
                                },
                                exponent: "-1",
                            },
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "0",
                                    after_decimal: ".2",
                                },
                            ),
                        ),
                    ],
                ],
            ),
        ],
    ),
    DoBlock(
        CodeBlock {
            start: 27,
            code: [
                Variable {
                    names: [
                        (
                            "a",
                            false,
                        ),
                        (
                            "b",
                            false,
                        ),
                        (
                            "c",
                            false,
                        ),
                    ],
                    values: [
                        [
                            Symbol(
                                "\"2\"",
                            ),
                        ],
                        [
                            Symbol(
                                "\" 3e0 \"",
                            ),
                        ],
                        [
                            Symbol(
                                "\" 10  \"",
                            ),
                        ],
                    ],
                },
                Ident(
                    [
                        Symbol(
                            "assert",
                        ),
                        Call(
                            [
                                [
                                    Ident(
                                        [
                                            Symbol(
                                                "a",
                                            ),
                                        ],
                                    ),
                                    Operator(
                                        (
                                            "+",
                                            true,
                                        ),
                                    ),
                                    Ident(
                                        [
                                            Symbol(
                                                "b",
                                            ),
                                        ],
                                    ),
                                    Operator(
                                        (
                                            "==",
                                            true,
                                        ),
                                    ),
                                    Number(
                                        Decimal(
                                            Decimal {
                                                before_decimal: "5",
                                                after_decimal: "",
                                            },
                                        ),
                                    ),
                                    Operator(
                                        (
                                            "and",
                                            true,
                                        ),
                                    ),
                                    Operator(
                                        (
                                            "-",
                                            false,
                                        ),
                                    ),
                                    Ident(
                                        [
                                            Symbol(
                                                "b",
                                            ),
                                        ],
                                    ),
                                    Operator(
                                        (
                                            "==",
                                            true,
                                        ),
                                    ),
                                    Operator(
                                        (
                                            "-",
                                            false,
                                        ),
                                    ),
                                    Number(
                                        Decimal(
                                            Decimal {
                                                before_decimal: "3",
                                                after_decimal: "",
                                            },
                                        ),
                                    ),
                                    Operator(
                                        (
                                            "and",
                                            true,
                                        ),
                                    ),
                                    Ident(
                                        [
                                            Symbol(
                                                "b",
                                            ),
                                        ],
                                    ),
                                    Operator(
                                        (
                                            "+",
                                            true,
                                        ),
                                    ),
                                    Symbol(
                                        "\"2\"",
                                    ),
                                    Operator(
                                        (
                                            "==",
                                            true,
                                        ),
                                    ),
                                    Number(
                                        Decimal(
                                            Decimal {
                                                before_decimal: "5",
                                                after_decimal: "",
                                            },
                                        ),
                                    ),
                                    Operator(
                                        (
                                            "and",
                                            true,
                                        ),
                                    ),
                                    Symbol(
                                        "\"10\"",
                                    ),
                                    Operator(
                                        (
                                            "-",
                                            true,
                                        ),
                                    ),
                                    Ident(
                                        [
                                            Symbol(
                                                "c",
                                            ),
                                        ],
                                    ),
                                    Operator(
                                        (
                                            "==",
                                            true,
                                        ),
                                    ),
                                    Number(
                                        Decimal(
                                            Decimal {
                                                before_decimal: "0",
                                                after_decimal: "",
                                            },
                                        ),
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
                Ident(
                    [
                        Symbol(
                            "assert",
                        ),
                        Call(
                            [
                                [
                                    Ident(
                                        [
                                            Symbol(
                                                "type",
                                            ),
                                            Call(
                                                [
                                                    [
                                                        Ident(
                                                            [
                                                                Symbol(
                                                                    "a",
                                                                ),
                                                            ],
                                                        ),
                                                    ],
                                                ],
                                            ),
                                        ],
                                    ),
                                    Operator(
                                        (
                                            "==",
                                            true,
                                        ),
                                    ),
                                    Symbol(
                                        "'string'",
                                    ),
                                    Operator(
                                        (
                                            "and",
                                            true,
                                        ),
                                    ),
                                    Ident(
                                        [
                                            Symbol(
                                                "type",
                                            ),
                                            Call(
                                                [
                                                    [
                                                        Ident(
                                                            [
                                                                Symbol(
                                                                    "b",
                                                                ),
                                                            ],
                                                        ),
                                                    ],
                                                ],
                                            ),
                                        ],
                                    ),
                                    Operator(
                                        (
                                            "==",
                                            true,
                                        ),
                                    ),
                                    Symbol(
                                        "'string'",
                                    ),
                                    Operator(
                                        (
                                            "and",
                                            true,
                                        ),
                                    ),
                                    Ident(
                                        [
                                            Symbol(
                                                "type",
                                            ),
                                            Call(
                                                [
                                                    [
                                                        Ident(
                                                            [
                                                                Symbol(
                                                                    "c",
                                                                ),
                                                            ],
                                                        ),
                                                    ],
                                                ],
                                            ),
                                        ],
                                    ),
                                    Operator(
                                        (
                                            "==",
                                            true,
                                        ),
                                    ),
                                    Symbol(
                                        "'string'",
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
                Ident(
                    [
                        Symbol(
                            "assert",
                        ),
                        Call(
                            [
                                [
                                    Ident(
                                        [
                                            Symbol(
                                                "a",
                                            ),
                                        ],
                                    ),
                                    Operator(
                                        (
                                            "==",
                                            true,
                                        ),
                                    ),
                                    Symbol(
                                        "\"2\"",
                                    ),
                                    Operator(
                                        (
                                            "and",
                                            true,
                                        ),
                                    ),
                                    Ident(
                                        [
                                            Symbol(
                                                "b",
                                            ),
                                        ],
                                    ),
                                    Operator(
                                        (
                                            "==",
                                            true,
                                        ),
                                    ),
                                    Symbol(
                                        "\" 3e0 \"",
                                    ),
                                    Operator(
                                        (
                                            "and",
                                            true,
                                        ),
                                    ),
                                    Ident(
                                        [
                                            Symbol(
                                                "c",
                                            ),
                                        ],
                                    ),
                                    Operator(
                                        (
                                            "==",
                                            true,
                                        ),
                                    ),
                                    Symbol(
                                        "\" 10  \"",
                                    ),
                                    Operator(
                                        (
                                            "and",
                                            true,
                                        ),
                                    ),
                                    Operator(
                                        (
                                            "-",
                                            false,
                                        ),
                                    ),
                                    Ident(
                                        [
                                            Symbol(
                                                "c",
                                            ),
                                        ],
                                    ),
                                    Operator(
                                        (
                                            "==",
                                            true,
                                        ),
                                    ),
                                    Operator(
                                        (
                                            "-",
                                            false,
                                        ),
                                    ),
                                    Symbol(
                                        "\"  10 \"",
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
                Ident(
                    [
                        Symbol(
                            "assert",
                        ),
                        Call(
                            [
                                [
                                    Ident(
                                        [
                                            Symbol(
                                                "c",
                                            ),
                                        ],
                                    ),
                                    Operator(
                                        (
                                            "%",
                                            true,
                                        ),
                                    ),
                                    Ident(
                                        [
                                            Symbol(
                                                "a",
                                            ),
                                        ],
                                    ),
                                    Operator(
                                        (
                                            "==",
                                            true,
                                        ),
                                    ),
                                    Number(
                                        Decimal(
                                            Decimal {
                                                before_decimal: "0",
                                                after_decimal: "",
                                            },
                                        ),
                                    ),
                                    Operator(
                                        (
                                            "and",
                                            true,
                                        ),
                                    ),
                                    Ident(
                                        [
                                            Symbol(
                                                "a",
                                            ),
                                        ],
                                    ),
                                    Operator(
                                        (
                                            "^",
                                            true,
                                        ),
                                    ),
                                    Ident(
                                        [
                                            Symbol(
                                                "b",
                                            ),
                                        ],
                                    ),
                                    Operator(
                                        (
                                            "==",
                                            true,
                                        ),
                                    ),
                                    Number(
                                        Decimal(
                                            Decimal {
                                                before_decimal: "08",
                                                after_decimal: "",
                                            },
                                        ),
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
                Alter {
                    names: [
                        Ident(
                            [
                                Symbol(
                                    "a",
                                ),
                            ],
                        ),
                    ],
                    values: [
                        [
                            Number(
                                Decimal(
                                    Decimal {
                                        before_decimal: "0",
                                        after_decimal: "",
                                    },
                                ),
                            ),
                        ],
                    ],
                },
                Ident(
                    [
                        Symbol(
                            "assert",
                        ),
                        Call(
                            [
                                [
                                    Ident(
                                        [
                                            Symbol(
                                                "a",
                                            ),
                                        ],
                                    ),
                                    Operator(
                                        (
                                            "==",
                                            true,
                                        ),
                                    ),
                                    Operator(
                                        (
                                            "-",
                                            false,
                                        ),
                                    ),
                                    Ident(
                                        [
                                            Symbol(
                                                "a",
                                            ),
                                        ],
                                    ),
                                    Operator(
                                        (
                                            "and",
                                            true,
                                        ),
                                    ),
                                    Number(
                                        Decimal(
                                            Decimal {
                                                before_decimal: "0",
                                                after_decimal: "",
                                            },
                                        ),
                                    ),
                                    Operator(
                                        (
                                            "==",
                                            true,
                                        ),
                                    ),
                                    Operator(
                                        (
                                            "-",
                                            false,
                                        ),
                                    ),
                                    Number(
                                        Decimal(
                                            Decimal {
                                                before_decimal: "0",
                                                after_decimal: "",
                                            },
                                        ),
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
            ],
            end: 138,
        },
    ),
    DoBlock(
        CodeBlock {
            start: 139,
            code: [
                Variable {
                    names: [
                        (
                            "x",
                            false,
                        ),
                    ],
                    values: [
                        [
                            Operator(
                                (
                                    "-",
                                    false,
                                ),
                            ),
                            Number(
                                Decimal(
                                    Decimal {
                                        before_decimal: "1",
                                        after_decimal: "",
                                    },
                                ),
                            ),
                        ],
                    ],
                },
                Variable {
                    names: [
                        (
                            "mz",
                            false,
                        ),
                    ],
                    values: [
                        [
                            Number(
                                Decimal(
                                    Decimal {
                                        before_decimal: "0",
                                        after_decimal: "",
                                    },
                                ),
                            ),
                            Operator(
                                (
                                    "/",
                                    true,
                                ),
                            ),
                            Ident(
                                [
                                    Symbol(
                                        "x",
                                    ),
                                ],
                            ),
                        ],
                    ],
                },
                Alter {
                    names: [
                        Ident(
                            [
                                Symbol(
                                    "t",
                                ),
                            ],
                        ),
                    ],
                    values: [
                        [
                            Table(
                                [
                                    (
                                        Some(
                                            [
                                                Number(
                                                    Decimal(
                                                        Decimal {
                                                            before_decimal: "0",
                                                            after_decimal: "",
                                                        },
                                                    ),
                                                ),
                                            ],
                                        ),
                                        [
                                            Number(
                                                Decimal(
                                                    Decimal {
                                                        before_decimal: "10",
                                                        after_decimal: "",
                                                    },
                                                ),
                                            ),
                                        ],
                                    ),
                                    (
                                        None,
                                        [
                                            Number(
                                                Decimal(
                                                    Decimal {
                                                        before_decimal: "20",
                                                        after_decimal: "",
                                                    },
                                                ),
                                            ),
                                        ],
                                    ),
                                    (
                                        None,
                                        [
                                            Number(
                                                Decimal(
                                                    Decimal {
                                                        before_decimal: "30",
                                                        after_decimal: "",
                                                    },
                                                ),
                                            ),
                                        ],
                                    ),
                                    (
                                        None,
                                        [
                                            Number(
                                                Decimal(
                                                    Decimal {
                                                        before_decimal: "40",
                                                        after_decimal: "",
                                                    },
                                                ),
                                            ),
                                        ],
                                    ),
                                    (
                                        None,
                                        [
                                            Number(
                                                Decimal(
                                                    Decimal {
                                                        before_decimal: "50",
                                                        after_decimal: "",
                                                    },
                                                ),
                                            ),
                                        ],
                                    ),
                                ],
                            ),
                        ],
                    ],
                },
                Ident(
                    [
                        Symbol(
                            "assert",
                        ),
                        Call(
                            [
                                [
                                    Ident(
                                        [
                                            Symbol(
                                                "t",
                                            ),
                                            Symbol(
                                                "[",
                                            ),
                                            Expr(
                                                [
                                                    Ident(
                                                        [
                                                            Symbol(
                                                                "mz",
                                                            ),
                                                        ],
                                                    ),
                                                ],
                                            ),
                                            Symbol(
                                                "]",
                                            ),
                                        ],
                                    ),
                                    Operator(
                                        (
                                            "==",
                                            true,
                                        ),
                                    ),
                                    Ident(
                                        [
                                            Symbol(
                                                "t",
                                            ),
                                            Symbol(
                                                "[",
                                            ),
                                            Expr(
                                                [
                                                    Number(
                                                        Decimal(
                                                            Decimal {
                                                                before_decimal: "0",
                                                                after_decimal: "",
                                                            },
                                                        ),
                                                    ),
                                                ],
                                            ),
                                            Symbol(
                                                "]",
                                            ),
                                        ],
                                    ),
                                    Operator(
                                        (
                                            "and",
                                            true,
                                        ),
                                    ),
                                    Ident(
                                        [
                                            Symbol(
                                                "t",
                                            ),
                                            Symbol(
                                                "[",
                                            ),
                                            Expr(
                                                [
                                                    Operator(
                                                        (
                                                            "-",
                                                            false,
                                                        ),
                                                    ),
                                                    Number(
                                                        Decimal(
                                                            Decimal {
                                                                before_decimal: "0",
                                                                after_decimal: "",
                                                            },
                                                        ),
                                                    ),
                                                ],
                                            ),
                                            Symbol(
                                                "]",
                                            ),
                                        ],
                                    ),
                                    Operator(
                                        (
                                            "==",
                                            true,
                                        ),
                                    ),
                                    Ident(
                                        [
                                            Symbol(
                                                "t",
                                            ),
                                            Symbol(
                                                "[",
                                            ),
                                            Expr(
                                                [
                                                    Number(
                                                        Decimal(
                                                            Decimal {
                                                                before_decimal: "0",
                                                                after_decimal: "",
                                                            },
                                                        ),
                                                    ),
                                                ],
                                            ),
                                            Symbol(
                                                "]",
                                            ),
                                        ],
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
            ],
            end: 191,
        },
    ),
    DoBlock(
        CodeBlock {
            start: 192,
            code: [
                Variable {
                    names: [
                        (
                            "a",
                            false,
                        ),
                        (
                            "b",
                            false,
                        ),
                    ],
                    values: [
                        [
                            Ident(
                                [
                                    Symbol(
                                        "math",
                                    ),
                                    Symbol(
                                        ".",
                                    ),
                                    Symbol(
                                        "modf",
                                    ),
                                    Call(
                                        [
                                            [
                                                Number(
                                                    Decimal(
                                                        Decimal {
                                                            before_decimal: "3",
                                                            after_decimal: ".5",
                                                        },
                                                    ),
                                                ),
                                            ],
                                        ],
                                    ),
                                ],
                            ),
                        ],
                    ],
                },
                Ident(
                    [
                        Symbol(
                            "assert",
                        ),
                        Call(
                            [
                                [
                                    Ident(
                                        [
                                            Symbol(
                                                "a",
                                            ),
                                        ],
                                    ),
                                    Operator(
                                        (
                                            "==",
                                            true,
                                        ),
                                    ),
                                    Number(
                                        Decimal(
                                            Decimal {
                                                before_decimal: "3",
                                                after_decimal: "",
                                            },
                                        ),
                                    ),
                                    Operator(
                                        (
                                            "and",
                                            true,
                                        ),
                                    ),
                                    Ident(
                                        [
                                            Symbol(
                                                "b",
                                            ),
                                        ],
                                    ),
                                    Operator(
                                        (
                                            "==",
                                            true,
                                        ),
                                    ),
                                    Number(
                                        Decimal(
                                            Decimal {
                                                before_decimal: "0",
                                                after_decimal: ".5",
                                            },
                                        ),
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
                Ident(
                    [
                        Symbol(
                            "assert",
                        ),
                        Call(
                            [
                                [
                                    Ident(
                                        [
                                            Symbol(
                                                "math",
                                            ),
                                            Symbol(
                                                ".",
                                            ),
                                            Symbol(
                                                "huge",
                                            ),
                                        ],
                                    ),
                                    Operator(
                                        (
                                            ">",
                                            true,
                                        ),
                                    ),
                                    Number(
                                        Scientific {
                                            mantissa: Decimal {
                                                before_decimal: "10",
                                                after_decimal: "",
                                            },
                                            exponent: "30",
                                        },
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
                Ident(
                    [
                        Symbol(
                            "assert",
                        ),
                        Call(
                            [
                                [
                                    Operator(
                                        (
                                            "-",
                                            false,
                                        ),
                                    ),
                                    Ident(
                                        [
                                            Symbol(
                                                "math",
                                            ),
                                            Symbol(
                                                ".",
                                            ),
                                            Symbol(
                                                "huge",
                                            ),
                                        ],
                                    ),
                                    Operator(
                                        (
                                            "<",
                                            true,
                                        ),
                                    ),
                                    Operator(
                                        (
                                            "-",
                                            false,
                                        ),
                                    ),
                                    Number(
                                        Scientific {
                                            mantissa: Decimal {
                                                before_decimal: "10",
                                                after_decimal: "",
                                            },
                                            exponent: "30",
                                        },
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
            ],
            end: 232,
        },
    ),
    Function {
        local: false,
        name: [
            Symbol(
                "f",
            ),
        ],
        args: [
            "...",
        ],
        body: CodeBlock {
            start: 237,
            code: [
                IfStatement {
                    condition: [
                        Ident(
                            [
                                Symbol(
                                    "select",
                                ),
                                Call(
                                    [
                                        [
                                            Symbol(
                                                "'#'",
                                            ),
                                        ],
                                        [
                                            Symbol(
                                                "...",
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "1",
                                    after_decimal: "",
                                },
                            ),
                        ),
                    ],
                    body: CodeBlock {
                        start: 10,
                        code: [
                            Return(
                                Some(
                                    [
                                        [
                                            Expr(
                                                [
                                                    Symbol(
                                                        "...",
                                                    ),
                                                ],
                                            ),
                                            Ident(
                                                [],
                                            ),
                                        ],
                                    ],
                                ),
                            ),
                        ],
                        end: 15,
                    },
                    next: Some(
                        IfStatement {
                            condition: [],
                            body: CodeBlock {
                                start: 15,
                                code: [
                                    Return(
                                        Some(
                                            [
                                                [
                                                    Symbol(
                                                        "\"***\"",
                                                    ),
                                                ],
                                            ],
                                        ),
                                    ),
                                ],
                                end: 18,
                            },
                            next: None,
                        },
                    ),
                },
            ],
            end: 256,
        },
    },
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"2\"",
                        ),
                        Operator(
                            (
                                "+",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "1",
                                    after_decimal: "",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "3",
                                    after_decimal: "",
                                },
                            ),
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"2 \"",
                        ),
                        Operator(
                            (
                                "+",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "1",
                                    after_decimal: "",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "3",
                                    after_decimal: "",
                                },
                            ),
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\" -2 \"",
                        ),
                        Operator(
                            (
                                "+",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "1",
                                    after_decimal: "",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Operator(
                            (
                                "-",
                                false,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "1",
                                    after_decimal: "",
                                },
                            ),
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\" -0xa \"",
                        ),
                        Operator(
                            (
                                "+",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "1",
                                    after_decimal: "",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Operator(
                            (
                                "-",
                                false,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "9",
                                    after_decimal: "",
                                },
                            ),
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "tonumber",
                                ),
                                Call(
                                    [
                                        [
                                            Table(
                                                [],
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Symbol(
                            "nil",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "tonumber",
                                ),
                                Call(
                                    [
                                        [
                                            Symbol(
                                                "'+0.01'",
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "1",
                                    after_decimal: "",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "/",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "100",
                                    after_decimal: "",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "and",
                                true,
                            ),
                        ),
                        Ident(
                            [
                                Symbol(
                                    "tonumber",
                                ),
                                Call(
                                    [
                                        [
                                            Symbol(
                                                "'+.01'",
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "0",
                                    after_decimal: ".01",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "and",
                                true,
                            ),
                        ),
                        Ident(
                            [
                                Symbol(
                                    "tonumber",
                                ),
                                Call(
                                    [
                                        [
                                            Symbol(
                                                "'.01'",
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "0",
                                    after_decimal: ".01",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "and",
                                true,
                            ),
                        ),
                        Ident(
                            [
                                Symbol(
                                    "tonumber",
                                ),
                                Call(
                                    [
                                        [
                                            Symbol(
                                                "'-1.'",
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Operator(
                            (
                                "-",
                                false,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "1",
                                    after_decimal: "",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "and",
                                true,
                            ),
                        ),
                        Ident(
                            [
                                Symbol(
                                    "tonumber",
                                ),
                                Call(
                                    [
                                        [
                                            Symbol(
                                                "'+1.'",
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "1",
                                    after_decimal: "",
                                },
                            ),
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "tonumber",
                                ),
                                Call(
                                    [
                                        [
                                            Symbol(
                                                "'+ 0.01'",
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Symbol(
                            "nil",
                        ),
                        Operator(
                            (
                                "and",
                                true,
                            ),
                        ),
                        Ident(
                            [
                                Symbol(
                                    "tonumber",
                                ),
                                Call(
                                    [
                                        [
                                            Symbol(
                                                "'+.e1'",
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Symbol(
                            "nil",
                        ),
                        Operator(
                            (
                                "and",
                                true,
                            ),
                        ),
                        Ident(
                            [
                                Symbol(
                                    "tonumber",
                                ),
                                Call(
                                    [
                                        [
                                            Symbol(
                                                "'1e'",
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Symbol(
                            "nil",
                        ),
                        Operator(
                            (
                                "and",
                                true,
                            ),
                        ),
                        Ident(
                            [
                                Symbol(
                                    "tonumber",
                                ),
                                Call(
                                    [
                                        [
                                            Symbol(
                                                "'1.0e+'",
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Symbol(
                            "nil",
                        ),
                        Operator(
                            (
                                "and",
                                true,
                            ),
                        ),
                        Ident(
                            [
                                Symbol(
                                    "tonumber",
                                ),
                                Call(
                                    [
                                        [
                                            Symbol(
                                                "'.'",
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Symbol(
                            "nil",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "tonumber",
                                ),
                                Call(
                                    [
                                        [
                                            Symbol(
                                                "'-012'",
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Operator(
                            (
                                "-",
                                false,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "010",
                                    after_decimal: "",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "-",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "2",
                                    after_decimal: "",
                                },
                            ),
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "tonumber",
                                ),
                                Call(
                                    [
                                        [
                                            Symbol(
                                                "'-1.2e2'",
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Operator(
                            (
                                "-",
                                false,
                            ),
                        ),
                        Operator(
                            (
                                "-",
                                true,
                            ),
                        ),
                        Operator(
                            (
                                "-",
                                false,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "120",
                                    after_decimal: "",
                                },
                            ),
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "tonumber",
                                ),
                                Call(
                                    [
                                        [
                                            Symbol(
                                                "\"0xffffffffffff\"",
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "2",
                                    after_decimal: "",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "^",
                                true,
                            ),
                        ),
                        Expr(
                            [
                                Number(
                                    Decimal(
                                        Decimal {
                                            before_decimal: "4",
                                            after_decimal: "",
                                        },
                                    ),
                                ),
                                Operator(
                                    (
                                        "*",
                                        true,
                                    ),
                                ),
                                Number(
                                    Decimal(
                                        Decimal {
                                            before_decimal: "12",
                                            after_decimal: "",
                                        },
                                    ),
                                ),
                            ],
                        ),
                        Ident(
                            [],
                        ),
                        Operator(
                            (
                                "-",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "1",
                                    after_decimal: "",
                                },
                            ),
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "tonumber",
                                ),
                                Call(
                                    [
                                        [
                                            Symbol(
                                                "\"0x\"",
                                            ),
                                            Operator(
                                                (
                                                    "..",
                                                    true,
                                                ),
                                            ),
                                            Ident(
                                                [
                                                    Symbol(
                                                        "string",
                                                    ),
                                                    Symbol(
                                                        ".",
                                                    ),
                                                    Symbol(
                                                        "rep",
                                                    ),
                                                    Call(
                                                        [
                                                            [
                                                                Symbol(
                                                                    "\"f\"",
                                                                ),
                                                            ],
                                                            [
                                                                Number(
                                                                    Decimal(
                                                                        Decimal {
                                                                            before_decimal: "150",
                                                                            after_decimal: "",
                                                                        },
                                                                    ),
                                                                ),
                                                            ],
                                                        ],
                                                    ),
                                                ],
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "2",
                                    after_decimal: "",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "^",
                                true,
                            ),
                        ),
                        Expr(
                            [
                                Number(
                                    Decimal(
                                        Decimal {
                                            before_decimal: "4",
                                            after_decimal: "",
                                        },
                                    ),
                                ),
                                Operator(
                                    (
                                        "*",
                                        true,
                                    ),
                                ),
                                Number(
                                    Decimal(
                                        Decimal {
                                            before_decimal: "150",
                                            after_decimal: "",
                                        },
                                    ),
                                ),
                            ],
                        ),
                        Ident(
                            [],
                        ),
                        Operator(
                            (
                                "-",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "1",
                                    after_decimal: "",
                                },
                            ),
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "tonumber",
                                ),
                                Call(
                                    [
                                        [
                                            Symbol(
                                                "'0x3.'",
                                            ),
                                            Operator(
                                                (
                                                    "..",
                                                    true,
                                                ),
                                            ),
                                            Ident(
                                                [
                                                    Symbol(
                                                        "string",
                                                    ),
                                                    Symbol(
                                                        ".",
                                                    ),
                                                    Symbol(
                                                        "rep",
                                                    ),
                                                    Call(
                                                        [
                                                            [
                                                                Symbol(
                                                                    "'0'",
                                                                ),
                                                            ],
                                                            [
                                                                Number(
                                                                    Decimal(
                                                                        Decimal {
                                                                            before_decimal: "100",
                                                                            after_decimal: "",
                                                                        },
                                                                    ),
                                                                ),
                                                            ],
                                                        ],
                                                    ),
                                                ],
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "3",
                                    after_decimal: "",
                                },
                            ),
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "tonumber",
                                ),
                                Call(
                                    [
                                        [
                                            Symbol(
                                                "'0x0.'",
                                            ),
                                            Operator(
                                                (
                                                    "..",
                                                    true,
                                                ),
                                            ),
                                            Ident(
                                                [
                                                    Symbol(
                                                        "string",
                                                    ),
                                                    Symbol(
                                                        ".",
                                                    ),
                                                    Symbol(
                                                        "rep",
                                                    ),
                                                    Call(
                                                        [
                                                            [
                                                                Symbol(
                                                                    "'0'",
                                                                ),
                                                            ],
                                                            [
                                                                Number(
                                                                    Decimal(
                                                                        Decimal {
                                                                            before_decimal: "150",
                                                                            after_decimal: "",
                                                                        },
                                                                    ),
                                                                ),
                                                            ],
                                                        ],
                                                    ),
                                                ],
                                            ),
                                            Operator(
                                                (
                                                    "..",
                                                    true,
                                                ),
                                            ),
                                            Symbol(
                                                "\"1\"",
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "2",
                                    after_decimal: "",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "^",
                                true,
                            ),
                        ),
                        Expr(
                            [
                                Operator(
                                    (
                                        "-",
                                        false,
                                    ),
                                ),
                                Number(
                                    Decimal(
                                        Decimal {
                                            before_decimal: "4",
                                            after_decimal: "",
                                        },
                                    ),
                                ),
                                Operator(
                                    (
                                        "*",
                                        true,
                                    ),
                                ),
                                Number(
                                    Decimal(
                                        Decimal {
                                            before_decimal: "151",
                                            after_decimal: "",
                                        },
                                    ),
                                ),
                            ],
                        ),
                        Ident(
                            [],
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "tonumber",
                                ),
                                Call(
                                    [
                                        [
                                            Symbol(
                                                "'  001010  '",
                                            ),
                                        ],
                                        [
                                            Number(
                                                Decimal(
                                                    Decimal {
                                                        before_decimal: "2",
                                                        after_decimal: "",
                                                    },
                                                ),
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "10",
                                    after_decimal: "",
                                },
                            ),
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "tonumber",
                                ),
                                Call(
                                    [
                                        [
                                            Symbol(
                                                "'  001010  '",
                                            ),
                                        ],
                                        [
                                            Number(
                                                Decimal(
                                                    Decimal {
                                                        before_decimal: "10",
                                                        after_decimal: "",
                                                    },
                                                ),
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "001010",
                                    after_decimal: "",
                                },
                            ),
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "tonumber",
                                ),
                                Call(
                                    [
                                        [
                                            Symbol(
                                                "'  -1010  '",
                                            ),
                                        ],
                                        [
                                            Number(
                                                Decimal(
                                                    Decimal {
                                                        before_decimal: "2",
                                                        after_decimal: "",
                                                    },
                                                ),
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Operator(
                            (
                                "-",
                                false,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "10",
                                    after_decimal: "",
                                },
                            ),
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "tonumber",
                                ),
                                Call(
                                    [
                                        [
                                            Symbol(
                                                "'10'",
                                            ),
                                        ],
                                        [
                                            Number(
                                                Decimal(
                                                    Decimal {
                                                        before_decimal: "36",
                                                        after_decimal: "",
                                                    },
                                                ),
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "36",
                                    after_decimal: "",
                                },
                            ),
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "tonumber",
                                ),
                                Call(
                                    [
                                        [
                                            Symbol(
                                                "'  -10  '",
                                            ),
                                        ],
                                        [
                                            Number(
                                                Decimal(
                                                    Decimal {
                                                        before_decimal: "36",
                                                        after_decimal: "",
                                                    },
                                                ),
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Operator(
                            (
                                "-",
                                false,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "36",
                                    after_decimal: "",
                                },
                            ),
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "tonumber",
                                ),
                                Call(
                                    [
                                        [
                                            Symbol(
                                                "'  +1Z  '",
                                            ),
                                        ],
                                        [
                                            Number(
                                                Decimal(
                                                    Decimal {
                                                        before_decimal: "36",
                                                        after_decimal: "",
                                                    },
                                                ),
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "36",
                                    after_decimal: "",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "+",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "35",
                                    after_decimal: "",
                                },
                            ),
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "tonumber",
                                ),
                                Call(
                                    [
                                        [
                                            Symbol(
                                                "'  -1z  '",
                                            ),
                                        ],
                                        [
                                            Number(
                                                Decimal(
                                                    Decimal {
                                                        before_decimal: "36",
                                                        after_decimal: "",
                                                    },
                                                ),
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Operator(
                            (
                                "-",
                                false,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "36",
                                    after_decimal: "",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "+",
                                true,
                            ),
                        ),
                        Operator(
                            (
                                "-",
                                false,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "35",
                                    after_decimal: "",
                                },
                            ),
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "tonumber",
                                ),
                                Call(
                                    [
                                        [
                                            Symbol(
                                                "'-fFfa'",
                                            ),
                                        ],
                                        [
                                            Number(
                                                Decimal(
                                                    Decimal {
                                                        before_decimal: "16",
                                                        after_decimal: "",
                                                    },
                                                ),
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Operator(
                            (
                                "-",
                                false,
                            ),
                        ),
                        Expr(
                            [
                                Number(
                                    Decimal(
                                        Decimal {
                                            before_decimal: "10",
                                            after_decimal: "",
                                        },
                                    ),
                                ),
                                Operator(
                                    (
                                        "+",
                                        true,
                                    ),
                                ),
                                Expr(
                                    [
                                        Number(
                                            Decimal(
                                                Decimal {
                                                    before_decimal: "16",
                                                    after_decimal: "",
                                                },
                                            ),
                                        ),
                                        Operator(
                                            (
                                                "*",
                                                true,
                                            ),
                                        ),
                                        Expr(
                                            [
                                                Number(
                                                    Decimal(
                                                        Decimal {
                                                            before_decimal: "15",
                                                            after_decimal: "",
                                                        },
                                                    ),
                                                ),
                                                Operator(
                                                    (
                                                        "+",
                                                        true,
                                                    ),
                                                ),
                                                Expr(
                                                    [
                                                        Number(
                                                            Decimal(
                                                                Decimal {
                                                                    before_decimal: "16",
                                                                    after_decimal: "",
                                                                },
                                                            ),
                                                        ),
                                                        Operator(
                                                            (
                                                                "*",
                                                                true,
                                                            ),
                                                        ),
                                                        Expr(
                                                            [
                                                                Number(
                                                                    Decimal(
                                                                        Decimal {
                                                                            before_decimal: "15",
                                                                            after_decimal: "",
                                                                        },
                                                                    ),
                                                                ),
                                                                Operator(
                                                                    (
                                                                        "+",
                                                                        true,
                                                                    ),
                                                                ),
                                                                Expr(
                                                                    [
                                                                        Number(
                                                                            Decimal(
                                                                                Decimal {
                                                                                    before_decimal: "16",
                                                                                    after_decimal: "",
                                                                                },
                                                                            ),
                                                                        ),
                                                                        Operator(
                                                                            (
                                                                                "*",
                                                                                true,
                                                                            ),
                                                                        ),
                                                                        Number(
                                                                            Decimal(
                                                                                Decimal {
                                                                                    before_decimal: "15",
                                                                                    after_decimal: "",
                                                                                },
                                                                            ),
                                                                        ),
                                                                    ],
                                                                ),
                                                                Ident(
                                                                    [],
                                                                ),
                                                            ],
                                                        ),
                                                        Ident(
                                                            [],
                                                        ),
                                                    ],
                                                ),
                                                Ident(
                                                    [],
                                                ),
                                            ],
                                        ),
                                        Ident(
                                            [],
                                        ),
                                    ],
                                ),
                                Ident(
                                    [],
                                ),
                            ],
                        ),
                        Ident(
                            [],
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "tonumber",
                                ),
                                Call(
                                    [
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "string",
                                                    ),
                                                    Symbol(
                                                        ".",
                                                    ),
                                                    Symbol(
                                                        "rep",
                                                    ),
                                                    Call(
                                                        [
                                                            [
                                                                Symbol(
                                                                    "'1'",
                                                                ),
                                                            ],
                                                            [
                                                                Number(
                                                                    Decimal(
                                                                        Decimal {
                                                                            before_decimal: "42",
                                                                            after_decimal: "",
                                                                        },
                                                                    ),
                                                                ),
                                                            ],
                                                        ],
                                                    ),
                                                ],
                                            ),
                                        ],
                                        [
                                            Number(
                                                Decimal(
                                                    Decimal {
                                                        before_decimal: "2",
                                                        after_decimal: "",
                                                    },
                                                ),
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "+",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "1",
                                    after_decimal: "",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "2",
                                    after_decimal: "",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "^",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "42",
                                    after_decimal: "",
                                },
                            ),
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "tonumber",
                                ),
                                Call(
                                    [
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "string",
                                                    ),
                                                    Symbol(
                                                        ".",
                                                    ),
                                                    Symbol(
                                                        "rep",
                                                    ),
                                                    Call(
                                                        [
                                                            [
                                                                Symbol(
                                                                    "'1'",
                                                                ),
                                                            ],
                                                            [
                                                                Number(
                                                                    Decimal(
                                                                        Decimal {
                                                                            before_decimal: "34",
                                                                            after_decimal: "",
                                                                        },
                                                                    ),
                                                                ),
                                                            ],
                                                        ],
                                                    ),
                                                ],
                                            ),
                                        ],
                                        [
                                            Number(
                                                Decimal(
                                                    Decimal {
                                                        before_decimal: "2",
                                                        after_decimal: "",
                                                    },
                                                ),
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "+",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "1",
                                    after_decimal: "",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "2",
                                    after_decimal: "",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "^",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "34",
                                    after_decimal: "",
                                },
                            ),
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "tonumber",
                                ),
                                Call(
                                    [
                                        [
                                            Symbol(
                                                "'ffffFFFF'",
                                            ),
                                        ],
                                        [
                                            Number(
                                                Decimal(
                                                    Decimal {
                                                        before_decimal: "16",
                                                        after_decimal: "",
                                                    },
                                                ),
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "+",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "1",
                                    after_decimal: "",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "2",
                                    after_decimal: "",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "^",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "32",
                                    after_decimal: "",
                                },
                            ),
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "tonumber",
                                ),
                                Call(
                                    [
                                        [
                                            Symbol(
                                                "'0ffffFFFF'",
                                            ),
                                        ],
                                        [
                                            Number(
                                                Decimal(
                                                    Decimal {
                                                        before_decimal: "16",
                                                        after_decimal: "",
                                                    },
                                                ),
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "+",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "1",
                                    after_decimal: "",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "2",
                                    after_decimal: "",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "^",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "32",
                                    after_decimal: "",
                                },
                            ),
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "tonumber",
                                ),
                                Call(
                                    [
                                        [
                                            Symbol(
                                                "'-0ffffffFFFF'",
                                            ),
                                        ],
                                        [
                                            Number(
                                                Decimal(
                                                    Decimal {
                                                        before_decimal: "16",
                                                        after_decimal: "",
                                                    },
                                                ),
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "-",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "1",
                                    after_decimal: "",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Operator(
                            (
                                "-",
                                false,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "2",
                                    after_decimal: "",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "^",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "40",
                                    after_decimal: "",
                                },
                            ),
                        ),
                    ],
                ],
            ),
        ],
    ),
    ForLoop {
        iter: "i",
        start: [
            Number(
                Decimal(
                    Decimal {
                        before_decimal: "2",
                        after_decimal: "",
                    },
                ),
            ),
        ],
        end: [
            Number(
                Decimal(
                    Decimal {
                        before_decimal: "36",
                        after_decimal: "",
                    },
                ),
            ),
        ],
        step: None,
        code: CodeBlock {
            start: 685,
            code: [
                Ident(
                    [
                        Symbol(
                            "assert",
                        ),
                        Call(
                            [
                                [
                                    Ident(
                                        [
                                            Symbol(
                                                "tonumber",
                                            ),
                                            Call(
                                                [
                                                    [
                                                        Symbol(
                                                            "'\\t10000000000\\t'",
                                                        ),
                                                    ],
                                                    [
                                                        Ident(
                                                            [
                                                                Symbol(
                                                                    "i",
                                                                ),
                                                            ],
                                                        ),
                                                    ],
                                                ],
                                            ),
                                        ],
                                    ),
                                    Operator(
                                        (
                                            "==",
                                            true,
                                        ),
                                    ),
                                    Ident(
                                        [
                                            Symbol(
                                                "i",
                                            ),
                                        ],
                                    ),
                                    Operator(
                                        (
                                            "^",
                                            true,
                                        ),
                                    ),
                                    Number(
                                        Decimal(
                                            Decimal {
                                                before_decimal: "10",
                                                after_decimal: "",
                                            },
                                        ),
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
            ],
            end: 699,
        },
    },
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "f",
                                ),
                                Call(
                                    [
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "tonumber",
                                                    ),
                                                    Call(
                                                        [
                                                            [
                                                                Symbol(
                                                                    "'fFfa'",
                                                                ),
                                                            ],
                                                            [
                                                                Number(
                                                                    Decimal(
                                                                        Decimal {
                                                                            before_decimal: "15",
                                                                            after_decimal: "",
                                                                        },
                                                                    ),
                                                                ),
                                                            ],
                                                        ],
                                                    ),
                                                ],
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Symbol(
                            "nil",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "f",
                                ),
                                Call(
                                    [
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "tonumber",
                                                    ),
                                                    Call(
                                                        [
                                                            [
                                                                Symbol(
                                                                    "'099'",
                                                                ),
                                                            ],
                                                            [
                                                                Number(
                                                                    Decimal(
                                                                        Decimal {
                                                                            before_decimal: "8",
                                                                            after_decimal: "",
                                                                        },
                                                                    ),
                                                                ),
                                                            ],
                                                        ],
                                                    ),
                                                ],
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Symbol(
                            "nil",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "f",
                                ),
                                Call(
                                    [
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "tonumber",
                                                    ),
                                                    Call(
                                                        [
                                                            [
                                                                Symbol(
                                                                    "'1\\0'",
                                                                ),
                                                            ],
                                                            [
                                                                Number(
                                                                    Decimal(
                                                                        Decimal {
                                                                            before_decimal: "2",
                                                                            after_decimal: "",
                                                                        },
                                                                    ),
                                                                ),
                                                            ],
                                                        ],
                                                    ),
                                                ],
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Symbol(
                            "nil",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "f",
                                ),
                                Call(
                                    [
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "tonumber",
                                                    ),
                                                    Call(
                                                        [
                                                            [
                                                                Symbol(
                                                                    "''",
                                                                ),
                                                            ],
                                                            [
                                                                Number(
                                                                    Decimal(
                                                                        Decimal {
                                                                            before_decimal: "8",
                                                                            after_decimal: "",
                                                                        },
                                                                    ),
                                                                ),
                                                            ],
                                                        ],
                                                    ),
                                                ],
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Symbol(
                            "nil",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "f",
                                ),
                                Call(
                                    [
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "tonumber",
                                                    ),
                                                    Call(
                                                        [
                                                            [
                                                                Symbol(
                                                                    "'  '",
                                                                ),
                                                            ],
                                                            [
                                                                Number(
                                                                    Decimal(
                                                                        Decimal {
                                                                            before_decimal: "9",
                                                                            after_decimal: "",
                                                                        },
                                                                    ),
                                                                ),
                                                            ],
                                                        ],
                                                    ),
                                                ],
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Symbol(
                            "nil",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "f",
                                ),
                                Call(
                                    [
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "tonumber",
                                                    ),
                                                    Call(
                                                        [
                                                            [
                                                                Symbol(
                                                                    "'  '",
                                                                ),
                                                            ],
                                                            [
                                                                Number(
                                                                    Decimal(
                                                                        Decimal {
                                                                            before_decimal: "9",
                                                                            after_decimal: "",
                                                                        },
                                                                    ),
                                                                ),
                                                            ],
                                                        ],
                                                    ),
                                                ],
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Symbol(
                            "nil",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "f",
                                ),
                                Call(
                                    [
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "tonumber",
                                                    ),
                                                    Call(
                                                        [
                                                            [
                                                                Symbol(
                                                                    "'0xf'",
                                                                ),
                                                            ],
                                                            [
                                                                Number(
                                                                    Decimal(
                                                                        Decimal {
                                                                            before_decimal: "10",
                                                                            after_decimal: "",
                                                                        },
                                                                    ),
                                                                ),
                                                            ],
                                                        ],
                                                    ),
                                                ],
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Symbol(
                            "nil",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "f",
                                ),
                                Call(
                                    [
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "tonumber",
                                                    ),
                                                    Call(
                                                        [
                                                            [
                                                                Symbol(
                                                                    "'inf'",
                                                                ),
                                                            ],
                                                        ],
                                                    ),
                                                ],
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Symbol(
                            "nil",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "f",
                                ),
                                Call(
                                    [
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "tonumber",
                                                    ),
                                                    Call(
                                                        [
                                                            [
                                                                Symbol(
                                                                    "' INF '",
                                                                ),
                                                            ],
                                                        ],
                                                    ),
                                                ],
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Symbol(
                            "nil",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "f",
                                ),
                                Call(
                                    [
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "tonumber",
                                                    ),
                                                    Call(
                                                        [
                                                            [
                                                                Symbol(
                                                                    "'Nan'",
                                                                ),
                                                            ],
                                                        ],
                                                    ),
                                                ],
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Symbol(
                            "nil",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "f",
                                ),
                                Call(
                                    [
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "tonumber",
                                                    ),
                                                    Call(
                                                        [
                                                            [
                                                                Symbol(
                                                                    "'nan'",
                                                                ),
                                                            ],
                                                        ],
                                                    ),
                                                ],
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Symbol(
                            "nil",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "f",
                                ),
                                Call(
                                    [
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "tonumber",
                                                    ),
                                                    Call(
                                                        [
                                                            [
                                                                Symbol(
                                                                    "'  '",
                                                                ),
                                                            ],
                                                        ],
                                                    ),
                                                ],
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Symbol(
                            "nil",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "f",
                                ),
                                Call(
                                    [
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "tonumber",
                                                    ),
                                                    Call(
                                                        [
                                                            [
                                                                Symbol(
                                                                    "''",
                                                                ),
                                                            ],
                                                        ],
                                                    ),
                                                ],
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Symbol(
                            "nil",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "f",
                                ),
                                Call(
                                    [
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "tonumber",
                                                    ),
                                                    Call(
                                                        [
                                                            [
                                                                Symbol(
                                                                    "'1  a'",
                                                                ),
                                                            ],
                                                        ],
                                                    ),
                                                ],
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Symbol(
                            "nil",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "f",
                                ),
                                Call(
                                    [
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "tonumber",
                                                    ),
                                                    Call(
                                                        [
                                                            [
                                                                Symbol(
                                                                    "'1\\0'",
                                                                ),
                                                            ],
                                                        ],
                                                    ),
                                                ],
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Symbol(
                            "nil",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "f",
                                ),
                                Call(
                                    [
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "tonumber",
                                                    ),
                                                    Call(
                                                        [
                                                            [
                                                                Symbol(
                                                                    "'1 \\0'",
                                                                ),
                                                            ],
                                                        ],
                                                    ),
                                                ],
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Symbol(
                            "nil",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "f",
                                ),
                                Call(
                                    [
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "tonumber",
                                                    ),
                                                    Call(
                                                        [
                                                            [
                                                                Symbol(
                                                                    "'1\\0 '",
                                                                ),
                                                            ],
                                                        ],
                                                    ),
                                                ],
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Symbol(
                            "nil",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "f",
                                ),
                                Call(
                                    [
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "tonumber",
                                                    ),
                                                    Call(
                                                        [
                                                            [
                                                                Symbol(
                                                                    "'e1'",
                                                                ),
                                                            ],
                                                        ],
                                                    ),
                                                ],
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Symbol(
                            "nil",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "f",
                                ),
                                Call(
                                    [
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "tonumber",
                                                    ),
                                                    Call(
                                                        [
                                                            [
                                                                Symbol(
                                                                    "'e  1'",
                                                                ),
                                                            ],
                                                        ],
                                                    ),
                                                ],
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Symbol(
                            "nil",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "f",
                                ),
                                Call(
                                    [
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "tonumber",
                                                    ),
                                                    Call(
                                                        [
                                                            [
                                                                Symbol(
                                                                    "' 3.4.5 '",
                                                                ),
                                                            ],
                                                        ],
                                                    ),
                                                ],
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Symbol(
                            "nil",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "tonumber",
                                ),
                                Call(
                                    [
                                        [
                                            Symbol(
                                                "'0x'",
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Symbol(
                            "nil",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "tonumber",
                                ),
                                Call(
                                    [
                                        [
                                            Symbol(
                                                "'x'",
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Symbol(
                            "nil",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "tonumber",
                                ),
                                Call(
                                    [
                                        [
                                            Symbol(
                                                "'x3'",
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Symbol(
                            "nil",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "tonumber",
                                ),
                                Call(
                                    [
                                        [
                                            Symbol(
                                                "'00x2'",
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Symbol(
                            "nil",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "tonumber",
                                ),
                                Call(
                                    [
                                        [
                                            Symbol(
                                                "'0x 2'",
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Symbol(
                            "nil",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "tonumber",
                                ),
                                Call(
                                    [
                                        [
                                            Symbol(
                                                "'0 x2'",
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Symbol(
                            "nil",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "tonumber",
                                ),
                                Call(
                                    [
                                        [
                                            Symbol(
                                                "'23x'",
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Symbol(
                            "nil",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "tonumber",
                                ),
                                Call(
                                    [
                                        [
                                            Symbol(
                                                "'- 0xaa'",
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Symbol(
                            "nil",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Number(
                            Hex(
                                "0x10",
                            ),
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "16",
                                    after_decimal: "",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "and",
                                true,
                            ),
                        ),
                        Number(
                            Hex(
                                "0xfff",
                            ),
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "2",
                                    after_decimal: "",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "^",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "12",
                                    after_decimal: "",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "-",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "1",
                                    after_decimal: "",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "and",
                                true,
                            ),
                        ),
                        Number(
                            Hex(
                                "0XFB",
                            ),
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "251",
                                    after_decimal: "",
                                },
                            ),
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Number(
                            HexScientific {
                                mantissa: HexDecimal {
                                    before_decimal: "00",
                                    after_decimal: "",
                                },
                                exponent: "12",
                            },
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "0",
                                    after_decimal: "",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "and",
                                true,
                            ),
                        ),
                        Number(
                            HexScientific {
                                mantissa: HexDecimal {
                                    before_decimal: "0",
                                    after_decimal: ".0",
                                },
                                exponent: "-3",
                            },
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "0",
                                    after_decimal: "",
                                },
                            ),
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Number(
                            Hex(
                                "0xFFFFFFFF",
                            ),
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "2",
                                    after_decimal: "",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "^",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "32",
                                    after_decimal: "",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "-",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "1",
                                    after_decimal: "",
                                },
                            ),
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "tonumber",
                                ),
                                Call(
                                    [
                                        [
                                            Symbol(
                                                "'+0x2'",
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "2",
                                    after_decimal: "",
                                },
                            ),
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "tonumber",
                                ),
                                Call(
                                    [
                                        [
                                            Symbol(
                                                "'-0xaA'",
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Operator(
                            (
                                "-",
                                false,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "170",
                                    after_decimal: "",
                                },
                            ),
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "tonumber",
                                ),
                                Call(
                                    [
                                        [
                                            Symbol(
                                                "'-0xffFFFfff'",
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Operator(
                            (
                                "-",
                                false,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "2",
                                    after_decimal: "",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "^",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "32",
                                    after_decimal: "",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "+",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "1",
                                    after_decimal: "",
                                },
                            ),
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Number(
                            Scientific {
                                mantissa: Decimal {
                                    before_decimal: "0",
                                    after_decimal: "",
                                },
                                exponent: "+1",
                            },
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "0",
                                    after_decimal: "",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "and",
                                true,
                            ),
                        ),
                        Number(
                            Hex(
                                "0xE",
                            ),
                        ),
                        Operator(
                            (
                                "+",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "1",
                                    after_decimal: "",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "15",
                                    after_decimal: "",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "and",
                                true,
                            ),
                        ),
                        Number(
                            Hex(
                                "0xe",
                            ),
                        ),
                        Operator(
                            (
                                "-",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "1",
                                    after_decimal: "",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "13",
                                    after_decimal: "",
                                },
                            ),
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "tonumber",
                                ),
                                Call(
                                    [
                                        [
                                            Symbol(
                                                "'  0x2.5  '",
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Number(
                            Hex(
                                "0x25",
                            ),
                        ),
                        Operator(
                            (
                                "/",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "16",
                                    after_decimal: "",
                                },
                            ),
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "tonumber",
                                ),
                                Call(
                                    [
                                        [
                                            Symbol(
                                                "'  -0x2.5  '",
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Operator(
                            (
                                "-",
                                false,
                            ),
                        ),
                        Number(
                            Hex(
                                "0x25",
                            ),
                        ),
                        Operator(
                            (
                                "/",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "16",
                                    after_decimal: "",
                                },
                            ),
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "tonumber",
                                ),
                                Call(
                                    [
                                        [
                                            Symbol(
                                                "'  +0x0.51p+8  '",
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Number(
                            Hex(
                                "0x51",
                            ),
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "tonumber",
                                ),
                                Call(
                                    [
                                        [
                                            Symbol(
                                                "'0x0.51p'",
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Symbol(
                            "nil",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "tonumber",
                                ),
                                Call(
                                    [
                                        [
                                            Symbol(
                                                "'0x5p+-2'",
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Symbol(
                            "nil",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Number(
                            HexDecimal(
                                HexDecimal {
                                    before_decimal: "",
                                    after_decimal: ".FfffFFFF",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "1",
                                    after_decimal: "",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "-",
                                true,
                            ),
                        ),
                        Symbol(
                            "'0x.00000001'",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Symbol(
                            "'0xA.a'",
                        ),
                        Operator(
                            (
                                "+",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "0",
                                    after_decimal: "",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "10",
                                    after_decimal: "",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "+",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "10",
                                    after_decimal: "",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "/",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "16",
                                    after_decimal: "",
                                },
                            ),
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Number(
                            HexScientific {
                                mantissa: HexDecimal {
                                    before_decimal: "0a",
                                    after_decimal: ".a",
                                },
                                exponent: "4",
                            },
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Number(
                            Hex(
                                "0XAA",
                            ),
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Number(
                            HexScientific {
                                mantissa: HexDecimal {
                                    before_decimal: "04",
                                    after_decimal: "",
                                },
                                exponent: "-2",
                            },
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "1",
                                    after_decimal: "",
                                },
                            ),
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Number(
                            HexDecimal(
                                HexDecimal {
                                    before_decimal: "1",
                                    after_decimal: ".1",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Symbol(
                            "'0x1.'",
                        ),
                        Operator(
                            (
                                "+",
                                true,
                            ),
                        ),
                        Symbol(
                            "'+0x.1'",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "1",
                                    after_decimal: ".1",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "1",
                                    after_decimal: ".0",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "+",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "0",
                                    after_decimal: ".1",
                                },
                            ),
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "100",
                                    after_decimal: ".0",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Number(
                            Scientific {
                                mantissa: Decimal {
                                    before_decimal: "1",
                                    after_decimal: "",
                                },
                                exponent: "2",
                            },
                        ),
                        Operator(
                            (
                                "and",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "0",
                                    after_decimal: ".01",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Number(
                            Scientific {
                                mantissa: Decimal {
                                    before_decimal: "1",
                                    after_decimal: "",
                                },
                                exponent: "-2",
                            },
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "1111111111111111",
                                    after_decimal: "",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "-",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "1111111111111110",
                                    after_decimal: "",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Number(
                            Scientific {
                                mantissa: Decimal {
                                    before_decimal: "1000",
                                    after_decimal: ".00",
                                },
                                exponent: "-03",
                            },
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "1",
                                    after_decimal: ".1",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Symbol(
                            "'1.'",
                        ),
                        Operator(
                            (
                                "+",
                                true,
                            ),
                        ),
                        Symbol(
                            "'.1'",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Symbol(
                            "'1111111111111111'",
                        ),
                        Operator(
                            (
                                "-",
                                true,
                            ),
                        ),
                        Symbol(
                            "'1111111111111110'",
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Ident(
                            [
                                Symbol(
                                    "tonumber",
                                ),
                                Call(
                                    [
                                        [
                                            Symbol(
                                                "\"  +0.001e+3 \\n\\t\"",
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                    ],
                ],
            ),
        ],
    ),
    Function {
        local: false,
        name: [
            Symbol(
                "eq",
            ),
        ],
        args: [
            "a",
            "b",
            "limit",
        ],
        body: CodeBlock {
            start: 1256,
            code: [
                IfStatement {
                    condition: [
                        Operator(
                            (
                                "not",
                                false,
                            ),
                        ),
                        Ident(
                            [
                                Symbol(
                                    "limit",
                                ),
                            ],
                        ),
                    ],
                    body: CodeBlock {
                        start: 4,
                        code: [
                            Alter {
                                names: [
                                    Ident(
                                        [
                                            Symbol(
                                                "limit",
                                            ),
                                        ],
                                    ),
                                ],
                                values: [
                                    [
                                        Number(
                                            Scientific {
                                                mantissa: Decimal {
                                                    before_decimal: "10",
                                                    after_decimal: "",
                                                },
                                                exponent: "-10",
                                            },
                                        ),
                                    ],
                                ],
                            },
                        ],
                        end: 8,
                    },
                    next: None,
                },
                Return(
                    Some(
                        [
                            [
                                Ident(
                                    [
                                        Symbol(
                                            "math",
                                        ),
                                        Symbol(
                                            ".",
                                        ),
                                        Symbol(
                                            "abs",
                                        ),
                                        Call(
                                            [
                                                [
                                                    Ident(
                                                        [
                                                            Symbol(
                                                                "a",
                                                            ),
                                                        ],
                                                    ),
                                                    Operator(
                                                        (
                                                            "-",
                                                            true,
                                                        ),
                                                    ),
                                                    Ident(
                                                        [
                                                            Symbol(
                                                                "b",
                                                            ),
                                                        ],
                                                    ),
                                                ],
                                            ],
                                        ),
                                    ],
                                ),
                                Operator(
                                    (
                                        "<=",
                                        true,
                                    ),
                                ),
                                Ident(
                                    [
                                        Symbol(
                                            "limit",
                                        ),
                                    ],
                                ),
                            ],
                        ],
                    ),
                ),
            ],
            end: 1276,
        },
    },
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Number(
                            Scientific {
                                mantissa: Decimal {
                                    before_decimal: "0",
                                    after_decimal: ".1",
                                },
                                exponent: "-30",
                            },
                        ),
                        Operator(
                            (
                                ">",
                                true,
                            ),
                        ),
                        Number(
                            Scientific {
                                mantissa: Decimal {
                                    before_decimal: "0",
                                    after_decimal: ".9",
                                },
                                exponent: "-31",
                            },
                        ),
                        Operator(
                            (
                                "and",
                                true,
                            ),
                        ),
                        Number(
                            Scientific {
                                mantissa: Decimal {
                                    before_decimal: "0",
                                    after_decimal: ".9",
                                },
                                exponent: "30",
                            },
                        ),
                        Operator(
                            (
                                "<",
                                true,
                            ),
                        ),
                        Number(
                            Scientific {
                                mantissa: Decimal {
                                    before_decimal: "0",
                                    after_decimal: ".1",
                                },
                                exponent: "31",
                            },
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "0",
                                    after_decimal: ".123456",
                                },
                            ),
                        ),
                        Operator(
                            (
                                ">",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "0",
                                    after_decimal: ".123455",
                                },
                            ),
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "tonumber",
                                ),
                                Call(
                                    [
                                        [
                                            Symbol(
                                                "'+1.23E18'",
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "1",
                                    after_decimal: ".23",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "*",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "10",
                                    after_decimal: "",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "^",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "18",
                                    after_decimal: "",
                                },
                            ),
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Operator(
                            (
                                "not",
                                false,
                            ),
                        ),
                        Expr(
                            [
                                Number(
                                    Decimal(
                                        Decimal {
                                            before_decimal: "1",
                                            after_decimal: "",
                                        },
                                    ),
                                ),
                                Operator(
                                    (
                                        "<",
                                        true,
                                    ),
                                ),
                                Number(
                                    Decimal(
                                        Decimal {
                                            before_decimal: "1",
                                            after_decimal: "",
                                        },
                                    ),
                                ),
                            ],
                        ),
                        Ident(
                            [],
                        ),
                        Operator(
                            (
                                "and",
                                true,
                            ),
                        ),
                        Expr(
                            [
                                Number(
                                    Decimal(
                                        Decimal {
                                            before_decimal: "1",
                                            after_decimal: "",
                                        },
                                    ),
                                ),
                                Operator(
                                    (
                                        "<",
                                        true,
                                    ),
                                ),
                                Number(
                                    Decimal(
                                        Decimal {
                                            before_decimal: "2",
                                            after_decimal: "",
                                        },
                                    ),
                                ),
                            ],
                        ),
                        Ident(
                            [],
                        ),
                        Operator(
                            (
                                "and",
                                true,
                            ),
                        ),
                        Operator(
                            (
                                "not",
                                false,
                            ),
                        ),
                        Expr(
                            [
                                Number(
                                    Decimal(
                                        Decimal {
                                            before_decimal: "2",
                                            after_decimal: "",
                                        },
                                    ),
                                ),
                                Operator(
                                    (
                                        "<",
                                        true,
                                    ),
                                ),
                                Number(
                                    Decimal(
                                        Decimal {
                                            before_decimal: "1",
                                            after_decimal: "",
                                        },
                                    ),
                                ),
                            ],
                        ),
                        Ident(
                            [],
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Operator(
                            (
                                "not",
                                false,
                            ),
                        ),
                        Expr(
                            [
                                Symbol(
                                    "'a'",
                                ),
                                Operator(
                                    (
                                        "<",
                                        true,
                                    ),
                                ),
                                Symbol(
                                    "'a'",
                                ),
                            ],
                        ),
                        Ident(
                            [],
                        ),
                        Operator(
                            (
                                "and",
                                true,
                            ),
                        ),
                        Expr(
                            [
                                Symbol(
                                    "'a'",
                                ),
                                Operator(
                                    (
                                        "<",
                                        true,
                                    ),
                                ),
                                Symbol(
                                    "'b'",
                                ),
                            ],
                        ),
                        Ident(
                            [],
                        ),
                        Operator(
                            (
                                "and",
                                true,
                            ),
                        ),
                        Operator(
                            (
                                "not",
                                false,
                            ),
                        ),
                        Expr(
                            [
                                Symbol(
                                    "'b'",
                                ),
                                Operator(
                                    (
                                        "<",
                                        true,
                                    ),
                                ),
                                Symbol(
                                    "'a'",
                                ),
                            ],
                        ),
                        Ident(
                            [],
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Expr(
                            [
                                Number(
                                    Decimal(
                                        Decimal {
                                            before_decimal: "1",
                                            after_decimal: "",
                                        },
                                    ),
                                ),
                                Operator(
                                    (
                                        "<=",
                                        true,
                                    ),
                                ),
                                Number(
                                    Decimal(
                                        Decimal {
                                            before_decimal: "1",
                                            after_decimal: "",
                                        },
                                    ),
                                ),
                            ],
                        ),
                        Ident(
                            [],
                        ),
                        Operator(
                            (
                                "and",
                                true,
                            ),
                        ),
                        Expr(
                            [
                                Number(
                                    Decimal(
                                        Decimal {
                                            before_decimal: "1",
                                            after_decimal: "",
                                        },
                                    ),
                                ),
                                Operator(
                                    (
                                        "<=",
                                        true,
                                    ),
                                ),
                                Number(
                                    Decimal(
                                        Decimal {
                                            before_decimal: "2",
                                            after_decimal: "",
                                        },
                                    ),
                                ),
                            ],
                        ),
                        Ident(
                            [],
                        ),
                        Operator(
                            (
                                "and",
                                true,
                            ),
                        ),
                        Operator(
                            (
                                "not",
                                false,
                            ),
                        ),
                        Expr(
                            [
                                Number(
                                    Decimal(
                                        Decimal {
                                            before_decimal: "2",
                                            after_decimal: "",
                                        },
                                    ),
                                ),
                                Operator(
                                    (
                                        "<=",
                                        true,
                                    ),
                                ),
                                Number(
                                    Decimal(
                                        Decimal {
                                            before_decimal: "1",
                                            after_decimal: "",
                                        },
                                    ),
                                ),
                            ],
                        ),
                        Ident(
                            [],
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Expr(
                            [
                                Symbol(
                                    "'a'",
                                ),
                                Operator(
                                    (
                                        "<=",
                                        true,
                                    ),
                                ),
                                Symbol(
                                    "'a'",
                                ),
                            ],
                        ),
                        Ident(
                            [],
                        ),
                        Operator(
                            (
                                "and",
                                true,
                            ),
                        ),
                        Expr(
                            [
                                Symbol(
                                    "'a'",
                                ),
                                Operator(
                                    (
                                        "<=",
                                        true,
                                    ),
                                ),
                                Symbol(
                                    "'b'",
                                ),
                            ],
                        ),
                        Ident(
                            [],
                        ),
                        Operator(
                            (
                                "and",
                                true,
                            ),
                        ),
                        Operator(
                            (
                                "not",
                                false,
                            ),
                        ),
                        Expr(
                            [
                                Symbol(
                                    "'b'",
                                ),
                                Operator(
                                    (
                                        "<=",
                                        true,
                                    ),
                                ),
                                Symbol(
                                    "'a'",
                                ),
                            ],
                        ),
                        Ident(
                            [],
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Operator(
                            (
                                "not",
                                false,
                            ),
                        ),
                        Expr(
                            [
                                Number(
                                    Decimal(
                                        Decimal {
                                            before_decimal: "1",
                                            after_decimal: "",
                                        },
                                    ),
                                ),
                                Operator(
                                    (
                                        ">",
                                        true,
                                    ),
                                ),
                                Number(
                                    Decimal(
                                        Decimal {
                                            before_decimal: "1",
                                            after_decimal: "",
                                        },
                                    ),
                                ),
                            ],
                        ),
                        Ident(
                            [],
                        ),
                        Operator(
                            (
                                "and",
                                true,
                            ),
                        ),
                        Operator(
                            (
                                "not",
                                false,
                            ),
                        ),
                        Expr(
                            [
                                Number(
                                    Decimal(
                                        Decimal {
                                            before_decimal: "1",
                                            after_decimal: "",
                                        },
                                    ),
                                ),
                                Operator(
                                    (
                                        ">",
                                        true,
                                    ),
                                ),
                                Number(
                                    Decimal(
                                        Decimal {
                                            before_decimal: "2",
                                            after_decimal: "",
                                        },
                                    ),
                                ),
                            ],
                        ),
                        Ident(
                            [],
                        ),
                        Operator(
                            (
                                "and",
                                true,
                            ),
                        ),
                        Expr(
                            [
                                Number(
                                    Decimal(
                                        Decimal {
                                            before_decimal: "2",
                                            after_decimal: "",
                                        },
                                    ),
                                ),
                                Operator(
                                    (
                                        ">",
                                        true,
                                    ),
                                ),
                                Number(
                                    Decimal(
                                        Decimal {
                                            before_decimal: "1",
                                            after_decimal: "",
                                        },
                                    ),
                                ),
                            ],
                        ),
                        Ident(
                            [],
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Operator(
                            (
                                "not",
                                false,
                            ),
                        ),
                        Expr(
                            [
                                Symbol(
                                    "'a'",
                                ),
                                Operator(
                                    (
                                        ">",
                                        true,
                                    ),
                                ),
                                Symbol(
                                    "'a'",
                                ),
                            ],
                        ),
                        Ident(
                            [],
                        ),
                        Operator(
                            (
                                "and",
                                true,
                            ),
                        ),
                        Operator(
                            (
                                "not",
                                false,
                            ),
                        ),
                        Expr(
                            [
                                Symbol(
                                    "'a'",
                                ),
                                Operator(
                                    (
                                        ">",
                                        true,
                                    ),
                                ),
                                Symbol(
                                    "'b'",
                                ),
                            ],
                        ),
                        Ident(
                            [],
                        ),
                        Operator(
                            (
                                "and",
                                true,
                            ),
                        ),
                        Expr(
                            [
                                Symbol(
                                    "'b'",
                                ),
                                Operator(
                                    (
                                        ">",
                                        true,
                                    ),
                                ),
                                Symbol(
                                    "'a'",
                                ),
                            ],
                        ),
                        Ident(
                            [],
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Expr(
                            [
                                Number(
                                    Decimal(
                                        Decimal {
                                            before_decimal: "1",
                                            after_decimal: "",
                                        },
                                    ),
                                ),
                                Operator(
                                    (
                                        ">=",
                                        true,
                                    ),
                                ),
                                Number(
                                    Decimal(
                                        Decimal {
                                            before_decimal: "1",
                                            after_decimal: "",
                                        },
                                    ),
                                ),
                            ],
                        ),
                        Ident(
                            [],
                        ),
                        Operator(
                            (
                                "and",
                                true,
                            ),
                        ),
                        Operator(
                            (
                                "not",
                                false,
                            ),
                        ),
                        Expr(
                            [
                                Number(
                                    Decimal(
                                        Decimal {
                                            before_decimal: "1",
                                            after_decimal: "",
                                        },
                                    ),
                                ),
                                Operator(
                                    (
                                        ">=",
                                        true,
                                    ),
                                ),
                                Number(
                                    Decimal(
                                        Decimal {
                                            before_decimal: "2",
                                            after_decimal: "",
                                        },
                                    ),
                                ),
                            ],
                        ),
                        Ident(
                            [],
                        ),
                        Operator(
                            (
                                "and",
                                true,
                            ),
                        ),
                        Expr(
                            [
                                Number(
                                    Decimal(
                                        Decimal {
                                            before_decimal: "2",
                                            after_decimal: "",
                                        },
                                    ),
                                ),
                                Operator(
                                    (
                                        ">=",
                                        true,
                                    ),
                                ),
                                Number(
                                    Decimal(
                                        Decimal {
                                            before_decimal: "1",
                                            after_decimal: "",
                                        },
                                    ),
                                ),
                            ],
                        ),
                        Ident(
                            [],
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Expr(
                            [
                                Symbol(
                                    "'a'",
                                ),
                                Operator(
                                    (
                                        ">=",
                                        true,
                                    ),
                                ),
                                Symbol(
                                    "'a'",
                                ),
                            ],
                        ),
                        Ident(
                            [],
                        ),
                        Operator(
                            (
                                "and",
                                true,
                            ),
                        ),
                        Operator(
                            (
                                "not",
                                false,
                            ),
                        ),
                        Expr(
                            [
                                Symbol(
                                    "'a'",
                                ),
                                Operator(
                                    (
                                        ">=",
                                        true,
                                    ),
                                ),
                                Symbol(
                                    "'b'",
                                ),
                            ],
                        ),
                        Ident(
                            [],
                        ),
                        Operator(
                            (
                                "and",
                                true,
                            ),
                        ),
                        Expr(
                            [
                                Symbol(
                                    "'b'",
                                ),
                                Operator(
                                    (
                                        ">=",
                                        true,
                                    ),
                                ),
                                Symbol(
                                    "'a'",
                                ),
                            ],
                        ),
                        Ident(
                            [],
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Operator(
                            (
                                "-",
                                false,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "4",
                                    after_decimal: "",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "%",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "3",
                                    after_decimal: "",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "2",
                                    after_decimal: "",
                                },
                            ),
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "4",
                                    after_decimal: "",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "%",
                                true,
                            ),
                        ),
                        Operator(
                            (
                                "-",
                                false,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "3",
                                    after_decimal: "",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Operator(
                            (
                                "-",
                                false,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "2",
                                    after_decimal: "",
                                },
                            ),
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "math",
                                ),
                                Symbol(
                                    ".",
                                ),
                                Symbol(
                                    "pi",
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "-",
                                true,
                            ),
                        ),
                        Ident(
                            [
                                Symbol(
                                    "math",
                                ),
                                Symbol(
                                    ".",
                                ),
                                Symbol(
                                    "pi",
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "%",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "1",
                                    after_decimal: "",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "3",
                                    after_decimal: "",
                                },
                            ),
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "math",
                                ),
                                Symbol(
                                    ".",
                                ),
                                Symbol(
                                    "pi",
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "-",
                                true,
                            ),
                        ),
                        Ident(
                            [
                                Symbol(
                                    "math",
                                ),
                                Symbol(
                                    ".",
                                ),
                                Symbol(
                                    "pi",
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "%",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "0",
                                    after_decimal: ".001",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "3",
                                    after_decimal: ".141",
                                },
                            ),
                        ),
                    ],
                ],
            ),
        ],
    ),
    Function {
        local: true,
        name: [
            Symbol(
                "testbit",
            ),
        ],
        args: [
            "a",
            "n",
        ],
        body: CodeBlock {
            start: 1532,
            code: [
                Return(
                    Some(
                        [
                            [
                                Ident(
                                    [
                                        Symbol(
                                            "a",
                                        ),
                                    ],
                                ),
                                Operator(
                                    (
                                        "/",
                                        true,
                                    ),
                                ),
                                Number(
                                    Decimal(
                                        Decimal {
                                            before_decimal: "2",
                                            after_decimal: "",
                                        },
                                    ),
                                ),
                                Operator(
                                    (
                                        "^",
                                        true,
                                    ),
                                ),
                                Ident(
                                    [
                                        Symbol(
                                            "n",
                                        ),
                                    ],
                                ),
                                Operator(
                                    (
                                        "%",
                                        true,
                                    ),
                                ),
                                Number(
                                    Decimal(
                                        Decimal {
                                            before_decimal: "2",
                                            after_decimal: "",
                                        },
                                    ),
                                ),
                                Operator(
                                    (
                                        ">=",
                                        true,
                                    ),
                                ),
                                Number(
                                    Decimal(
                                        Decimal {
                                            before_decimal: "1",
                                            after_decimal: "",
                                        },
                                    ),
                                ),
                            ],
                        ],
                    ),
                ),
            ],
            end: 1543,
        },
    },
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "eq",
                                ),
                                Call(
                                    [
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "math",
                                                    ),
                                                    Symbol(
                                                        ".",
                                                    ),
                                                    Symbol(
                                                        "sin",
                                                    ),
                                                    Call(
                                                        [
                                                            [
                                                                Operator(
                                                                    (
                                                                        "-",
                                                                        false,
                                                                    ),
                                                                ),
                                                                Number(
                                                                    Decimal(
                                                                        Decimal {
                                                                            before_decimal: "9",
                                                                            after_decimal: ".8",
                                                                        },
                                                                    ),
                                                                ),
                                                            ],
                                                        ],
                                                    ),
                                                ],
                                            ),
                                            Operator(
                                                (
                                                    "^",
                                                    true,
                                                ),
                                            ),
                                            Number(
                                                Decimal(
                                                    Decimal {
                                                        before_decimal: "2",
                                                        after_decimal: "",
                                                    },
                                                ),
                                            ),
                                            Operator(
                                                (
                                                    "+",
                                                    true,
                                                ),
                                            ),
                                            Ident(
                                                [
                                                    Symbol(
                                                        "math",
                                                    ),
                                                    Symbol(
                                                        ".",
                                                    ),
                                                    Symbol(
                                                        "cos",
                                                    ),
                                                    Call(
                                                        [
                                                            [
                                                                Operator(
                                                                    (
                                                                        "-",
                                                                        false,
                                                                    ),
                                                                ),
                                                                Number(
                                                                    Decimal(
                                                                        Decimal {
                                                                            before_decimal: "9",
                                                                            after_decimal: ".8",
                                                                        },
                                                                    ),
                                                                ),
                                                            ],
                                                        ],
                                                    ),
                                                ],
                                            ),
                                            Operator(
                                                (
                                                    "^",
                                                    true,
                                                ),
                                            ),
                                            Number(
                                                Decimal(
                                                    Decimal {
                                                        before_decimal: "2",
                                                        after_decimal: "",
                                                    },
                                                ),
                                            ),
                                        ],
                                        [
                                            Number(
                                                Decimal(
                                                    Decimal {
                                                        before_decimal: "1",
                                                        after_decimal: "",
                                                    },
                                                ),
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "eq",
                                ),
                                Call(
                                    [
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "math",
                                                    ),
                                                    Symbol(
                                                        ".",
                                                    ),
                                                    Symbol(
                                                        "tan",
                                                    ),
                                                    Call(
                                                        [
                                                            [
                                                                Ident(
                                                                    [
                                                                        Symbol(
                                                                            "math",
                                                                        ),
                                                                        Symbol(
                                                                            ".",
                                                                        ),
                                                                        Symbol(
                                                                            "pi",
                                                                        ),
                                                                    ],
                                                                ),
                                                                Operator(
                                                                    (
                                                                        "/",
                                                                        true,
                                                                    ),
                                                                ),
                                                                Number(
                                                                    Decimal(
                                                                        Decimal {
                                                                            before_decimal: "4",
                                                                            after_decimal: "",
                                                                        },
                                                                    ),
                                                                ),
                                                            ],
                                                        ],
                                                    ),
                                                ],
                                            ),
                                        ],
                                        [
                                            Number(
                                                Decimal(
                                                    Decimal {
                                                        before_decimal: "1",
                                                        after_decimal: "",
                                                    },
                                                ),
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "eq",
                                ),
                                Call(
                                    [
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "math",
                                                    ),
                                                    Symbol(
                                                        ".",
                                                    ),
                                                    Symbol(
                                                        "sin",
                                                    ),
                                                    Call(
                                                        [
                                                            [
                                                                Ident(
                                                                    [
                                                                        Symbol(
                                                                            "math",
                                                                        ),
                                                                        Symbol(
                                                                            ".",
                                                                        ),
                                                                        Symbol(
                                                                            "pi",
                                                                        ),
                                                                    ],
                                                                ),
                                                                Operator(
                                                                    (
                                                                        "/",
                                                                        true,
                                                                    ),
                                                                ),
                                                                Number(
                                                                    Decimal(
                                                                        Decimal {
                                                                            before_decimal: "2",
                                                                            after_decimal: "",
                                                                        },
                                                                    ),
                                                                ),
                                                            ],
                                                        ],
                                                    ),
                                                ],
                                            ),
                                        ],
                                        [
                                            Number(
                                                Decimal(
                                                    Decimal {
                                                        before_decimal: "1",
                                                        after_decimal: "",
                                                    },
                                                ),
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "and",
                                true,
                            ),
                        ),
                        Ident(
                            [
                                Symbol(
                                    "eq",
                                ),
                                Call(
                                    [
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "math",
                                                    ),
                                                    Symbol(
                                                        ".",
                                                    ),
                                                    Symbol(
                                                        "cos",
                                                    ),
                                                    Call(
                                                        [
                                                            [
                                                                Ident(
                                                                    [
                                                                        Symbol(
                                                                            "math",
                                                                        ),
                                                                        Symbol(
                                                                            ".",
                                                                        ),
                                                                        Symbol(
                                                                            "pi",
                                                                        ),
                                                                    ],
                                                                ),
                                                                Operator(
                                                                    (
                                                                        "/",
                                                                        true,
                                                                    ),
                                                                ),
                                                                Number(
                                                                    Decimal(
                                                                        Decimal {
                                                                            before_decimal: "2",
                                                                            after_decimal: "",
                                                                        },
                                                                    ),
                                                                ),
                                                            ],
                                                        ],
                                                    ),
                                                ],
                                            ),
                                        ],
                                        [
                                            Number(
                                                Decimal(
                                                    Decimal {
                                                        before_decimal: "0",
                                                        after_decimal: "",
                                                    },
                                                ),
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "eq",
                                ),
                                Call(
                                    [
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "math",
                                                    ),
                                                    Symbol(
                                                        ".",
                                                    ),
                                                    Symbol(
                                                        "atan",
                                                    ),
                                                    Call(
                                                        [
                                                            [
                                                                Number(
                                                                    Decimal(
                                                                        Decimal {
                                                                            before_decimal: "1",
                                                                            after_decimal: "",
                                                                        },
                                                                    ),
                                                                ),
                                                            ],
                                                        ],
                                                    ),
                                                ],
                                            ),
                                        ],
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "math",
                                                    ),
                                                    Symbol(
                                                        ".",
                                                    ),
                                                    Symbol(
                                                        "pi",
                                                    ),
                                                ],
                                            ),
                                            Operator(
                                                (
                                                    "/",
                                                    true,
                                                ),
                                            ),
                                            Number(
                                                Decimal(
                                                    Decimal {
                                                        before_decimal: "4",
                                                        after_decimal: "",
                                                    },
                                                ),
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "and",
                                true,
                            ),
                        ),
                        Ident(
                            [
                                Symbol(
                                    "eq",
                                ),
                                Call(
                                    [
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "math",
                                                    ),
                                                    Symbol(
                                                        ".",
                                                    ),
                                                    Symbol(
                                                        "acos",
                                                    ),
                                                    Call(
                                                        [
                                                            [
                                                                Number(
                                                                    Decimal(
                                                                        Decimal {
                                                                            before_decimal: "0",
                                                                            after_decimal: "",
                                                                        },
                                                                    ),
                                                                ),
                                                            ],
                                                        ],
                                                    ),
                                                ],
                                            ),
                                        ],
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "math",
                                                    ),
                                                    Symbol(
                                                        ".",
                                                    ),
                                                    Symbol(
                                                        "pi",
                                                    ),
                                                ],
                                            ),
                                            Operator(
                                                (
                                                    "/",
                                                    true,
                                                ),
                                            ),
                                            Number(
                                                Decimal(
                                                    Decimal {
                                                        before_decimal: "2",
                                                        after_decimal: "",
                                                    },
                                                ),
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "and",
                                true,
                            ),
                        ),
                        Ident(
                            [
                                Symbol(
                                    "eq",
                                ),
                                Call(
                                    [
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "math",
                                                    ),
                                                    Symbol(
                                                        ".",
                                                    ),
                                                    Symbol(
                                                        "asin",
                                                    ),
                                                    Call(
                                                        [
                                                            [
                                                                Number(
                                                                    Decimal(
                                                                        Decimal {
                                                                            before_decimal: "1",
                                                                            after_decimal: "",
                                                                        },
                                                                    ),
                                                                ),
                                                            ],
                                                        ],
                                                    ),
                                                ],
                                            ),
                                        ],
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "math",
                                                    ),
                                                    Symbol(
                                                        ".",
                                                    ),
                                                    Symbol(
                                                        "pi",
                                                    ),
                                                ],
                                            ),
                                            Operator(
                                                (
                                                    "/",
                                                    true,
                                                ),
                                            ),
                                            Number(
                                                Decimal(
                                                    Decimal {
                                                        before_decimal: "2",
                                                        after_decimal: "",
                                                    },
                                                ),
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "eq",
                                ),
                                Call(
                                    [
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "math",
                                                    ),
                                                    Symbol(
                                                        ".",
                                                    ),
                                                    Symbol(
                                                        "deg",
                                                    ),
                                                    Call(
                                                        [
                                                            [
                                                                Ident(
                                                                    [
                                                                        Symbol(
                                                                            "math",
                                                                        ),
                                                                        Symbol(
                                                                            ".",
                                                                        ),
                                                                        Symbol(
                                                                            "pi",
                                                                        ),
                                                                    ],
                                                                ),
                                                                Operator(
                                                                    (
                                                                        "/",
                                                                        true,
                                                                    ),
                                                                ),
                                                                Number(
                                                                    Decimal(
                                                                        Decimal {
                                                                            before_decimal: "2",
                                                                            after_decimal: "",
                                                                        },
                                                                    ),
                                                                ),
                                                            ],
                                                        ],
                                                    ),
                                                ],
                                            ),
                                        ],
                                        [
                                            Number(
                                                Decimal(
                                                    Decimal {
                                                        before_decimal: "90",
                                                        after_decimal: "",
                                                    },
                                                ),
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "and",
                                true,
                            ),
                        ),
                        Ident(
                            [
                                Symbol(
                                    "eq",
                                ),
                                Call(
                                    [
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "math",
                                                    ),
                                                    Symbol(
                                                        ".",
                                                    ),
                                                    Symbol(
                                                        "rad",
                                                    ),
                                                    Call(
                                                        [
                                                            [
                                                                Number(
                                                                    Decimal(
                                                                        Decimal {
                                                                            before_decimal: "90",
                                                                            after_decimal: "",
                                                                        },
                                                                    ),
                                                                ),
                                                            ],
                                                        ],
                                                    ),
                                                ],
                                            ),
                                        ],
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "math",
                                                    ),
                                                    Symbol(
                                                        ".",
                                                    ),
                                                    Symbol(
                                                        "pi",
                                                    ),
                                                ],
                                            ),
                                            Operator(
                                                (
                                                    "/",
                                                    true,
                                                ),
                                            ),
                                            Number(
                                                Decimal(
                                                    Decimal {
                                                        before_decimal: "2",
                                                        after_decimal: "",
                                                    },
                                                ),
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "math",
                                ),
                                Symbol(
                                    ".",
                                ),
                                Symbol(
                                    "abs",
                                ),
                                Call(
                                    [
                                        [
                                            Operator(
                                                (
                                                    "-",
                                                    false,
                                                ),
                                            ),
                                            Number(
                                                Decimal(
                                                    Decimal {
                                                        before_decimal: "10",
                                                        after_decimal: "",
                                                    },
                                                ),
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "10",
                                    after_decimal: "",
                                },
                            ),
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "eq",
                                ),
                                Call(
                                    [
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "math",
                                                    ),
                                                    Symbol(
                                                        ".",
                                                    ),
                                                    Symbol(
                                                        "atan2",
                                                    ),
                                                    Call(
                                                        [
                                                            [
                                                                Number(
                                                                    Decimal(
                                                                        Decimal {
                                                                            before_decimal: "1",
                                                                            after_decimal: "",
                                                                        },
                                                                    ),
                                                                ),
                                                            ],
                                                            [
                                                                Number(
                                                                    Decimal(
                                                                        Decimal {
                                                                            before_decimal: "0",
                                                                            after_decimal: "",
                                                                        },
                                                                    ),
                                                                ),
                                                            ],
                                                        ],
                                                    ),
                                                ],
                                            ),
                                        ],
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "math",
                                                    ),
                                                    Symbol(
                                                        ".",
                                                    ),
                                                    Symbol(
                                                        "pi",
                                                    ),
                                                ],
                                            ),
                                            Operator(
                                                (
                                                    "/",
                                                    true,
                                                ),
                                            ),
                                            Number(
                                                Decimal(
                                                    Decimal {
                                                        before_decimal: "2",
                                                        after_decimal: "",
                                                    },
                                                ),
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "math",
                                ),
                                Symbol(
                                    ".",
                                ),
                                Symbol(
                                    "ceil",
                                ),
                                Call(
                                    [
                                        [
                                            Number(
                                                Decimal(
                                                    Decimal {
                                                        before_decimal: "4",
                                                        after_decimal: ".5",
                                                    },
                                                ),
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "5",
                                    after_decimal: ".0",
                                },
                            ),
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "math",
                                ),
                                Symbol(
                                    ".",
                                ),
                                Symbol(
                                    "floor",
                                ),
                                Call(
                                    [
                                        [
                                            Number(
                                                Decimal(
                                                    Decimal {
                                                        before_decimal: "4",
                                                        after_decimal: ".5",
                                                    },
                                                ),
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "4",
                                    after_decimal: ".0",
                                },
                            ),
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "math",
                                ),
                                Symbol(
                                    ".",
                                ),
                                Symbol(
                                    "fmod",
                                ),
                                Call(
                                    [
                                        [
                                            Number(
                                                Decimal(
                                                    Decimal {
                                                        before_decimal: "10",
                                                        after_decimal: "",
                                                    },
                                                ),
                                            ),
                                        ],
                                        [
                                            Number(
                                                Decimal(
                                                    Decimal {
                                                        before_decimal: "3",
                                                        after_decimal: "",
                                                    },
                                                ),
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "1",
                                    after_decimal: "",
                                },
                            ),
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "eq",
                                ),
                                Call(
                                    [
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "math",
                                                    ),
                                                    Symbol(
                                                        ".",
                                                    ),
                                                    Symbol(
                                                        "sqrt",
                                                    ),
                                                    Call(
                                                        [
                                                            [
                                                                Number(
                                                                    Decimal(
                                                                        Decimal {
                                                                            before_decimal: "10",
                                                                            after_decimal: "",
                                                                        },
                                                                    ),
                                                                ),
                                                            ],
                                                        ],
                                                    ),
                                                ],
                                            ),
                                            Operator(
                                                (
                                                    "^",
                                                    true,
                                                ),
                                            ),
                                            Number(
                                                Decimal(
                                                    Decimal {
                                                        before_decimal: "2",
                                                        after_decimal: "",
                                                    },
                                                ),
                                            ),
                                        ],
                                        [
                                            Number(
                                                Decimal(
                                                    Decimal {
                                                        before_decimal: "10",
                                                        after_decimal: "",
                                                    },
                                                ),
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "eq",
                                ),
                                Call(
                                    [
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "math",
                                                    ),
                                                    Symbol(
                                                        ".",
                                                    ),
                                                    Symbol(
                                                        "log",
                                                    ),
                                                    Call(
                                                        [
                                                            [
                                                                Number(
                                                                    Decimal(
                                                                        Decimal {
                                                                            before_decimal: "2",
                                                                            after_decimal: "",
                                                                        },
                                                                    ),
                                                                ),
                                                            ],
                                                            [
                                                                Number(
                                                                    Decimal(
                                                                        Decimal {
                                                                            before_decimal: "10",
                                                                            after_decimal: "",
                                                                        },
                                                                    ),
                                                                ),
                                                            ],
                                                        ],
                                                    ),
                                                ],
                                            ),
                                        ],
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "math",
                                                    ),
                                                    Symbol(
                                                        ".",
                                                    ),
                                                    Symbol(
                                                        "log",
                                                    ),
                                                    Call(
                                                        [
                                                            [
                                                                Number(
                                                                    Decimal(
                                                                        Decimal {
                                                                            before_decimal: "2",
                                                                            after_decimal: "",
                                                                        },
                                                                    ),
                                                                ),
                                                            ],
                                                        ],
                                                    ),
                                                ],
                                            ),
                                            Operator(
                                                (
                                                    "/",
                                                    true,
                                                ),
                                            ),
                                            Ident(
                                                [
                                                    Symbol(
                                                        "math",
                                                    ),
                                                    Symbol(
                                                        ".",
                                                    ),
                                                    Symbol(
                                                        "log",
                                                    ),
                                                    Call(
                                                        [
                                                            [
                                                                Number(
                                                                    Decimal(
                                                                        Decimal {
                                                                            before_decimal: "10",
                                                                            after_decimal: "",
                                                                        },
                                                                    ),
                                                                ),
                                                            ],
                                                        ],
                                                    ),
                                                ],
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "eq",
                                ),
                                Call(
                                    [
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "math",
                                                    ),
                                                    Symbol(
                                                        ".",
                                                    ),
                                                    Symbol(
                                                        "log",
                                                    ),
                                                    Call(
                                                        [
                                                            [
                                                                Number(
                                                                    Decimal(
                                                                        Decimal {
                                                                            before_decimal: "2",
                                                                            after_decimal: "",
                                                                        },
                                                                    ),
                                                                ),
                                                            ],
                                                            [
                                                                Number(
                                                                    Decimal(
                                                                        Decimal {
                                                                            before_decimal: "2",
                                                                            after_decimal: "",
                                                                        },
                                                                    ),
                                                                ),
                                                            ],
                                                        ],
                                                    ),
                                                ],
                                            ),
                                        ],
                                        [
                                            Number(
                                                Decimal(
                                                    Decimal {
                                                        before_decimal: "1",
                                                        after_decimal: "",
                                                    },
                                                ),
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "eq",
                                ),
                                Call(
                                    [
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "math",
                                                    ),
                                                    Symbol(
                                                        ".",
                                                    ),
                                                    Symbol(
                                                        "log",
                                                    ),
                                                    Call(
                                                        [
                                                            [
                                                                Number(
                                                                    Decimal(
                                                                        Decimal {
                                                                            before_decimal: "9",
                                                                            after_decimal: "",
                                                                        },
                                                                    ),
                                                                ),
                                                            ],
                                                            [
                                                                Number(
                                                                    Decimal(
                                                                        Decimal {
                                                                            before_decimal: "3",
                                                                            after_decimal: "",
                                                                        },
                                                                    ),
                                                                ),
                                                            ],
                                                        ],
                                                    ),
                                                ],
                                            ),
                                        ],
                                        [
                                            Number(
                                                Decimal(
                                                    Decimal {
                                                        before_decimal: "2",
                                                        after_decimal: "",
                                                    },
                                                ),
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "eq",
                                ),
                                Call(
                                    [
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "math",
                                                    ),
                                                    Symbol(
                                                        ".",
                                                    ),
                                                    Symbol(
                                                        "exp",
                                                    ),
                                                    Call(
                                                        [
                                                            [
                                                                Number(
                                                                    Decimal(
                                                                        Decimal {
                                                                            before_decimal: "0",
                                                                            after_decimal: "",
                                                                        },
                                                                    ),
                                                                ),
                                                            ],
                                                        ],
                                                    ),
                                                ],
                                            ),
                                        ],
                                        [
                                            Number(
                                                Decimal(
                                                    Decimal {
                                                        before_decimal: "1",
                                                        after_decimal: "",
                                                    },
                                                ),
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "eq",
                                ),
                                Call(
                                    [
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "math",
                                                    ),
                                                    Symbol(
                                                        ".",
                                                    ),
                                                    Symbol(
                                                        "sin",
                                                    ),
                                                    Call(
                                                        [
                                                            [
                                                                Number(
                                                                    Decimal(
                                                                        Decimal {
                                                                            before_decimal: "10",
                                                                            after_decimal: "",
                                                                        },
                                                                    ),
                                                                ),
                                                            ],
                                                        ],
                                                    ),
                                                ],
                                            ),
                                        ],
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "math",
                                                    ),
                                                    Symbol(
                                                        ".",
                                                    ),
                                                    Symbol(
                                                        "sin",
                                                    ),
                                                    Call(
                                                        [
                                                            [
                                                                Number(
                                                                    Decimal(
                                                                        Decimal {
                                                                            before_decimal: "10",
                                                                            after_decimal: "",
                                                                        },
                                                                    ),
                                                                ),
                                                                Operator(
                                                                    (
                                                                        "%",
                                                                        true,
                                                                    ),
                                                                ),
                                                                Expr(
                                                                    [
                                                                        Number(
                                                                            Decimal(
                                                                                Decimal {
                                                                                    before_decimal: "2",
                                                                                    after_decimal: "",
                                                                                },
                                                                            ),
                                                                        ),
                                                                        Operator(
                                                                            (
                                                                                "*",
                                                                                true,
                                                                            ),
                                                                        ),
                                                                        Ident(
                                                                            [
                                                                                Symbol(
                                                                                    "math",
                                                                                ),
                                                                                Symbol(
                                                                                    ".",
                                                                                ),
                                                                                Symbol(
                                                                                    "pi",
                                                                                ),
                                                                            ],
                                                                        ),
                                                                    ],
                                                                ),
                                                                Ident(
                                                                    [],
                                                                ),
                                                            ],
                                                        ],
                                                    ),
                                                ],
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                    ],
                ],
            ),
        ],
    ),
    Variable {
        names: [
            (
                "v",
                false,
            ),
            (
                "e",
                false,
            ),
        ],
        values: [
            [
                Ident(
                    [
                        Symbol(
                            "math",
                        ),
                        Symbol(
                            ".",
                        ),
                        Symbol(
                            "frexp",
                        ),
                        Call(
                            [
                                [
                                    Ident(
                                        [
                                            Symbol(
                                                "math",
                                            ),
                                            Symbol(
                                                ".",
                                            ),
                                            Symbol(
                                                "pi",
                                            ),
                                        ],
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
            ],
        ],
    },
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "eq",
                                ),
                                Call(
                                    [
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "math",
                                                    ),
                                                    Symbol(
                                                        ".",
                                                    ),
                                                    Symbol(
                                                        "ldexp",
                                                    ),
                                                    Call(
                                                        [
                                                            [
                                                                Ident(
                                                                    [
                                                                        Symbol(
                                                                            "v",
                                                                        ),
                                                                    ],
                                                                ),
                                                            ],
                                                            [
                                                                Ident(
                                                                    [
                                                                        Symbol(
                                                                            "e",
                                                                        ),
                                                                    ],
                                                                ),
                                                            ],
                                                        ],
                                                    ),
                                                ],
                                            ),
                                        ],
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "math",
                                                    ),
                                                    Symbol(
                                                        ".",
                                                    ),
                                                    Symbol(
                                                        "pi",
                                                    ),
                                                ],
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "eq",
                                ),
                                Call(
                                    [
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "math",
                                                    ),
                                                    Symbol(
                                                        ".",
                                                    ),
                                                    Symbol(
                                                        "tanh",
                                                    ),
                                                    Call(
                                                        [
                                                            [
                                                                Number(
                                                                    Decimal(
                                                                        Decimal {
                                                                            before_decimal: "3",
                                                                            after_decimal: ".5",
                                                                        },
                                                                    ),
                                                                ),
                                                            ],
                                                        ],
                                                    ),
                                                ],
                                            ),
                                        ],
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "math",
                                                    ),
                                                    Symbol(
                                                        ".",
                                                    ),
                                                    Symbol(
                                                        "sinh",
                                                    ),
                                                    Call(
                                                        [
                                                            [
                                                                Number(
                                                                    Decimal(
                                                                        Decimal {
                                                                            before_decimal: "3",
                                                                            after_decimal: ".5",
                                                                        },
                                                                    ),
                                                                ),
                                                            ],
                                                        ],
                                                    ),
                                                ],
                                            ),
                                            Operator(
                                                (
                                                    "/",
                                                    true,
                                                ),
                                            ),
                                            Ident(
                                                [
                                                    Symbol(
                                                        "math",
                                                    ),
                                                    Symbol(
                                                        ".",
                                                    ),
                                                    Symbol(
                                                        "cosh",
                                                    ),
                                                    Call(
                                                        [
                                                            [
                                                                Number(
                                                                    Decimal(
                                                                        Decimal {
                                                                            before_decimal: "3",
                                                                            after_decimal: ".5",
                                                                        },
                                                                    ),
                                                                ),
                                                            ],
                                                        ],
                                                    ),
                                                ],
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "tonumber",
                                ),
                                Call(
                                    [
                                        [
                                            Symbol(
                                                "' 1.3e-2 '",
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Number(
                            Scientific {
                                mantissa: Decimal {
                                    before_decimal: "1",
                                    after_decimal: ".3",
                                },
                                exponent: "-2",
                            },
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "tonumber",
                                ),
                                Call(
                                    [
                                        [
                                            Symbol(
                                                "' -1.00000000000001 '",
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Operator(
                            (
                                "-",
                                false,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "1",
                                    after_decimal: ".00000000000001",
                                },
                            ),
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "8388609",
                                    after_decimal: "",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "+",
                                true,
                            ),
                        ),
                        Operator(
                            (
                                "-",
                                false,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "8388609",
                                    after_decimal: "",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "0",
                                    after_decimal: "",
                                },
                            ),
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "8388608",
                                    after_decimal: "",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "+",
                                true,
                            ),
                        ),
                        Operator(
                            (
                                "-",
                                false,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "8388608",
                                    after_decimal: "",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "0",
                                    after_decimal: "",
                                },
                            ),
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "8388607",
                                    after_decimal: "",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "+",
                                true,
                            ),
                        ),
                        Operator(
                            (
                                "-",
                                false,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "8388607",
                                    after_decimal: "",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "0",
                                    after_decimal: "",
                                },
                            ),
                        ),
                    ],
                ],
            ),
        ],
    ),
    Variable {
        names: [
            (
                "a",
                false,
            ),
            (
                "b",
                false,
            ),
        ],
        values: [
            [
                Symbol(
                    "'10'",
                ),
            ],
            [
                Symbol(
                    "'20'",
                ),
            ],
        ],
    },
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "a",
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "*",
                                true,
                            ),
                        ),
                        Ident(
                            [
                                Symbol(
                                    "b",
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "200",
                                    after_decimal: "",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "and",
                                true,
                            ),
                        ),
                        Ident(
                            [
                                Symbol(
                                    "a",
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "+",
                                true,
                            ),
                        ),
                        Ident(
                            [
                                Symbol(
                                    "b",
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "30",
                                    after_decimal: "",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "and",
                                true,
                            ),
                        ),
                        Ident(
                            [
                                Symbol(
                                    "a",
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "-",
                                true,
                            ),
                        ),
                        Ident(
                            [
                                Symbol(
                                    "b",
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Operator(
                            (
                                "-",
                                false,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "10",
                                    after_decimal: "",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "and",
                                true,
                            ),
                        ),
                        Ident(
                            [
                                Symbol(
                                    "a",
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "/",
                                true,
                            ),
                        ),
                        Ident(
                            [
                                Symbol(
                                    "b",
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "0",
                                    after_decimal: ".5",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "and",
                                true,
                            ),
                        ),
                        Operator(
                            (
                                "-",
                                false,
                            ),
                        ),
                        Ident(
                            [
                                Symbol(
                                    "b",
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Operator(
                            (
                                "-",
                                false,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "20",
                                    after_decimal: "",
                                },
                            ),
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "a",
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Symbol(
                            "'10'",
                        ),
                        Operator(
                            (
                                "and",
                                true,
                            ),
                        ),
                        Ident(
                            [
                                Symbol(
                                    "b",
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Symbol(
                            "'20'",
                        ),
                    ],
                ],
            ),
        ],
    ),
    IfStatement {
        condition: [
            Operator(
                (
                    "not",
                    false,
                ),
            ),
            Ident(
                [
                    Symbol(
                        "_port",
                    ),
                ],
            ),
        ],
        body: CodeBlock {
            start: 2048,
            code: [
                Ident(
                    [
                        Symbol(
                            "print",
                        ),
                        Call(
                            [
                                [
                                    Symbol(
                                        "\"testing -0 and NaN\"",
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
                Variable {
                    names: [
                        (
                            "mz",
                            false,
                        ),
                        (
                            "z",
                            false,
                        ),
                    ],
                    values: [
                        [
                            Operator(
                                (
                                    "-",
                                    false,
                                ),
                            ),
                            Number(
                                Decimal(
                                    Decimal {
                                        before_decimal: "0",
                                        after_decimal: "",
                                    },
                                ),
                            ),
                        ],
                        [
                            Number(
                                Decimal(
                                    Decimal {
                                        before_decimal: "0",
                                        after_decimal: "",
                                    },
                                ),
                            ),
                        ],
                    ],
                },
                Ident(
                    [
                        Symbol(
                            "assert",
                        ),
                        Call(
                            [
                                [
                                    Ident(
                                        [
                                            Symbol(
                                                "mz",
                                            ),
                                        ],
                                    ),
                                    Operator(
                                        (
                                            "==",
                                            true,
                                        ),
                                    ),
                                    Ident(
                                        [
                                            Symbol(
                                                "z",
                                            ),
                                        ],
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
                Ident(
                    [
                        Symbol(
                            "assert",
                        ),
                        Call(
                            [
                                [
                                    Number(
                                        Decimal(
                                            Decimal {
                                                before_decimal: "1",
                                                after_decimal: "",
                                            },
                                        ),
                                    ),
                                    Operator(
                                        (
                                            "/",
                                            true,
                                        ),
                                    ),
                                    Ident(
                                        [
                                            Symbol(
                                                "mz",
                                            ),
                                        ],
                                    ),
                                    Operator(
                                        (
                                            "<",
                                            true,
                                        ),
                                    ),
                                    Number(
                                        Decimal(
                                            Decimal {
                                                before_decimal: "0",
                                                after_decimal: "",
                                            },
                                        ),
                                    ),
                                    Operator(
                                        (
                                            "and",
                                            true,
                                        ),
                                    ),
                                    Number(
                                        Decimal(
                                            Decimal {
                                                before_decimal: "0",
                                                after_decimal: "",
                                            },
                                        ),
                                    ),
                                    Operator(
                                        (
                                            "<",
                                            true,
                                        ),
                                    ),
                                    Number(
                                        Decimal(
                                            Decimal {
                                                before_decimal: "1",
                                                after_decimal: "",
                                            },
                                        ),
                                    ),
                                    Operator(
                                        (
                                            "/",
                                            true,
                                        ),
                                    ),
                                    Ident(
                                        [
                                            Symbol(
                                                "z",
                                            ),
                                        ],
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
                Variable {
                    names: [
                        (
                            "a",
                            false,
                        ),
                    ],
                    values: [
                        [
                            Table(
                                [
                                    (
                                        Some(
                                            [
                                                Ident(
                                                    [
                                                        Symbol(
                                                            "mz",
                                                        ),
                                                    ],
                                                ),
                                            ],
                                        ),
                                        [
                                            Number(
                                                Decimal(
                                                    Decimal {
                                                        before_decimal: "1",
                                                        after_decimal: "",
                                                    },
                                                ),
                                            ),
                                        ],
                                    ),
                                ],
                            ),
                        ],
                    ],
                },
                Ident(
                    [
                        Symbol(
                            "assert",
                        ),
                        Call(
                            [
                                [
                                    Ident(
                                        [
                                            Symbol(
                                                "a",
                                            ),
                                            Symbol(
                                                "[",
                                            ),
                                            Expr(
                                                [
                                                    Ident(
                                                        [
                                                            Symbol(
                                                                "z",
                                                            ),
                                                        ],
                                                    ),
                                                ],
                                            ),
                                            Symbol(
                                                "]",
                                            ),
                                        ],
                                    ),
                                    Operator(
                                        (
                                            "==",
                                            true,
                                        ),
                                    ),
                                    Number(
                                        Decimal(
                                            Decimal {
                                                before_decimal: "1",
                                                after_decimal: "",
                                            },
                                        ),
                                    ),
                                    Operator(
                                        (
                                            "and",
                                            true,
                                        ),
                                    ),
                                    Ident(
                                        [
                                            Symbol(
                                                "a",
                                            ),
                                            Symbol(
                                                "[",
                                            ),
                                            Expr(
                                                [
                                                    Ident(
                                                        [
                                                            Symbol(
                                                                "mz",
                                                            ),
                                                        ],
                                                    ),
                                                ],
                                            ),
                                            Symbol(
                                                "]",
                                            ),
                                        ],
                                    ),
                                    Operator(
                                        (
                                            "==",
                                            true,
                                        ),
                                    ),
                                    Number(
                                        Decimal(
                                            Decimal {
                                                before_decimal: "1",
                                                after_decimal: "",
                                            },
                                        ),
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
                Variable {
                    names: [
                        (
                            "inf",
                            false,
                        ),
                    ],
                    values: [
                        [
                            Ident(
                                [
                                    Symbol(
                                        "math",
                                    ),
                                    Symbol(
                                        ".",
                                    ),
                                    Symbol(
                                        "huge",
                                    ),
                                ],
                            ),
                            Operator(
                                (
                                    "*",
                                    true,
                                ),
                            ),
                            Number(
                                Decimal(
                                    Decimal {
                                        before_decimal: "2",
                                        after_decimal: "",
                                    },
                                ),
                            ),
                            Operator(
                                (
                                    "+",
                                    true,
                                ),
                            ),
                            Number(
                                Decimal(
                                    Decimal {
                                        before_decimal: "1",
                                        after_decimal: "",
                                    },
                                ),
                            ),
                        ],
                    ],
                },
                Alter {
                    names: [
                        Ident(
                            [
                                Symbol(
                                    "mz",
                                ),
                            ],
                        ),
                        Ident(
                            [
                                Symbol(
                                    "z",
                                ),
                            ],
                        ),
                    ],
                    values: [
                        [
                            Operator(
                                (
                                    "-",
                                    false,
                                ),
                            ),
                            Number(
                                Decimal(
                                    Decimal {
                                        before_decimal: "1",
                                        after_decimal: "",
                                    },
                                ),
                            ),
                            Operator(
                                (
                                    "/",
                                    true,
                                ),
                            ),
                            Ident(
                                [
                                    Symbol(
                                        "inf",
                                    ),
                                ],
                            ),
                        ],
                        [
                            Number(
                                Decimal(
                                    Decimal {
                                        before_decimal: "1",
                                        after_decimal: "",
                                    },
                                ),
                            ),
                            Operator(
                                (
                                    "/",
                                    true,
                                ),
                            ),
                            Ident(
                                [
                                    Symbol(
                                        "inf",
                                    ),
                                ],
                            ),
                        ],
                    ],
                },
                Ident(
                    [
                        Symbol(
                            "assert",
                        ),
                        Call(
                            [
                                [
                                    Ident(
                                        [
                                            Symbol(
                                                "mz",
                                            ),
                                        ],
                                    ),
                                    Operator(
                                        (
                                            "==",
                                            true,
                                        ),
                                    ),
                                    Ident(
                                        [
                                            Symbol(
                                                "z",
                                            ),
                                        ],
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
                Ident(
                    [
                        Symbol(
                            "assert",
                        ),
                        Call(
                            [
                                [
                                    Number(
                                        Decimal(
                                            Decimal {
                                                before_decimal: "1",
                                                after_decimal: "",
                                            },
                                        ),
                                    ),
                                    Operator(
                                        (
                                            "/",
                                            true,
                                        ),
                                    ),
                                    Ident(
                                        [
                                            Symbol(
                                                "mz",
                                            ),
                                        ],
                                    ),
                                    Operator(
                                        (
                                            "<",
                                            true,
                                        ),
                                    ),
                                    Number(
                                        Decimal(
                                            Decimal {
                                                before_decimal: "0",
                                                after_decimal: "",
                                            },
                                        ),
                                    ),
                                    Operator(
                                        (
                                            "and",
                                            true,
                                        ),
                                    ),
                                    Number(
                                        Decimal(
                                            Decimal {
                                                before_decimal: "0",
                                                after_decimal: "",
                                            },
                                        ),
                                    ),
                                    Operator(
                                        (
                                            "<",
                                            true,
                                        ),
                                    ),
                                    Number(
                                        Decimal(
                                            Decimal {
                                                before_decimal: "1",
                                                after_decimal: "",
                                            },
                                        ),
                                    ),
                                    Operator(
                                        (
                                            "/",
                                            true,
                                        ),
                                    ),
                                    Ident(
                                        [
                                            Symbol(
                                                "z",
                                            ),
                                        ],
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
                Variable {
                    names: [
                        (
                            "NaN",
                            false,
                        ),
                    ],
                    values: [
                        [
                            Ident(
                                [
                                    Symbol(
                                        "inf",
                                    ),
                                ],
                            ),
                            Operator(
                                (
                                    "-",
                                    true,
                                ),
                            ),
                            Ident(
                                [
                                    Symbol(
                                        "inf",
                                    ),
                                ],
                            ),
                        ],
                    ],
                },
                Ident(
                    [
                        Symbol(
                            "assert",
                        ),
                        Call(
                            [
                                [
                                    Ident(
                                        [
                                            Symbol(
                                                "NaN",
                                            ),
                                        ],
                                    ),
                                    Operator(
                                        (
                                            "~=",
                                            true,
                                        ),
                                    ),
                                    Ident(
                                        [
                                            Symbol(
                                                "NaN",
                                            ),
                                        ],
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
                Ident(
                    [
                        Symbol(
                            "assert",
                        ),
                        Call(
                            [
                                [
                                    Operator(
                                        (
                                            "not",
                                            false,
                                        ),
                                    ),
                                    Expr(
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "NaN",
                                                    ),
                                                ],
                                            ),
                                            Operator(
                                                (
                                                    "<",
                                                    true,
                                                ),
                                            ),
                                            Ident(
                                                [
                                                    Symbol(
                                                        "NaN",
                                                    ),
                                                ],
                                            ),
                                        ],
                                    ),
                                    Ident(
                                        [],
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
                Ident(
                    [
                        Symbol(
                            "assert",
                        ),
                        Call(
                            [
                                [
                                    Operator(
                                        (
                                            "not",
                                            false,
                                        ),
                                    ),
                                    Expr(
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "NaN",
                                                    ),
                                                ],
                                            ),
                                            Operator(
                                                (
                                                    "<=",
                                                    true,
                                                ),
                                            ),
                                            Ident(
                                                [
                                                    Symbol(
                                                        "NaN",
                                                    ),
                                                ],
                                            ),
                                        ],
                                    ),
                                    Ident(
                                        [],
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
                Ident(
                    [
                        Symbol(
                            "assert",
                        ),
                        Call(
                            [
                                [
                                    Operator(
                                        (
                                            "not",
                                            false,
                                        ),
                                    ),
                                    Expr(
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "NaN",
                                                    ),
                                                ],
                                            ),
                                            Operator(
                                                (
                                                    ">",
                                                    true,
                                                ),
                                            ),
                                            Ident(
                                                [
                                                    Symbol(
                                                        "NaN",
                                                    ),
                                                ],
                                            ),
                                        ],
                                    ),
                                    Ident(
                                        [],
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
                Ident(
                    [
                        Symbol(
                            "assert",
                        ),
                        Call(
                            [
                                [
                                    Operator(
                                        (
                                            "not",
                                            false,
                                        ),
                                    ),
                                    Expr(
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "NaN",
                                                    ),
                                                ],
                                            ),
                                            Operator(
                                                (
                                                    ">=",
                                                    true,
                                                ),
                                            ),
                                            Ident(
                                                [
                                                    Symbol(
                                                        "NaN",
                                                    ),
                                                ],
                                            ),
                                        ],
                                    ),
                                    Ident(
                                        [],
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
                Ident(
                    [
                        Symbol(
                            "assert",
                        ),
                        Call(
                            [
                                [
                                    Operator(
                                        (
                                            "not",
                                            false,
                                        ),
                                    ),
                                    Expr(
                                        [
                                            Number(
                                                Decimal(
                                                    Decimal {
                                                        before_decimal: "0",
                                                        after_decimal: "",
                                                    },
                                                ),
                                            ),
                                            Operator(
                                                (
                                                    "<",
                                                    true,
                                                ),
                                            ),
                                            Ident(
                                                [
                                                    Symbol(
                                                        "NaN",
                                                    ),
                                                ],
                                            ),
                                        ],
                                    ),
                                    Ident(
                                        [],
                                    ),
                                    Operator(
                                        (
                                            "and",
                                            true,
                                        ),
                                    ),
                                    Operator(
                                        (
                                            "not",
                                            false,
                                        ),
                                    ),
                                    Expr(
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "NaN",
                                                    ),
                                                ],
                                            ),
                                            Operator(
                                                (
                                                    "<",
                                                    true,
                                                ),
                                            ),
                                            Number(
                                                Decimal(
                                                    Decimal {
                                                        before_decimal: "0",
                                                        after_decimal: "",
                                                    },
                                                ),
                                            ),
                                        ],
                                    ),
                                    Ident(
                                        [],
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
                Variable {
                    names: [
                        (
                            "NaN1",
                            false,
                        ),
                    ],
                    values: [
                        [
                            Number(
                                Decimal(
                                    Decimal {
                                        before_decimal: "0",
                                        after_decimal: "",
                                    },
                                ),
                            ),
                            Operator(
                                (
                                    "/",
                                    true,
                                ),
                            ),
                            Number(
                                Decimal(
                                    Decimal {
                                        before_decimal: "0",
                                        after_decimal: "",
                                    },
                                ),
                            ),
                        ],
                    ],
                },
                Ident(
                    [
                        Symbol(
                            "assert",
                        ),
                        Call(
                            [
                                [
                                    Ident(
                                        [
                                            Symbol(
                                                "NaN",
                                            ),
                                        ],
                                    ),
                                    Operator(
                                        (
                                            "~=",
                                            true,
                                        ),
                                    ),
                                    Ident(
                                        [
                                            Symbol(
                                                "NaN1",
                                            ),
                                        ],
                                    ),
                                    Operator(
                                        (
                                            "and",
                                            true,
                                        ),
                                    ),
                                    Operator(
                                        (
                                            "not",
                                            false,
                                        ),
                                    ),
                                    Expr(
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "NaN",
                                                    ),
                                                ],
                                            ),
                                            Operator(
                                                (
                                                    "<=",
                                                    true,
                                                ),
                                            ),
                                            Ident(
                                                [
                                                    Symbol(
                                                        "NaN1",
                                                    ),
                                                ],
                                            ),
                                        ],
                                    ),
                                    Ident(
                                        [],
                                    ),
                                    Operator(
                                        (
                                            "and",
                                            true,
                                        ),
                                    ),
                                    Operator(
                                        (
                                            "not",
                                            false,
                                        ),
                                    ),
                                    Expr(
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "NaN1",
                                                    ),
                                                ],
                                            ),
                                            Operator(
                                                (
                                                    "<=",
                                                    true,
                                                ),
                                            ),
                                            Ident(
                                                [
                                                    Symbol(
                                                        "NaN",
                                                    ),
                                                ],
                                            ),
                                        ],
                                    ),
                                    Ident(
                                        [],
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
                Variable {
                    names: [
                        (
                            "a",
                            false,
                        ),
                    ],
                    values: [
                        [
                            Table(
                                [],
                            ),
                        ],
                    ],
                },
                Ident(
                    [
                        Symbol(
                            "assert",
                        ),
                        Call(
                            [
                                [
                                    Operator(
                                        (
                                            "not",
                                            false,
                                        ),
                                    ),
                                    Ident(
                                        [
                                            Symbol(
                                                "pcall",
                                            ),
                                            Call(
                                                [
                                                    [
                                                        Lambda {
                                                            args: [],
                                                            body: CodeBlock {
                                                                start: 204,
                                                                code: [
                                                                    Alter {
                                                                        names: [
                                                                            Ident(
                                                                                [
                                                                                    Symbol(
                                                                                        "a",
                                                                                    ),
                                                                                    Symbol(
                                                                                        "[",
                                                                                    ),
                                                                                    Expr(
                                                                                        [
                                                                                            Ident(
                                                                                                [
                                                                                                    Symbol(
                                                                                                        "NaN",
                                                                                                    ),
                                                                                                ],
                                                                                            ),
                                                                                        ],
                                                                                    ),
                                                                                    Symbol(
                                                                                        "]",
                                                                                    ),
                                                                                ],
                                                                            ),
                                                                        ],
                                                                        values: [
                                                                            [
                                                                                Number(
                                                                                    Decimal(
                                                                                        Decimal {
                                                                                            before_decimal: "1",
                                                                                            after_decimal: "",
                                                                                        },
                                                                                    ),
                                                                                ),
                                                                            ],
                                                                        ],
                                                                    },
                                                                ],
                                                                end: 211,
                                                            },
                                                        },
                                                    ],
                                                ],
                                            ),
                                        ],
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
                Ident(
                    [
                        Symbol(
                            "assert",
                        ),
                        Call(
                            [
                                [
                                    Ident(
                                        [
                                            Symbol(
                                                "a",
                                            ),
                                            Symbol(
                                                "[",
                                            ),
                                            Expr(
                                                [
                                                    Ident(
                                                        [
                                                            Symbol(
                                                                "NaN",
                                                            ),
                                                        ],
                                                    ),
                                                ],
                                            ),
                                            Symbol(
                                                "]",
                                            ),
                                        ],
                                    ),
                                    Operator(
                                        (
                                            "==",
                                            true,
                                        ),
                                    ),
                                    Symbol(
                                        "nil",
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
                Alter {
                    names: [
                        Ident(
                            [
                                Symbol(
                                    "a",
                                ),
                                Symbol(
                                    "[",
                                ),
                                Expr(
                                    [
                                        Number(
                                            Decimal(
                                                Decimal {
                                                    before_decimal: "1",
                                                    after_decimal: "",
                                                },
                                            ),
                                        ),
                                    ],
                                ),
                                Symbol(
                                    "]",
                                ),
                            ],
                        ),
                    ],
                    values: [
                        [
                            Number(
                                Decimal(
                                    Decimal {
                                        before_decimal: "1",
                                        after_decimal: "",
                                    },
                                ),
                            ),
                        ],
                    ],
                },
                Ident(
                    [
                        Symbol(
                            "assert",
                        ),
                        Call(
                            [
                                [
                                    Operator(
                                        (
                                            "not",
                                            false,
                                        ),
                                    ),
                                    Ident(
                                        [
                                            Symbol(
                                                "pcall",
                                            ),
                                            Call(
                                                [
                                                    [
                                                        Lambda {
                                                            args: [],
                                                            body: CodeBlock {
                                                                start: 236,
                                                                code: [
                                                                    Alter {
                                                                        names: [
                                                                            Ident(
                                                                                [
                                                                                    Symbol(
                                                                                        "a",
                                                                                    ),
                                                                                    Symbol(
                                                                                        "[",
                                                                                    ),
                                                                                    Expr(
                                                                                        [
                                                                                            Ident(
                                                                                                [
                                                                                                    Symbol(
                                                                                                        "NaN",
                                                                                                    ),
                                                                                                ],
                                                                                            ),
                                                                                        ],
                                                                                    ),
                                                                                    Symbol(
                                                                                        "]",
                                                                                    ),
                                                                                ],
                                                                            ),
                                                                        ],
                                                                        values: [
                                                                            [
                                                                                Number(
                                                                                    Decimal(
                                                                                        Decimal {
                                                                                            before_decimal: "1",
                                                                                            after_decimal: "",
                                                                                        },
                                                                                    ),
                                                                                ),
                                                                            ],
                                                                        ],
                                                                    },
                                                                ],
                                                                end: 243,
                                                            },
                                                        },
                                                    ],
                                                ],
                                            ),
                                        ],
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
                Ident(
                    [
                        Symbol(
                            "assert",
                        ),
                        Call(
                            [
                                [
                                    Ident(
                                        [
                                            Symbol(
                                                "a",
                                            ),
                                            Symbol(
                                                "[",
                                            ),
                                            Expr(
                                                [
                                                    Ident(
                                                        [
                                                            Symbol(
                                                                "NaN",
                                                            ),
                                                        ],
                                                    ),
                                                ],
                                            ),
                                            Symbol(
                                                "]",
                                            ),
                                        ],
                                    ),
                                    Operator(
                                        (
                                            "==",
                                            true,
                                        ),
                                    ),
                                    Symbol(
                                        "nil",
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
                Variable {
                    names: [
                        (
                            "a1",
                            false,
                        ),
                        (
                            "a2",
                            false,
                        ),
                        (
                            "a3",
                            false,
                        ),
                        (
                            "a4",
                            false,
                        ),
                        (
                            "a5",
                            false,
                        ),
                    ],
                    values: [
                        [
                            Number(
                                Decimal(
                                    Decimal {
                                        before_decimal: "0",
                                        after_decimal: "",
                                    },
                                ),
                            ),
                        ],
                        [
                            Number(
                                Decimal(
                                    Decimal {
                                        before_decimal: "0",
                                        after_decimal: "",
                                    },
                                ),
                            ),
                        ],
                        [
                            Symbol(
                                "\"\\0\\0\\0\\0\\0\\0\\0\\0\"",
                            ),
                        ],
                        [
                            Number(
                                Decimal(
                                    Decimal {
                                        before_decimal: "0",
                                        after_decimal: "",
                                    },
                                ),
                            ),
                        ],
                        [
                            Symbol(
                                "\"\\0\\0\\0\\0\\0\\0\\0\\0\"",
                            ),
                        ],
                    ],
                },
                Ident(
                    [
                        Symbol(
                            "assert",
                        ),
                        Call(
                            [
                                [
                                    Ident(
                                        [
                                            Symbol(
                                                "a1",
                                            ),
                                        ],
                                    ),
                                    Operator(
                                        (
                                            "==",
                                            true,
                                        ),
                                    ),
                                    Ident(
                                        [
                                            Symbol(
                                                "a2",
                                            ),
                                        ],
                                    ),
                                    Operator(
                                        (
                                            "and",
                                            true,
                                        ),
                                    ),
                                    Ident(
                                        [
                                            Symbol(
                                                "a2",
                                            ),
                                        ],
                                    ),
                                    Operator(
                                        (
                                            "==",
                                            true,
                                        ),
                                    ),
                                    Ident(
                                        [
                                            Symbol(
                                                "a4",
                                            ),
                                        ],
                                    ),
                                    Operator(
                                        (
                                            "and",
                                            true,
                                        ),
                                    ),
                                    Ident(
                                        [
                                            Symbol(
                                                "a1",
                                            ),
                                        ],
                                    ),
                                    Operator(
                                        (
                                            "~=",
                                            true,
                                        ),
                                    ),
                                    Ident(
                                        [
                                            Symbol(
                                                "a3",
                                            ),
                                        ],
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
                Ident(
                    [
                        Symbol(
                            "assert",
                        ),
                        Call(
                            [
                                [
                                    Ident(
                                        [
                                            Symbol(
                                                "a3",
                                            ),
                                        ],
                                    ),
                                    Operator(
                                        (
                                            "==",
                                            true,
                                        ),
                                    ),
                                    Ident(
                                        [
                                            Symbol(
                                                "a5",
                                            ),
                                        ],
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
            ],
            end: 2343,
        },
        next: None,
    },
    IfStatement {
        condition: [
            Operator(
                (
                    "not",
                    false,
                ),
            ),
            Ident(
                [
                    Symbol(
                        "_port",
                    ),
                ],
            ),
        ],
        body: CodeBlock {
            start: 2347,
            code: [
                Ident(
                    [
                        Symbol(
                            "print",
                        ),
                        Call(
                            [
                                [
                                    Symbol(
                                        "\"testing 'math.random'\"",
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
                Ident(
                    [
                        Symbol(
                            "math",
                        ),
                        Symbol(
                            ".",
                        ),
                        Symbol(
                            "randomseed",
                        ),
                        Call(
                            [
                                [
                                    Number(
                                        Decimal(
                                            Decimal {
                                                before_decimal: "0",
                                                after_decimal: "",
                                            },
                                        ),
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
                Function {
                    local: true,
                    name: [
                        Symbol(
                            "aux",
                        ),
                    ],
                    args: [
                        "x1",
                        "x2",
                        "p",
                    ],
                    body: CodeBlock {
                        start: 20,
                        code: [
                            Variable {
                                names: [
                                    (
                                        "Max",
                                        false,
                                    ),
                                ],
                                values: [
                                    [
                                        Operator(
                                            (
                                                "-",
                                                false,
                                            ),
                                        ),
                                        Ident(
                                            [
                                                Symbol(
                                                    "math",
                                                ),
                                                Symbol(
                                                    ".",
                                                ),
                                                Symbol(
                                                    "huge",
                                                ),
                                            ],
                                        ),
                                    ],
                                ],
                            },
                            Variable {
                                names: [
                                    (
                                        "Min",
                                        false,
                                    ),
                                ],
                                values: [
                                    [
                                        Ident(
                                            [
                                                Symbol(
                                                    "math",
                                                ),
                                                Symbol(
                                                    ".",
                                                ),
                                                Symbol(
                                                    "huge",
                                                ),
                                            ],
                                        ),
                                    ],
                                ],
                            },
                            ForLoop {
                                iter: "i",
                                start: [
                                    Number(
                                        Decimal(
                                            Decimal {
                                                before_decimal: "0",
                                                after_decimal: "",
                                            },
                                        ),
                                    ),
                                ],
                                end: [
                                    Number(
                                        Decimal(
                                            Decimal {
                                                before_decimal: "20000",
                                                after_decimal: "",
                                            },
                                        ),
                                    ),
                                ],
                                step: None,
                                code: CodeBlock {
                                    start: 20,
                                    code: [
                                        Variable {
                                            names: [
                                                (
                                                    "t",
                                                    false,
                                                ),
                                            ],
                                            values: [
                                                [
                                                    Ident(
                                                        [
                                                            Symbol(
                                                                "math",
                                                            ),
                                                            Symbol(
                                                                ".",
                                                            ),
                                                            Symbol(
                                                                "random",
                                                            ),
                                                            Call(
                                                                [
                                                                    [
                                                                        Ident(
                                                                            [
                                                                                Symbol(
                                                                                    "table",
                                                                                ),
                                                                                Symbol(
                                                                                    ".",
                                                                                ),
                                                                                Symbol(
                                                                                    "unpack",
                                                                                ),
                                                                                Call(
                                                                                    [
                                                                                        [
                                                                                            Ident(
                                                                                                [
                                                                                                    Symbol(
                                                                                                        "p",
                                                                                                    ),
                                                                                                ],
                                                                                            ),
                                                                                        ],
                                                                                    ],
                                                                                ),
                                                                            ],
                                                                        ),
                                                                    ],
                                                                ],
                                                            ),
                                                        ],
                                                    ),
                                                ],
                                            ],
                                        },
                                        Alter {
                                            names: [
                                                Ident(
                                                    [
                                                        Symbol(
                                                            "Max",
                                                        ),
                                                    ],
                                                ),
                                            ],
                                            values: [
                                                [
                                                    Ident(
                                                        [
                                                            Symbol(
                                                                "math",
                                                            ),
                                                            Symbol(
                                                                ".",
                                                            ),
                                                            Symbol(
                                                                "max",
                                                            ),
                                                            Call(
                                                                [
                                                                    [
                                                                        Ident(
                                                                            [
                                                                                Symbol(
                                                                                    "Max",
                                                                                ),
                                                                            ],
                                                                        ),
                                                                    ],
                                                                    [
                                                                        Ident(
                                                                            [
                                                                                Symbol(
                                                                                    "t",
                                                                                ),
                                                                            ],
                                                                        ),
                                                                    ],
                                                                ],
                                                            ),
                                                        ],
                                                    ),
                                                ],
                                            ],
                                        },
                                        Alter {
                                            names: [
                                                Ident(
                                                    [
                                                        Symbol(
                                                            "Min",
                                                        ),
                                                    ],
                                                ),
                                            ],
                                            values: [
                                                [
                                                    Ident(
                                                        [
                                                            Symbol(
                                                                "math",
                                                            ),
                                                            Symbol(
                                                                ".",
                                                            ),
                                                            Symbol(
                                                                "min",
                                                            ),
                                                            Call(
                                                                [
                                                                    [
                                                                        Ident(
                                                                            [
                                                                                Symbol(
                                                                                    "Min",
                                                                                ),
                                                                            ],
                                                                        ),
                                                                    ],
                                                                    [
                                                                        Ident(
                                                                            [
                                                                                Symbol(
                                                                                    "t",
                                                                                ),
                                                                            ],
                                                                        ),
                                                                    ],
                                                                ],
                                                            ),
                                                        ],
                                                    ),
                                                ],
                                            ],
                                        },
                                        IfStatement {
                                            condition: [
                                                Ident(
                                                    [
                                                        Symbol(
                                                            "eq",
                                                        ),
                                                        Call(
                                                            [
                                                                [
                                                                    Ident(
                                                                        [
                                                                            Symbol(
                                                                                "Max",
                                                                            ),
                                                                        ],
                                                                    ),
                                                                ],
                                                                [
                                                                    Ident(
                                                                        [
                                                                            Symbol(
                                                                                "x2",
                                                                            ),
                                                                        ],
                                                                    ),
                                                                ],
                                                                [
                                                                    Number(
                                                                        Decimal(
                                                                            Decimal {
                                                                                before_decimal: "0",
                                                                                after_decimal: ".001",
                                                                            },
                                                                        ),
                                                                    ),
                                                                ],
                                                            ],
                                                        ),
                                                    ],
                                                ),
                                                Operator(
                                                    (
                                                        "and",
                                                        true,
                                                    ),
                                                ),
                                                Ident(
                                                    [
                                                        Symbol(
                                                            "eq",
                                                        ),
                                                        Call(
                                                            [
                                                                [
                                                                    Ident(
                                                                        [
                                                                            Symbol(
                                                                                "Min",
                                                                            ),
                                                                        ],
                                                                    ),
                                                                ],
                                                                [
                                                                    Ident(
                                                                        [
                                                                            Symbol(
                                                                                "x1",
                                                                            ),
                                                                        ],
                                                                    ),
                                                                ],
                                                                [
                                                                    Number(
                                                                        Decimal(
                                                                            Decimal {
                                                                                before_decimal: "0",
                                                                                after_decimal: ".001",
                                                                            },
                                                                        ),
                                                                    ),
                                                                ],
                                                            ],
                                                        ),
                                                    ],
                                                ),
                                            ],
                                            body: CodeBlock {
                                                start: 53,
                                                code: [],
                                                end: 54,
                                            },
                                            next: None,
                                        },
                                    ],
                                    end: 75,
                                },
                            },
                            Ident(
                                [
                                    Symbol(
                                        "assert",
                                    ),
                                    Call(
                                        [
                                            [
                                                Symbol(
                                                    "false",
                                                ),
                                            ],
                                        ],
                                    ),
                                ],
                            ),
                            Ident(
                                [
                                    Symbol(
                                        "assert",
                                    ),
                                    Call(
                                        [
                                            [
                                                Ident(
                                                    [
                                                        Symbol(
                                                            "x1",
                                                        ),
                                                    ],
                                                ),
                                                Operator(
                                                    (
                                                        "<=",
                                                        true,
                                                    ),
                                                ),
                                                Ident(
                                                    [
                                                        Symbol(
                                                            "Min",
                                                        ),
                                                    ],
                                                ),
                                                Operator(
                                                    (
                                                        "and",
                                                        true,
                                                    ),
                                                ),
                                                Ident(
                                                    [
                                                        Symbol(
                                                            "Max",
                                                        ),
                                                    ],
                                                ),
                                                Operator(
                                                    (
                                                        "<=",
                                                        true,
                                                    ),
                                                ),
                                                Ident(
                                                    [
                                                        Symbol(
                                                            "x2",
                                                        ),
                                                    ],
                                                ),
                                            ],
                                        ],
                                    ),
                                ],
                            ),
                        ],
                        end: 110,
                    },
                },
                Ident(
                    [
                        Symbol(
                            "aux",
                        ),
                        Call(
                            [
                                [
                                    Number(
                                        Decimal(
                                            Decimal {
                                                before_decimal: "0",
                                                after_decimal: "",
                                            },
                                        ),
                                    ),
                                ],
                                [
                                    Number(
                                        Decimal(
                                            Decimal {
                                                before_decimal: "1",
                                                after_decimal: "",
                                            },
                                        ),
                                    ),
                                ],
                                [
                                    Table(
                                        [],
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
                Ident(
                    [
                        Symbol(
                            "aux",
                        ),
                        Call(
                            [
                                [
                                    Operator(
                                        (
                                            "-",
                                            false,
                                        ),
                                    ),
                                    Number(
                                        Decimal(
                                            Decimal {
                                                before_decimal: "10",
                                                after_decimal: "",
                                            },
                                        ),
                                    ),
                                ],
                                [
                                    Number(
                                        Decimal(
                                            Decimal {
                                                before_decimal: "0",
                                                after_decimal: "",
                                            },
                                        ),
                                    ),
                                ],
                                [
                                    Table(
                                        [
                                            (
                                                None,
                                                [
                                                    Operator(
                                                        (
                                                            "-",
                                                            false,
                                                        ),
                                                    ),
                                                    Number(
                                                        Decimal(
                                                            Decimal {
                                                                before_decimal: "10",
                                                                after_decimal: "",
                                                            },
                                                        ),
                                                    ),
                                                ],
                                            ),
                                            (
                                                None,
                                                [
                                                    Number(
                                                        Decimal(
                                                            Decimal {
                                                                before_decimal: "0",
                                                                after_decimal: "",
                                                            },
                                                        ),
                                                    ),
                                                ],
                                            ),
                                        ],
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
            ],
            end: 2481,
        },
        next: None,
    },
    ForLoop {
        iter: "i",
        start: [
            Number(
                Decimal(
                    Decimal {
                        before_decimal: "1",
                        after_decimal: "",
                    },
                ),
            ),
        ],
        end: [
            Number(
                Decimal(
                    Decimal {
                        before_decimal: "10",
                        after_decimal: "",
                    },
                ),
            ),
        ],
        step: None,
        code: CodeBlock {
            start: 2488,
            code: [
                Variable {
                    names: [
                        (
                            "t",
                            false,
                        ),
                    ],
                    values: [
                        [
                            Ident(
                                [
                                    Symbol(
                                        "math",
                                    ),
                                    Symbol(
                                        ".",
                                    ),
                                    Symbol(
                                        "random",
                                    ),
                                    Call(
                                        [
                                            [
                                                Number(
                                                    Decimal(
                                                        Decimal {
                                                            before_decimal: "5",
                                                            after_decimal: "",
                                                        },
                                                    ),
                                                ),
                                            ],
                                        ],
                                    ),
                                ],
                            ),
                        ],
                    ],
                },
                Ident(
                    [
                        Symbol(
                            "assert",
                        ),
                        Call(
                            [
                                [
                                    Number(
                                        Decimal(
                                            Decimal {
                                                before_decimal: "1",
                                                after_decimal: "",
                                            },
                                        ),
                                    ),
                                    Operator(
                                        (
                                            "<=",
                                            true,
                                        ),
                                    ),
                                    Ident(
                                        [
                                            Symbol(
                                                "t",
                                            ),
                                        ],
                                    ),
                                    Operator(
                                        (
                                            "and",
                                            true,
                                        ),
                                    ),
                                    Ident(
                                        [
                                            Symbol(
                                                "t",
                                            ),
                                        ],
                                    ),
                                    Operator(
                                        (
                                            "<=",
                                            true,
                                        ),
                                    ),
                                    Number(
                                        Decimal(
                                            Decimal {
                                                before_decimal: "5",
                                                after_decimal: "",
                                            },
                                        ),
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
            ],
            end: 2508,
        },
    },
    Ident(
        [
            Symbol(
                "print",
            ),
            Call(
                [
                    [
                        Symbol(
                            "'OK'",
                        ),
                    ],
                ],
            ),
        ],
    ),
]
