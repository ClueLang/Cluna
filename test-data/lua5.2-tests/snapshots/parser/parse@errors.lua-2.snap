---
source: src/main.rs
expression: parsed
input_file: test-data/lua5.2-tests/errors.lua
---
[
    Ident(
        [
            Symbol(
                "print",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"testing errors\"",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Variable {
        names: [
            (
                "debug",
                false,
            ),
        ],
        values: [
            [
                Ident(
                    [
                        Symbol(
                            "require",
                        ),
                        Call(
                            [
                                [
                                    Symbol(
                                        "\"debug\"",
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
            ],
        ],
    },
    Variable {
        names: [
            (
                "mt",
                false,
            ),
        ],
        values: [
            [
                Ident(
                    [
                        Symbol(
                            "getmetatable",
                        ),
                        Call(
                            [
                                [
                                    Ident(
                                        [
                                            Symbol(
                                                "_G",
                                            ),
                                        ],
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
                Operator(
                    (
                        "or",
                        true,
                    ),
                ),
                Table(
                    [],
                ),
            ],
        ],
    },
    Variable {
        names: [
            (
                "oldmm",
                false,
            ),
        ],
        values: [
            [
                Ident(
                    [
                        Symbol(
                            "mt",
                        ),
                        Symbol(
                            ".",
                        ),
                        Symbol(
                            "__index",
                        ),
                    ],
                ),
            ],
        ],
    },
    Alter {
        names: [
            Ident(
                [
                    Symbol(
                        "mt",
                    ),
                    Symbol(
                        ".",
                    ),
                    Symbol(
                        "__index",
                    ),
                ],
            ),
        ],
        values: [
            [
                Symbol(
                    "nil",
                ),
            ],
        ],
    },
    Function {
        local: false,
        name: [
            Symbol(
                "doit",
            ),
        ],
        args: [
            "s",
        ],
        body: CodeBlock {
            start: 35,
            code: [
                Variable {
                    names: [
                        (
                            "f",
                            false,
                        ),
                        (
                            "msg",
                            false,
                        ),
                    ],
                    values: [
                        [
                            Ident(
                                [
                                    Symbol(
                                        "load",
                                    ),
                                    Call(
                                        [
                                            [
                                                Ident(
                                                    [
                                                        Symbol(
                                                            "s",
                                                        ),
                                                    ],
                                                ),
                                            ],
                                        ],
                                    ),
                                ],
                            ),
                        ],
                    ],
                },
                IfStatement {
                    condition: [
                        Ident(
                            [
                                Symbol(
                                    "f",
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Symbol(
                            "nil",
                        ),
                    ],
                    body: CodeBlock {
                        start: 14,
                        code: [
                            Return(
                                Some(
                                    [
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "msg",
                                                    ),
                                                ],
                                            ),
                                        ],
                                    ],
                                ),
                            ),
                        ],
                        end: 17,
                    },
                    next: None,
                },
                Variable {
                    names: [
                        (
                            "cond",
                            false,
                        ),
                        (
                            "msg",
                            false,
                        ),
                    ],
                    values: [
                        [
                            Ident(
                                [
                                    Symbol(
                                        "pcall",
                                    ),
                                    Call(
                                        [
                                            [
                                                Ident(
                                                    [
                                                        Symbol(
                                                            "f",
                                                        ),
                                                    ],
                                                ),
                                            ],
                                        ],
                                    ),
                                ],
                            ),
                        ],
                    ],
                },
                Return(
                    Some(
                        [
                            [
                                Expr(
                                    [
                                        Operator(
                                            (
                                                "not",
                                                false,
                                            ),
                                        ),
                                        Ident(
                                            [
                                                Symbol(
                                                    "cond",
                                                ),
                                            ],
                                        ),
                                    ],
                                ),
                                Ident(
                                    [],
                                ),
                                Operator(
                                    (
                                        "and",
                                        true,
                                    ),
                                ),
                                Ident(
                                    [
                                        Symbol(
                                            "msg",
                                        ),
                                    ],
                                ),
                            ],
                        ],
                    ),
                ),
            ],
            end: 69,
        },
    },
    Function {
        local: false,
        name: [
            Symbol(
                "checkmessage",
            ),
        ],
        args: [
            "prog",
            "msg",
        ],
        body: CodeBlock {
            start: 76,
            code: [
                Variable {
                    names: [
                        (
                            "m",
                            false,
                        ),
                    ],
                    values: [
                        [
                            Ident(
                                [
                                    Symbol(
                                        "doit",
                                    ),
                                    Call(
                                        [
                                            [
                                                Ident(
                                                    [
                                                        Symbol(
                                                            "prog",
                                                        ),
                                                    ],
                                                ),
                                            ],
                                        ],
                                    ),
                                ],
                            ),
                        ],
                    ],
                },
                Ident(
                    [
                        Symbol(
                            "assert",
                        ),
                        Call(
                            [
                                [
                                    Ident(
                                        [
                                            Symbol(
                                                "string",
                                            ),
                                            Symbol(
                                                ".",
                                            ),
                                            Symbol(
                                                "find",
                                            ),
                                            Call(
                                                [
                                                    [
                                                        Ident(
                                                            [
                                                                Symbol(
                                                                    "m",
                                                                ),
                                                            ],
                                                        ),
                                                    ],
                                                    [
                                                        Ident(
                                                            [
                                                                Symbol(
                                                                    "msg",
                                                                ),
                                                            ],
                                                        ),
                                                    ],
                                                    [
                                                        Number(
                                                            Decimal(
                                                                Decimal {
                                                                    before_decimal: "1",
                                                                    after_decimal: "",
                                                                },
                                                            ),
                                                        ),
                                                    ],
                                                    [
                                                        Symbol(
                                                            "true",
                                                        ),
                                                    ],
                                                ],
                                            ),
                                        ],
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
            ],
            end: 99,
        },
    },
    Function {
        local: false,
        name: [
            Symbol(
                "checksyntax",
            ),
        ],
        args: [
            "prog",
            "extra",
            "token",
            "line",
        ],
        body: CodeBlock {
            start: 110,
            code: [
                Variable {
                    names: [
                        (
                            "msg",
                            false,
                        ),
                    ],
                    values: [
                        [
                            Ident(
                                [
                                    Symbol(
                                        "doit",
                                    ),
                                    Call(
                                        [
                                            [
                                                Ident(
                                                    [
                                                        Symbol(
                                                            "prog",
                                                        ),
                                                    ],
                                                ),
                                            ],
                                        ],
                                    ),
                                ],
                            ),
                        ],
                    ],
                },
                IfStatement {
                    condition: [
                        Operator(
                            (
                                "not",
                                false,
                            ),
                        ),
                        Ident(
                            [
                                Symbol(
                                    "string",
                                ),
                                Symbol(
                                    ".",
                                ),
                                Symbol(
                                    "find",
                                ),
                                Call(
                                    [
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "token",
                                                    ),
                                                ],
                                            ),
                                        ],
                                        [
                                            Symbol(
                                                "\"^<%a\"",
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "and",
                                true,
                            ),
                        ),
                        Operator(
                            (
                                "not",
                                false,
                            ),
                        ),
                        Ident(
                            [
                                Symbol(
                                    "string",
                                ),
                                Symbol(
                                    ".",
                                ),
                                Symbol(
                                    "find",
                                ),
                                Call(
                                    [
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "token",
                                                    ),
                                                ],
                                            ),
                                        ],
                                        [
                                            Symbol(
                                                "\"^char%(\"",
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                    ],
                    body: CodeBlock {
                        start: 28,
                        code: [
                            Alter {
                                names: [
                                    Ident(
                                        [
                                            Symbol(
                                                "token",
                                            ),
                                        ],
                                    ),
                                ],
                                values: [
                                    [
                                        Symbol(
                                            "\"'\"",
                                        ),
                                        Operator(
                                            (
                                                "..",
                                                true,
                                            ),
                                        ),
                                        Ident(
                                            [
                                                Symbol(
                                                    "token",
                                                ),
                                            ],
                                        ),
                                        Operator(
                                            (
                                                "..",
                                                true,
                                            ),
                                        ),
                                        Symbol(
                                            "\"'\"",
                                        ),
                                    ],
                                ],
                            },
                        ],
                        end: 36,
                    },
                    next: None,
                },
                Alter {
                    names: [
                        Ident(
                            [
                                Symbol(
                                    "token",
                                ),
                            ],
                        ),
                    ],
                    values: [
                        [
                            Ident(
                                [
                                    Symbol(
                                        "string",
                                    ),
                                    Symbol(
                                        ".",
                                    ),
                                    Symbol(
                                        "gsub",
                                    ),
                                    Call(
                                        [
                                            [
                                                Ident(
                                                    [
                                                        Symbol(
                                                            "token",
                                                        ),
                                                    ],
                                                ),
                                            ],
                                            [
                                                Symbol(
                                                    "\"(%p)\"",
                                                ),
                                            ],
                                            [
                                                Symbol(
                                                    "\"%%%1\"",
                                                ),
                                            ],
                                        ],
                                    ),
                                ],
                            ),
                        ],
                    ],
                },
                Variable {
                    names: [
                        (
                            "pt",
                            false,
                        ),
                    ],
                    values: [
                        [
                            Ident(
                                [
                                    Symbol(
                                        "string",
                                    ),
                                    Symbol(
                                        ".",
                                    ),
                                    Symbol(
                                        "format",
                                    ),
                                    Call(
                                        [
                                            [
                                                MultilineString(
                                                    "[[^%%[string \".*\"%%]:%d: .- near %s$]]",
                                                ),
                                            ],
                                            [
                                                Ident(
                                                    [
                                                        Symbol(
                                                            "line",
                                                        ),
                                                    ],
                                                ),
                                            ],
                                            [
                                                Ident(
                                                    [
                                                        Symbol(
                                                            "token",
                                                        ),
                                                    ],
                                                ),
                                            ],
                                        ],
                                    ),
                                ],
                            ),
                        ],
                    ],
                },
                Ident(
                    [
                        Symbol(
                            "assert",
                        ),
                        Call(
                            [
                                [
                                    Ident(
                                        [
                                            Symbol(
                                                "string",
                                            ),
                                            Symbol(
                                                ".",
                                            ),
                                            Symbol(
                                                "find",
                                            ),
                                            Call(
                                                [
                                                    [
                                                        Ident(
                                                            [
                                                                Symbol(
                                                                    "msg",
                                                                ),
                                                            ],
                                                        ),
                                                    ],
                                                    [
                                                        Ident(
                                                            [
                                                                Symbol(
                                                                    "pt",
                                                                ),
                                                            ],
                                                        ),
                                                    ],
                                                ],
                                            ),
                                        ],
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
                Ident(
                    [
                        Symbol(
                            "assert",
                        ),
                        Call(
                            [
                                [
                                    Ident(
                                        [
                                            Symbol(
                                                "string",
                                            ),
                                            Symbol(
                                                ".",
                                            ),
                                            Symbol(
                                                "find",
                                            ),
                                            Call(
                                                [
                                                    [
                                                        Ident(
                                                            [
                                                                Symbol(
                                                                    "msg",
                                                                ),
                                                            ],
                                                        ),
                                                    ],
                                                    [
                                                        Ident(
                                                            [
                                                                Symbol(
                                                                    "msg",
                                                                ),
                                                            ],
                                                        ),
                                                    ],
                                                    [
                                                        Number(
                                                            Decimal(
                                                                Decimal {
                                                                    before_decimal: "1",
                                                                    after_decimal: "",
                                                                },
                                                            ),
                                                        ),
                                                    ],
                                                    [
                                                        Symbol(
                                                            "true",
                                                        ),
                                                    ],
                                                ],
                                            ),
                                        ],
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
            ],
            end: 198,
        },
    },
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "doit",
                                ),
                                Call(
                                    [
                                        [
                                            Symbol(
                                                "\"error('hi', 0)\"",
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Symbol(
                            "'hi'",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "doit",
                                ),
                                Call(
                                    [
                                        [
                                            Symbol(
                                                "\"error()\"",
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Symbol(
                            "nil",
                        ),
                    ],
                ],
            ),
        ],
    ),
    IfStatement {
        condition: [
            Operator(
                (
                    "not",
                    false,
                ),
            ),
            Ident(
                [
                    Symbol(
                        "_no32",
                    ),
                ],
            ),
        ],
        body: CodeBlock {
            start: 220,
            code: [
                Ident(
                    [
                        Symbol(
                            "assert",
                        ),
                        Call(
                            [
                                [
                                    Ident(
                                        [
                                            Symbol(
                                                "doit",
                                            ),
                                            Call(
                                                [
                                                    [
                                                        Symbol(
                                                            "\"table.unpack({}, 1, n=2^30)\"",
                                                        ),
                                                    ],
                                                ],
                                            ),
                                        ],
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
            ],
            end: 228,
        },
        next: None,
    },
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "doit",
                                ),
                                Call(
                                    [
                                        [
                                            Symbol(
                                                "\"a=math.sin()\"",
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Operator(
                            (
                                "not",
                                false,
                            ),
                        ),
                        Ident(
                            [
                                Symbol(
                                    "doit",
                                ),
                                Call(
                                    [
                                        [
                                            Symbol(
                                                "\"tostring(1)\"",
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "and",
                                true,
                            ),
                        ),
                        Ident(
                            [
                                Symbol(
                                    "doit",
                                ),
                                Call(
                                    [
                                        [
                                            Symbol(
                                                "\"tostring()\"",
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "doit",
                                ),
                                Call(
                                    [
                                        [
                                            Symbol(
                                                "\"tonumber()\"",
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "doit",
                                ),
                                Call(
                                    [
                                        [
                                            Symbol(
                                                "\"repeat until 1; a\"",
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "doit",
                                ),
                                Call(
                                    [
                                        [
                                            Symbol(
                                                "\"return;;\"",
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "doit",
                                ),
                                Call(
                                    [
                                        [
                                            Symbol(
                                                "\"assert(false)\"",
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "doit",
                                ),
                                Call(
                                    [
                                        [
                                            Symbol(
                                                "\"assert(nil)\"",
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "doit",
                                ),
                                Call(
                                    [
                                        [
                                            Symbol(
                                                "\"function a (... , ...) end\"",
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "doit",
                                ),
                                Call(
                                    [
                                        [
                                            Symbol(
                                                "\"function a (, ...) end\"",
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "doit",
                                ),
                                Call(
                                    [
                                        [
                                            Symbol(
                                                "\"local t={}; t = t[#t] + 1\"",
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "checksyntax",
            ),
            Call(
                [
                    [
                        MultilineString(
                            "[[\n  local a = {4\n\n]]",
                        ),
                    ],
                    [
                        Symbol(
                            "\"'}' expected (to close '{' at line 1)\"",
                        ),
                    ],
                    [
                        Symbol(
                            "\"<eof>\"",
                        ),
                    ],
                    [
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "3",
                                    after_decimal: "",
                                },
                            ),
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "checkmessage",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"a=1; bbbb=2; a=math.sin(3)+bbbb(3)\"",
                        ),
                    ],
                    [
                        Symbol(
                            "\"global 'bbbb'\"",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "checkmessage",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"a=1; local a,bbbb=2,3; a = math.sin(1) and bbbb(3)\"",
                        ),
                    ],
                    [
                        Symbol(
                            "\"local 'bbbb'\"",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "checkmessage",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"a={}; do local a=1 end a:bbbb(3)\"",
                        ),
                    ],
                    [
                        Symbol(
                            "\"method 'bbbb'\"",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "checkmessage",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"local a={}; a.bbbb(3)\"",
                        ),
                    ],
                    [
                        Symbol(
                            "\"field 'bbbb'\"",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Operator(
                            (
                                "not",
                                false,
                            ),
                        ),
                        Ident(
                            [
                                Symbol(
                                    "string",
                                ),
                                Symbol(
                                    ".",
                                ),
                                Symbol(
                                    "find",
                                ),
                                Call(
                                    [
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "doit",
                                                    ),
                                                    Call(
                                                        [
                                                            [
                                                                Symbol(
                                                                    "\"a={13}; local bbbb=1; a[bbbb](3)\"",
                                                                ),
                                                            ],
                                                        ],
                                                    ),
                                                ],
                                            ),
                                        ],
                                        [
                                            Symbol(
                                                "\"'bbbb'\"",
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "checkmessage",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"a={13}; local bbbb=1; a[bbbb](3)\"",
                        ),
                    ],
                    [
                        Symbol(
                            "\"number\"",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "checkmessage",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"a=(1)..{}\"",
                        ),
                    ],
                    [
                        Symbol(
                            "\"a table value\"",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Alter {
        names: [
            Ident(
                [
                    Symbol(
                        "aaa",
                    ),
                ],
            ),
        ],
        values: [
            [
                Symbol(
                    "nil",
                ),
            ],
        ],
    },
    Ident(
        [
            Symbol(
                "checkmessage",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"aaa.bbb:ddd(9)\"",
                        ),
                    ],
                    [
                        Symbol(
                            "\"global 'aaa'\"",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "checkmessage",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"local aaa={bbb=1}; aaa.bbb:ddd(9)\"",
                        ),
                    ],
                    [
                        Symbol(
                            "\"field 'bbb'\"",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "checkmessage",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"local aaa={bbb={}}; aaa.bbb:ddd(9)\"",
                        ),
                    ],
                    [
                        Symbol(
                            "\"method 'ddd'\"",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "checkmessage",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"local a,b,c; (function () a = b+1 end)()\"",
                        ),
                    ],
                    [
                        Symbol(
                            "\"upvalue 'b'\"",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Operator(
                            (
                                "not",
                                false,
                            ),
                        ),
                        Ident(
                            [
                                Symbol(
                                    "doit",
                                ),
                                Call(
                                    [
                                        [
                                            Symbol(
                                                "\"local aaa={bbb={ddd=next}}; aaa.bbb:ddd(nil)\"",
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "checkmessage",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"local _ENV = {x={}}; a = a + 1\"",
                        ),
                    ],
                    [
                        Symbol(
                            "\"global 'a'\"",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "checkmessage",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"b=1; local aaa='a'; x=aaa+b\"",
                        ),
                    ],
                    [
                        Symbol(
                            "\"local 'aaa'\"",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "checkmessage",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"aaa={}; x=3/aaa\"",
                        ),
                    ],
                    [
                        Symbol(
                            "\"global 'aaa'\"",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "checkmessage",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"aaa='2'; b=nil;x=aaa*b\"",
                        ),
                    ],
                    [
                        Symbol(
                            "\"global 'b'\"",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "checkmessage",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"aaa={}; x=-aaa\"",
                        ),
                    ],
                    [
                        Symbol(
                            "\"global 'aaa'\"",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Operator(
                            (
                                "not",
                                false,
                            ),
                        ),
                        Ident(
                            [
                                Symbol(
                                    "string",
                                ),
                                Symbol(
                                    ".",
                                ),
                                Symbol(
                                    "find",
                                ),
                                Call(
                                    [
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "doit",
                                                    ),
                                                    Call(
                                                        [
                                                            [
                                                                Symbol(
                                                                    "\"aaa={}; x=(aaa or aaa)+(aaa and aaa)\"",
                                                                ),
                                                            ],
                                                        ],
                                                    ),
                                                ],
                                            ),
                                        ],
                                        [
                                            Symbol(
                                                "\"'aaa'\"",
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Operator(
                            (
                                "not",
                                false,
                            ),
                        ),
                        Ident(
                            [
                                Symbol(
                                    "string",
                                ),
                                Symbol(
                                    ".",
                                ),
                                Symbol(
                                    "find",
                                ),
                                Call(
                                    [
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "doit",
                                                    ),
                                                    Call(
                                                        [
                                                            [
                                                                Symbol(
                                                                    "\"aaa={}; (aaa or aaa)()\"",
                                                                ),
                                                            ],
                                                        ],
                                                    ),
                                                ],
                                            ),
                                        ],
                                        [
                                            Symbol(
                                                "\"'aaa'\"",
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "checkmessage",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"print(print < 10)\"",
                        ),
                    ],
                    [
                        Symbol(
                            "\"function\"",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "checkmessage",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"print(print < print)\"",
                        ),
                    ],
                    [
                        Symbol(
                            "\"two function\"",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Alter {
        names: [
            Ident(
                [
                    Symbol(
                        "_G",
                    ),
                    Symbol(
                        ".",
                    ),
                    Symbol(
                        "D",
                    ),
                ],
            ),
        ],
        values: [
            [
                Ident(
                    [
                        Symbol(
                            "debug",
                        ),
                    ],
                ),
            ],
        ],
    },
    Ident(
        [
            Symbol(
                "checkmessage",
            ),
            Call(
                [
                    [
                        MultilineString(
                            "[[\n  -- create light udata\n  local x = D.upvalueid(function () return debug end, 1)\n  D.setuservalue(x, {})\n]]",
                        ),
                    ],
                    [
                        Symbol(
                            "\"light userdata\"",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Alter {
        names: [
            Ident(
                [
                    Symbol(
                        "_G",
                    ),
                    Symbol(
                        ".",
                    ),
                    Symbol(
                        "D",
                    ),
                ],
            ),
        ],
        values: [
            [
                Symbol(
                    "nil",
                ),
            ],
        ],
    },
    Ident(
        [
            Symbol(
                "checkmessage",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"(io.write or print){}\"",
                        ),
                    ],
                    [
                        Symbol(
                            "\"io.write\"",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "checkmessage",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"(collectgarbage or print){}\"",
                        ),
                    ],
                    [
                        Symbol(
                            "\"collectgarbage\"",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Variable {
        names: [
            (
                "t",
                false,
            ),
        ],
        values: [
            [
                Table(
                    [],
                ),
            ],
        ],
    },
    ForLoop {
        iter: "i",
        start: [
            Number(
                Decimal(
                    Decimal {
                        before_decimal: "1",
                        after_decimal: "",
                    },
                ),
            ),
        ],
        end: [
            Number(
                Decimal(
                    Decimal {
                        before_decimal: "1000",
                        after_decimal: "",
                    },
                ),
            ),
        ],
        step: None,
        code: CodeBlock {
            start: 494,
            code: [
                Alter {
                    names: [
                        Ident(
                            [
                                Symbol(
                                    "t",
                                ),
                                Symbol(
                                    "[",
                                ),
                                Expr(
                                    [
                                        Ident(
                                            [
                                                Symbol(
                                                    "i",
                                                ),
                                            ],
                                        ),
                                    ],
                                ),
                                Symbol(
                                    "]",
                                ),
                            ],
                        ),
                    ],
                    values: [
                        [
                            Symbol(
                                "\"a = x\"",
                            ),
                            Operator(
                                (
                                    "..",
                                    true,
                                ),
                            ),
                            Ident(
                                [
                                    Symbol(
                                        "i",
                                    ),
                                ],
                            ),
                        ],
                    ],
                },
            ],
            end: 503,
        },
    },
    Variable {
        names: [
            (
                "s",
                false,
            ),
        ],
        values: [
            [
                Ident(
                    [
                        Symbol(
                            "table",
                        ),
                        Symbol(
                            ".",
                        ),
                        Symbol(
                            "concat",
                        ),
                        Call(
                            [
                                [
                                    Ident(
                                        [
                                            Symbol(
                                                "t",
                                            ),
                                        ],
                                    ),
                                ],
                                [
                                    Symbol(
                                        "\"; \"",
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
            ],
        ],
    },
    Alter {
        names: [
            Ident(
                [
                    Symbol(
                        "t",
                    ),
                ],
            ),
        ],
        values: [
            [
                Symbol(
                    "nil",
                ),
            ],
        ],
    },
    Ident(
        [
            Symbol(
                "checkmessage",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "s",
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "..",
                                true,
                            ),
                        ),
                        Symbol(
                            "\"; a = bbb + 1\"",
                        ),
                    ],
                    [
                        Symbol(
                            "\"global 'bbb'\"",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "checkmessage",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"local _ENV=_ENV;\"",
                        ),
                        Operator(
                            (
                                "..",
                                true,
                            ),
                        ),
                        Ident(
                            [
                                Symbol(
                                    "s",
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "..",
                                true,
                            ),
                        ),
                        Symbol(
                            "\"; a = bbb + 1\"",
                        ),
                    ],
                    [
                        Symbol(
                            "\"global 'bbb'\"",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "checkmessage",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "s",
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "..",
                                true,
                            ),
                        ),
                        Symbol(
                            "\"; local t = {}; a = t.bbb + 1\"",
                        ),
                    ],
                    [
                        Symbol(
                            "\"field 'bbb'\"",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "checkmessage",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "s",
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "..",
                                true,
                            ),
                        ),
                        Symbol(
                            "\"; local t = {}; t:bbb()\"",
                        ),
                    ],
                    [
                        Symbol(
                            "\"method 'bbb'\"",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "checkmessage",
            ),
            Call(
                [
                    [
                        MultilineString(
                            "[[aaa=9\nrepeat until 3==3\nlocal x=math.sin(math.cos(3))\nif math.sin(1) == x then return math.sin(1) end   -- tail call\nlocal a,b = 1, {\n  {x='a'..'b'..'c', y='b', z=x},\n  {1,2,3,4,5} or 3+3<=3+3,\n  3+1>3+1,\n  {d = x and aaa[x or y]}}\n]]",
                        ),
                    ],
                    [
                        Symbol(
                            "\"global 'aaa'\"",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "checkmessage",
            ),
            Call(
                [
                    [
                        MultilineString(
                            "[[\nlocal x,y = {},1\nif math.sin(1) == 0 then return 3 end    -- return\nx.a()]]",
                        ),
                    ],
                    [
                        Symbol(
                            "\"field 'a'\"",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "checkmessage",
            ),
            Call(
                [
                    [
                        MultilineString(
                            "[[\nprefix = nil\ninsert = nil\nwhile 1 do\n  local a\n  if nil then break end\n  insert(prefix, a)\nend]]",
                        ),
                    ],
                    [
                        Symbol(
                            "\"global 'insert'\"",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "checkmessage",
            ),
            Call(
                [
                    [
                        MultilineString(
                            "[[  -- tail call\n  return math.sin(\"a\")\n]]",
                        ),
                    ],
                    [
                        Symbol(
                            "\"'sin'\"",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "checkmessage",
            ),
            Call(
                [
                    [
                        MultilineString(
                            "[[collectgarbage(\"nooption\")]]",
                        ),
                    ],
                    [
                        Symbol(
                            "\"invalid option\"",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "checkmessage",
            ),
            Call(
                [
                    [
                        MultilineString(
                            "[[x = print .. \"a\"]]",
                        ),
                    ],
                    [
                        Symbol(
                            "\"concatenate\"",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "checkmessage",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"getmetatable(io.stdin).__gc()\"",
                        ),
                    ],
                    [
                        Symbol(
                            "\"no value\"",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "checkmessage",
            ),
            Call(
                [
                    [
                        MultilineString(
                            "[[\nlocal Var\nlocal function main()\n  NoSuchName (function() Var=0 end)\nend\nmain()\n]]",
                        ),
                    ],
                    [
                        Symbol(
                            "\"global 'NoSuchName'\"",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "print",
            ),
            Call(
                [
                    [
                        Symbol(
                            "'+'",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Alter {
        names: [
            Ident(
                [
                    Symbol(
                        "a",
                    ),
                ],
            ),
        ],
        values: [
            [
                Table(
                    [],
                ),
            ],
        ],
    },
    Ident(
        [
            Symbol(
                "setmetatable",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "a",
                                ),
                            ],
                        ),
                    ],
                    [
                        Table(
                            [
                                (
                                    Some(
                                        [
                                            Symbol(
                                                "__index",
                                            ),
                                        ],
                                    ),
                                    [
                                        Ident(
                                            [
                                                Symbol(
                                                    "string",
                                                ),
                                            ],
                                        ),
                                    ],
                                ),
                            ],
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "checkmessage",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"a:sub()\"",
                        ),
                    ],
                    [
                        Symbol(
                            "\"bad self\"",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "checkmessage",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"string.sub('a', {})\"",
                        ),
                    ],
                    [
                        Symbol(
                            "\"#2\"",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "checkmessage",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"('a'):sub{}\"",
                        ),
                    ],
                    [
                        Symbol(
                            "\"#1\"",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "checkmessage",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"table.sort({1,2,3}, table.sort)\"",
                        ),
                    ],
                    [
                        Symbol(
                            "\"'table.sort'\"",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "checkmessage",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"string.gsub('s', 's', setmetatable)\"",
                        ),
                    ],
                    [
                        Symbol(
                            "\"setmetatable'\"",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Function {
        local: false,
        name: [
            Symbol(
                "f",
            ),
        ],
        args: [
            "n",
        ],
        body: CodeBlock {
            start: 651,
            code: [
                Variable {
                    names: [
                        (
                            "c",
                            false,
                        ),
                    ],
                    values: [
                        [
                            Ident(
                                [
                                    Symbol(
                                        "coroutine",
                                    ),
                                    Symbol(
                                        ".",
                                    ),
                                    Symbol(
                                        "create",
                                    ),
                                    Call(
                                        [
                                            [
                                                Ident(
                                                    [
                                                        Symbol(
                                                            "f",
                                                        ),
                                                    ],
                                                ),
                                            ],
                                        ],
                                    ),
                                ],
                            ),
                        ],
                    ],
                },
                Variable {
                    names: [
                        (
                            "a",
                            false,
                        ),
                        (
                            "b",
                            false,
                        ),
                    ],
                    values: [
                        [
                            Ident(
                                [
                                    Symbol(
                                        "coroutine",
                                    ),
                                    Symbol(
                                        ".",
                                    ),
                                    Symbol(
                                        "resume",
                                    ),
                                    Call(
                                        [
                                            [
                                                Ident(
                                                    [
                                                        Symbol(
                                                            "c",
                                                        ),
                                                    ],
                                                ),
                                            ],
                                        ],
                                    ),
                                ],
                            ),
                        ],
                    ],
                },
                Return(
                    Some(
                        [
                            [
                                Ident(
                                    [
                                        Symbol(
                                            "b",
                                        ),
                                    ],
                                ),
                            ],
                        ],
                    ),
                ),
            ],
            end: 674,
        },
    },
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "string",
                                ),
                                Symbol(
                                    ".",
                                ),
                                Symbol(
                                    "find",
                                ),
                                Call(
                                    [
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "f",
                                                    ),
                                                    Call(
                                                        [],
                                                    ),
                                                ],
                                            ),
                                        ],
                                        [
                                            Symbol(
                                                "\"C stack overflow\"",
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "checkmessage",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"coroutine.yield()\"",
                        ),
                    ],
                    [
                        Symbol(
                            "\"outside a coroutine\"",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Alter {
        names: [
            Ident(
                [
                    Symbol(
                        "f1",
                    ),
                ],
            ),
        ],
        values: [
            [
                Lambda {
                    args: [],
                    body: CodeBlock {
                        start: 698,
                        code: [
                            Ident(
                                [
                                    Symbol(
                                        "table",
                                    ),
                                    Symbol(
                                        ".",
                                    ),
                                    Symbol(
                                        "sort",
                                    ),
                                    Call(
                                        [
                                            [
                                                Table(
                                                    [
                                                        (
                                                            None,
                                                            [
                                                                Number(
                                                                    Decimal(
                                                                        Decimal {
                                                                            before_decimal: "1",
                                                                            after_decimal: "",
                                                                        },
                                                                    ),
                                                                ),
                                                            ],
                                                        ),
                                                        (
                                                            None,
                                                            [
                                                                Number(
                                                                    Decimal(
                                                                        Decimal {
                                                                            before_decimal: "2",
                                                                            after_decimal: "",
                                                                        },
                                                                    ),
                                                                ),
                                                            ],
                                                        ),
                                                        (
                                                            None,
                                                            [
                                                                Number(
                                                                    Decimal(
                                                                        Decimal {
                                                                            before_decimal: "3",
                                                                            after_decimal: "",
                                                                        },
                                                                    ),
                                                                ),
                                                            ],
                                                        ),
                                                    ],
                                                ),
                                            ],
                                            [
                                                Ident(
                                                    [
                                                        Symbol(
                                                            "coroutine",
                                                        ),
                                                        Symbol(
                                                            ".",
                                                        ),
                                                        Symbol(
                                                            "yield",
                                                        ),
                                                    ],
                                                ),
                                            ],
                                        ],
                                    ),
                                ],
                            ),
                        ],
                        end: 715,
                    },
                },
            ],
        ],
    },
    Alter {
        names: [
            Ident(
                [
                    Symbol(
                        "f",
                    ),
                ],
            ),
        ],
        values: [
            [
                Ident(
                    [
                        Symbol(
                            "coroutine",
                        ),
                        Symbol(
                            ".",
                        ),
                        Symbol(
                            "wrap",
                        ),
                        Call(
                            [
                                [
                                    Lambda {
                                        args: [],
                                        body: CodeBlock {
                                            start: 724,
                                            code: [
                                                Return(
                                                    Some(
                                                        [
                                                            [
                                                                Ident(
                                                                    [
                                                                        Symbol(
                                                                            "pcall",
                                                                        ),
                                                                        Call(
                                                                            [
                                                                                [
                                                                                    Ident(
                                                                                        [
                                                                                            Symbol(
                                                                                                "f1",
                                                                                            ),
                                                                                        ],
                                                                                    ),
                                                                                ],
                                                                            ],
                                                                        ),
                                                                    ],
                                                                ),
                                                            ],
                                                        ],
                                                    ),
                                                ),
                                            ],
                                            end: 730,
                                        },
                                    },
                                ],
                            ],
                        ),
                    ],
                ),
            ],
        ],
    },
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "string",
                                ),
                                Symbol(
                                    ".",
                                ),
                                Symbol(
                                    "find",
                                ),
                                Call(
                                    [
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "select",
                                                    ),
                                                    Call(
                                                        [
                                                            [
                                                                Number(
                                                                    Decimal(
                                                                        Decimal {
                                                                            before_decimal: "2",
                                                                            after_decimal: "",
                                                                        },
                                                                    ),
                                                                ),
                                                            ],
                                                            [
                                                                Ident(
                                                                    [
                                                                        Symbol(
                                                                            "f",
                                                                        ),
                                                                        Call(
                                                                            [],
                                                                        ),
                                                                    ],
                                                                ),
                                                            ],
                                                        ],
                                                    ),
                                                ],
                                            ),
                                        ],
                                        [
                                            Symbol(
                                                "\"yield across\"",
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                    ],
                ],
            ),
        ],
    ),
    Alter {
        names: [
            Ident(
                [
                    Symbol(
                        "idsize",
                    ),
                ],
            ),
        ],
        values: [
            [
                Number(
                    Decimal(
                        Decimal {
                            before_decimal: "60",
                            after_decimal: "",
                        },
                    ),
                ),
                Operator(
                    (
                        "-",
                        true,
                    ),
                ),
                Number(
                    Decimal(
                        Decimal {
                            before_decimal: "1",
                            after_decimal: "",
                        },
                    ),
                ),
            ],
        ],
    },
    Function {
        local: true,
        name: [
            Symbol(
                "checksize",
            ),
        ],
        args: [
            "source",
        ],
        body: CodeBlock {
            start: 760,
            code: [
                Variable {
                    names: [
                        (
                            "_",
                            false,
                        ),
                        (
                            "msg",
                            false,
                        ),
                    ],
                    values: [
                        [
                            Ident(
                                [
                                    Symbol(
                                        "load",
                                    ),
                                    Call(
                                        [
                                            [
                                                Symbol(
                                                    "\"x\"",
                                                ),
                                            ],
                                            [
                                                Ident(
                                                    [
                                                        Symbol(
                                                            "source",
                                                        ),
                                                    ],
                                                ),
                                            ],
                                        ],
                                    ),
                                ],
                            ),
                        ],
                    ],
                },
                Alter {
                    names: [
                        Ident(
                            [
                                Symbol(
                                    "msg",
                                ),
                            ],
                        ),
                    ],
                    values: [
                        [
                            Ident(
                                [
                                    Symbol(
                                        "string",
                                    ),
                                    Symbol(
                                        ".",
                                    ),
                                    Symbol(
                                        "match",
                                    ),
                                    Call(
                                        [
                                            [
                                                Ident(
                                                    [
                                                        Symbol(
                                                            "msg",
                                                        ),
                                                    ],
                                                ),
                                            ],
                                            [
                                                Symbol(
                                                    "\"^([^:]*):\"",
                                                ),
                                            ],
                                        ],
                                    ),
                                ],
                            ),
                        ],
                    ],
                },
                Ident(
                    [
                        Symbol(
                            "assert",
                        ),
                        Call(
                            [
                                [
                                    Ident(
                                        [
                                            Symbol(
                                                "msg",
                                            ),
                                            Symbol(
                                                ":",
                                            ),
                                            Symbol(
                                                "len",
                                            ),
                                            Call(
                                                [],
                                            ),
                                        ],
                                    ),
                                    Operator(
                                        (
                                            "<=",
                                            true,
                                        ),
                                    ),
                                    Ident(
                                        [
                                            Symbol(
                                                "idsize",
                                            ),
                                        ],
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
            ],
            end: 792,
        },
    },
    ForLoop {
        iter: "i",
        start: [
            Number(
                Decimal(
                    Decimal {
                        before_decimal: "60",
                        after_decimal: "",
                    },
                ),
            ),
            Operator(
                (
                    "-",
                    true,
                ),
            ),
            Number(
                Decimal(
                    Decimal {
                        before_decimal: "10",
                        after_decimal: "",
                    },
                ),
            ),
        ],
        end: [
            Number(
                Decimal(
                    Decimal {
                        before_decimal: "60",
                        after_decimal: "",
                    },
                ),
            ),
            Operator(
                (
                    "+",
                    true,
                ),
            ),
            Number(
                Decimal(
                    Decimal {
                        before_decimal: "10",
                        after_decimal: "",
                    },
                ),
            ),
        ],
        step: None,
        code: CodeBlock {
            start: 803,
            code: [
                Ident(
                    [
                        Symbol(
                            "checksize",
                        ),
                        Call(
                            [
                                [
                                    Symbol(
                                        "\"@\"",
                                    ),
                                    Operator(
                                        (
                                            "..",
                                            true,
                                        ),
                                    ),
                                    Ident(
                                        [
                                            Symbol(
                                                "string",
                                            ),
                                            Symbol(
                                                ".",
                                            ),
                                            Symbol(
                                                "rep",
                                            ),
                                            Call(
                                                [
                                                    [
                                                        Symbol(
                                                            "\"x\"",
                                                        ),
                                                    ],
                                                    [
                                                        Ident(
                                                            [
                                                                Symbol(
                                                                    "i",
                                                                ),
                                                            ],
                                                        ),
                                                    ],
                                                ],
                                            ),
                                        ],
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
                Ident(
                    [
                        Symbol(
                            "checksize",
                        ),
                        Call(
                            [
                                [
                                    Ident(
                                        [
                                            Symbol(
                                                "string",
                                            ),
                                            Symbol(
                                                ".",
                                            ),
                                            Symbol(
                                                "rep",
                                            ),
                                            Call(
                                                [
                                                    [
                                                        Symbol(
                                                            "\"x\"",
                                                        ),
                                                    ],
                                                    [
                                                        Ident(
                                                            [
                                                                Symbol(
                                                                    "i",
                                                                ),
                                                            ],
                                                        ),
                                                        Operator(
                                                            (
                                                                "-",
                                                                true,
                                                            ),
                                                        ),
                                                        Number(
                                                            Decimal(
                                                                Decimal {
                                                                    before_decimal: "10",
                                                                    after_decimal: "",
                                                                },
                                                            ),
                                                        ),
                                                    ],
                                                ],
                                            ),
                                        ],
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
                Ident(
                    [
                        Symbol(
                            "checksize",
                        ),
                        Call(
                            [
                                [
                                    Symbol(
                                        "\"=\"",
                                    ),
                                    Operator(
                                        (
                                            "..",
                                            true,
                                        ),
                                    ),
                                    Ident(
                                        [
                                            Symbol(
                                                "string",
                                            ),
                                            Symbol(
                                                ".",
                                            ),
                                            Symbol(
                                                "rep",
                                            ),
                                            Call(
                                                [
                                                    [
                                                        Symbol(
                                                            "\"x\"",
                                                        ),
                                                    ],
                                                    [
                                                        Ident(
                                                            [
                                                                Symbol(
                                                                    "i",
                                                                ),
                                                            ],
                                                        ),
                                                    ],
                                                ],
                                            ),
                                        ],
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
            ],
            end: 843,
        },
    },
    Function {
        local: true,
        name: [
            Symbol(
                "lineerror",
            ),
        ],
        args: [
            "s",
            "l",
        ],
        body: CodeBlock {
            start: 851,
            code: [
                Variable {
                    names: [
                        (
                            "err",
                            false,
                        ),
                        (
                            "msg",
                            false,
                        ),
                    ],
                    values: [
                        [
                            Ident(
                                [
                                    Symbol(
                                        "pcall",
                                    ),
                                    Call(
                                        [
                                            [
                                                Ident(
                                                    [
                                                        Symbol(
                                                            "load",
                                                        ),
                                                        Call(
                                                            [
                                                                [
                                                                    Ident(
                                                                        [
                                                                            Symbol(
                                                                                "s",
                                                                            ),
                                                                        ],
                                                                    ),
                                                                ],
                                                            ],
                                                        ),
                                                    ],
                                                ),
                                            ],
                                        ],
                                    ),
                                ],
                            ),
                        ],
                    ],
                },
                Variable {
                    names: [
                        (
                            "line",
                            false,
                        ),
                    ],
                    values: [
                        [
                            Ident(
                                [
                                    Symbol(
                                        "string",
                                    ),
                                    Symbol(
                                        ".",
                                    ),
                                    Symbol(
                                        "match",
                                    ),
                                    Call(
                                        [
                                            [
                                                Ident(
                                                    [
                                                        Symbol(
                                                            "msg",
                                                        ),
                                                    ],
                                                ),
                                            ],
                                            [
                                                Symbol(
                                                    "\":(%d+):\"",
                                                ),
                                            ],
                                        ],
                                    ),
                                ],
                            ),
                        ],
                    ],
                },
                Ident(
                    [
                        Symbol(
                            "assert",
                        ),
                        Call(
                            [
                                [
                                    Expr(
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "line",
                                                    ),
                                                ],
                                            ),
                                            Operator(
                                                (
                                                    "and",
                                                    true,
                                                ),
                                            ),
                                            Ident(
                                                [
                                                    Symbol(
                                                        "line",
                                                    ),
                                                ],
                                            ),
                                            Operator(
                                                (
                                                    "+",
                                                    true,
                                                ),
                                            ),
                                            Number(
                                                Decimal(
                                                    Decimal {
                                                        before_decimal: "0",
                                                        after_decimal: "",
                                                    },
                                                ),
                                            ),
                                        ],
                                    ),
                                    Ident(
                                        [],
                                    ),
                                    Operator(
                                        (
                                            "==",
                                            true,
                                        ),
                                    ),
                                    Ident(
                                        [
                                            Symbol(
                                                "l",
                                            ),
                                        ],
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
            ],
            end: 887,
        },
    },
    Ident(
        [
            Symbol(
                "lineerror",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"local a\\n for i=1,'a' do \\n print(i) \\n end\"",
                        ),
                    ],
                    [
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "2",
                                    after_decimal: "",
                                },
                            ),
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "lineerror",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"\\n local a \\n for k,v in 3 \\n do \\n print(k) \\n end\"",
                        ),
                    ],
                    [
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "3",
                                    after_decimal: "",
                                },
                            ),
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "lineerror",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"\\n\\n for k,v in \\n 3 \\n do \\n print(k) \\n end\"",
                        ),
                    ],
                    [
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "4",
                                    after_decimal: "",
                                },
                            ),
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "lineerror",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"function a.x.y ()\\na=a+1\\nend\"",
                        ),
                    ],
                    [
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "1",
                                    after_decimal: "",
                                },
                            ),
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "lineerror",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"a = \\na\\n+\\n{}\"",
                        ),
                    ],
                    [
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "3",
                                    after_decimal: "",
                                },
                            ),
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "lineerror",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"a = \\n3\\n+\\n(\\n4\\n/\\nprint)\"",
                        ),
                    ],
                    [
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "6",
                                    after_decimal: "",
                                },
                            ),
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "lineerror",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"a = \\nprint\\n+\\n(\\n4\\n/\\n7)\"",
                        ),
                    ],
                    [
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "3",
                                    after_decimal: "",
                                },
                            ),
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "lineerror",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"a\\n=\\n-\\n\\nprint\\n;\"",
                        ),
                    ],
                    [
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "3",
                                    after_decimal: "",
                                },
                            ),
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "lineerror",
            ),
            Call(
                [
                    [
                        MultilineString(
                            "[[\na\n(\n23)\n]]",
                        ),
                    ],
                    [
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "1",
                                    after_decimal: "",
                                },
                            ),
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "lineerror",
            ),
            Call(
                [
                    [
                        MultilineString(
                            "[[\nlocal a = {x = 13}\na\n.\nx\n(\n23\n)\n]]",
                        ),
                    ],
                    [
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "2",
                                    after_decimal: "",
                                },
                            ),
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "lineerror",
            ),
            Call(
                [
                    [
                        MultilineString(
                            "[[\nlocal a = {x = 13}\na\n.\nx\n(\n23 + a\n)\n]]",
                        ),
                    ],
                    [
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "6",
                                    after_decimal: "",
                                },
                            ),
                        ),
                    ],
                ],
            ),
        ],
    ),
    Variable {
        names: [
            (
                "p",
                false,
            ),
        ],
        values: [
            [
                MultilineString(
                    "[[\nfunction g() f() end\nfunction f(x) error('a', X) end\ng()\n]]",
                ),
            ],
        ],
    },
    Alter {
        names: [
            Ident(
                [
                    Symbol(
                        "X",
                    ),
                ],
            ),
        ],
        values: [
            [
                Number(
                    Decimal(
                        Decimal {
                            before_decimal: "3",
                            after_decimal: "",
                        },
                    ),
                ),
            ],
        ],
    },
    Ident(
        [
            Symbol(
                "lineerror",
            ),
            Call(
                [
                    [
                        Expr(
                            [
                                Ident(
                                    [
                                        Symbol(
                                            "p",
                                        ),
                                    ],
                                ),
                            ],
                        ),
                        Ident(
                            [],
                        ),
                    ],
                    [
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "3",
                                    after_decimal: "",
                                },
                            ),
                        ),
                    ],
                ],
            ),
        ],
    ),
    Alter {
        names: [
            Ident(
                [
                    Symbol(
                        "X",
                    ),
                ],
            ),
        ],
        values: [
            [
                Number(
                    Decimal(
                        Decimal {
                            before_decimal: "0",
                            after_decimal: "",
                        },
                    ),
                ),
            ],
        ],
    },
    Ident(
        [
            Symbol(
                "lineerror",
            ),
            Call(
                [
                    [
                        Expr(
                            [
                                Ident(
                                    [
                                        Symbol(
                                            "p",
                                        ),
                                    ],
                                ),
                            ],
                        ),
                        Ident(
                            [],
                        ),
                    ],
                    [
                        Symbol(
                            "nil",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Alter {
        names: [
            Ident(
                [
                    Symbol(
                        "X",
                    ),
                ],
            ),
        ],
        values: [
            [
                Number(
                    Decimal(
                        Decimal {
                            before_decimal: "1",
                            after_decimal: "",
                        },
                    ),
                ),
            ],
        ],
    },
    Ident(
        [
            Symbol(
                "lineerror",
            ),
            Call(
                [
                    [
                        Expr(
                            [
                                Ident(
                                    [
                                        Symbol(
                                            "p",
                                        ),
                                    ],
                                ),
                            ],
                        ),
                        Ident(
                            [],
                        ),
                    ],
                    [
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "2",
                                    after_decimal: "",
                                },
                            ),
                        ),
                    ],
                ],
            ),
        ],
    ),
    Alter {
        names: [
            Ident(
                [
                    Symbol(
                        "X",
                    ),
                ],
            ),
        ],
        values: [
            [
                Number(
                    Decimal(
                        Decimal {
                            before_decimal: "2",
                            after_decimal: "",
                        },
                    ),
                ),
            ],
        ],
    },
    Ident(
        [
            Symbol(
                "lineerror",
            ),
            Call(
                [
                    [
                        Expr(
                            [
                                Ident(
                                    [
                                        Symbol(
                                            "p",
                                        ),
                                    ],
                                ),
                            ],
                        ),
                        Ident(
                            [],
                        ),
                    ],
                    [
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "1",
                                    after_decimal: "",
                                },
                            ),
                        ),
                    ],
                ],
            ),
        ],
    ),
    IfStatement {
        condition: [
            Operator(
                (
                    "not",
                    false,
                ),
            ),
            Ident(
                [
                    Symbol(
                        "_soft",
                    ),
                ],
            ),
        ],
        body: CodeBlock {
            start: 1009,
            code: [
                Alter {
                    names: [
                        Ident(
                            [
                                Symbol(
                                    "C",
                                ),
                            ],
                        ),
                    ],
                    values: [
                        [
                            Number(
                                Decimal(
                                    Decimal {
                                        before_decimal: "0",
                                        after_decimal: "",
                                    },
                                ),
                            ),
                        ],
                    ],
                },
                Variable {
                    names: [
                        (
                            "l",
                            false,
                        ),
                    ],
                    values: [
                        [
                            Ident(
                                [
                                    Symbol(
                                        "debug",
                                    ),
                                    Symbol(
                                        ".",
                                    ),
                                    Symbol(
                                        "getinfo",
                                    ),
                                    Call(
                                        [
                                            [
                                                Number(
                                                    Decimal(
                                                        Decimal {
                                                            before_decimal: "1",
                                                            after_decimal: "",
                                                        },
                                                    ),
                                                ),
                                            ],
                                            [
                                                Symbol(
                                                    "\"l\"",
                                                ),
                                            ],
                                        ],
                                    ),
                                    Symbol(
                                        ".",
                                    ),
                                    Symbol(
                                        "currentline",
                                    ),
                                ],
                            ),
                        ],
                    ],
                },
                Function {
                    local: false,
                    name: [
                        Symbol(
                            "y",
                        ),
                    ],
                    args: [],
                    body: CodeBlock {
                        start: 21,
                        code: [
                            Alter {
                                names: [
                                    Ident(
                                        [
                                            Symbol(
                                                "C",
                                            ),
                                        ],
                                    ),
                                ],
                                values: [
                                    [
                                        Ident(
                                            [
                                                Symbol(
                                                    "C",
                                                ),
                                            ],
                                        ),
                                        Operator(
                                            (
                                                "+",
                                                true,
                                            ),
                                        ),
                                        Number(
                                            Decimal(
                                                Decimal {
                                                    before_decimal: "1",
                                                    after_decimal: "",
                                                },
                                            ),
                                        ),
                                    ],
                                ],
                            },
                            Ident(
                                [
                                    Symbol(
                                        "y",
                                    ),
                                    Call(
                                        [],
                                    ),
                                ],
                            ),
                        ],
                        end: 31,
                    },
                },
                Function {
                    local: true,
                    name: [
                        Symbol(
                            "checkstackmessage",
                        ),
                    ],
                    args: [
                        "m",
                    ],
                    body: CodeBlock {
                        start: 37,
                        code: [
                            Return(
                                Some(
                                    [
                                        [
                                            Expr(
                                                [
                                                    Ident(
                                                        [
                                                            Symbol(
                                                                "string",
                                                            ),
                                                            Symbol(
                                                                ".",
                                                            ),
                                                            Symbol(
                                                                "find",
                                                            ),
                                                            Call(
                                                                [
                                                                    [
                                                                        Ident(
                                                                            [
                                                                                Symbol(
                                                                                    "m",
                                                                                ),
                                                                            ],
                                                                        ),
                                                                    ],
                                                                    [
                                                                        Symbol(
                                                                            "\"^.-:%d+: stack overflow\"",
                                                                        ),
                                                                    ],
                                                                ],
                                                            ),
                                                        ],
                                                    ),
                                                ],
                                            ),
                                            Ident(
                                                [],
                                            ),
                                        ],
                                    ],
                                ),
                            ),
                        ],
                        end: 49,
                    },
                },
                Ident(
                    [
                        Symbol(
                            "assert",
                        ),
                        Call(
                            [
                                [
                                    Ident(
                                        [
                                            Symbol(
                                                "checkstackmessage",
                                            ),
                                            Call(
                                                [
                                                    [
                                                        Ident(
                                                            [
                                                                Symbol(
                                                                    "doit",
                                                                ),
                                                                Call(
                                                                    [
                                                                        [
                                                                            Symbol(
                                                                                "'y()'",
                                                                            ),
                                                                        ],
                                                                    ],
                                                                ),
                                                            ],
                                                        ),
                                                    ],
                                                ],
                                            ),
                                        ],
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
                Ident(
                    [
                        Symbol(
                            "print",
                        ),
                        Call(
                            [
                                [
                                    Symbol(
                                        "'+'",
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
                Ident(
                    [
                        Symbol(
                            "assert",
                        ),
                        Call(
                            [
                                [
                                    Ident(
                                        [
                                            Symbol(
                                                "checkstackmessage",
                                            ),
                                            Call(
                                                [
                                                    [
                                                        Ident(
                                                            [
                                                                Symbol(
                                                                    "doit",
                                                                ),
                                                                Call(
                                                                    [
                                                                        [
                                                                            Symbol(
                                                                                "'y()'",
                                                                            ),
                                                                        ],
                                                                    ],
                                                                ),
                                                            ],
                                                        ),
                                                    ],
                                                ],
                                            ),
                                        ],
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
                Ident(
                    [
                        Symbol(
                            "print",
                        ),
                        Call(
                            [
                                [
                                    Symbol(
                                        "'+'",
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
                Ident(
                    [
                        Symbol(
                            "assert",
                        ),
                        Call(
                            [
                                [
                                    Ident(
                                        [
                                            Symbol(
                                                "checkstackmessage",
                                            ),
                                            Call(
                                                [
                                                    [
                                                        Ident(
                                                            [
                                                                Symbol(
                                                                    "doit",
                                                                ),
                                                                Call(
                                                                    [
                                                                        [
                                                                            Symbol(
                                                                                "'y()'",
                                                                            ),
                                                                        ],
                                                                    ],
                                                                ),
                                                            ],
                                                        ),
                                                    ],
                                                ],
                                            ),
                                        ],
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
                Ident(
                    [
                        Symbol(
                            "print",
                        ),
                        Call(
                            [
                                [
                                    Symbol(
                                        "'+'",
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
                Alter {
                    names: [
                        Ident(
                            [
                                Symbol(
                                    "C",
                                ),
                            ],
                        ),
                    ],
                    values: [
                        [
                            Number(
                                Decimal(
                                    Decimal {
                                        before_decimal: "0",
                                        after_decimal: "",
                                    },
                                ),
                            ),
                        ],
                    ],
                },
                Variable {
                    names: [
                        (
                            "l1",
                            false,
                        ),
                    ],
                    values: [],
                },
                Function {
                    local: true,
                    name: [
                        Symbol(
                            "g",
                        ),
                    ],
                    args: [
                        "x",
                    ],
                    body: CodeBlock {
                        start: 102,
                        code: [
                            Alter {
                                names: [
                                    Ident(
                                        [
                                            Symbol(
                                                "l1",
                                            ),
                                        ],
                                    ),
                                ],
                                values: [
                                    [
                                        Ident(
                                            [
                                                Symbol(
                                                    "debug",
                                                ),
                                                Symbol(
                                                    ".",
                                                ),
                                                Symbol(
                                                    "getinfo",
                                                ),
                                                Call(
                                                    [
                                                        [
                                                            Ident(
                                                                [
                                                                    Symbol(
                                                                        "x",
                                                                    ),
                                                                ],
                                                            ),
                                                        ],
                                                        [
                                                            Symbol(
                                                                "\"l\"",
                                                            ),
                                                        ],
                                                    ],
                                                ),
                                                Symbol(
                                                    ".",
                                                ),
                                                Symbol(
                                                    "currentline",
                                                ),
                                            ],
                                        ),
                                    ],
                                ],
                            },
                            Ident(
                                [
                                    Symbol(
                                        "y",
                                    ),
                                    Call(
                                        [],
                                    ),
                                ],
                            ),
                        ],
                        end: 119,
                    },
                },
                Variable {
                    names: [
                        (
                            "_",
                            false,
                        ),
                        (
                            "stackmsg",
                            false,
                        ),
                    ],
                    values: [
                        [
                            Ident(
                                [
                                    Symbol(
                                        "xpcall",
                                    ),
                                    Call(
                                        [
                                            [
                                                Ident(
                                                    [
                                                        Symbol(
                                                            "g",
                                                        ),
                                                    ],
                                                ),
                                            ],
                                            [
                                                Ident(
                                                    [
                                                        Symbol(
                                                            "debug",
                                                        ),
                                                        Symbol(
                                                            ".",
                                                        ),
                                                        Symbol(
                                                            "traceback",
                                                        ),
                                                    ],
                                                ),
                                            ],
                                            [
                                                Number(
                                                    Decimal(
                                                        Decimal {
                                                            before_decimal: "1",
                                                            after_decimal: "",
                                                        },
                                                    ),
                                                ),
                                            ],
                                        ],
                                    ),
                                ],
                            ),
                        ],
                    ],
                },
                Ident(
                    [
                        Symbol(
                            "print",
                        ),
                        Call(
                            [
                                [
                                    Symbol(
                                        "'+'",
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
                Variable {
                    names: [
                        (
                            "stack",
                            false,
                        ),
                    ],
                    values: [
                        [
                            Table(
                                [],
                            ),
                        ],
                    ],
                },
                ForFuncLoop {
                    iters: [
                        "line",
                    ],
                    expr: [
                        Ident(
                            [
                                Symbol(
                                    "string",
                                ),
                                Symbol(
                                    ".",
                                ),
                                Symbol(
                                    "gmatch",
                                ),
                                Call(
                                    [
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "stackmsg",
                                                    ),
                                                ],
                                            ),
                                        ],
                                        [
                                            Symbol(
                                                "\"[^\\n]*\"",
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                    ],
                    stop: None,
                    initial: None,
                    code: CodeBlock {
                        start: 155,
                        code: [
                            Variable {
                                names: [
                                    (
                                        "curr",
                                        false,
                                    ),
                                ],
                                values: [
                                    [
                                        Ident(
                                            [
                                                Symbol(
                                                    "string",
                                                ),
                                                Symbol(
                                                    ".",
                                                ),
                                                Symbol(
                                                    "match",
                                                ),
                                                Call(
                                                    [
                                                        [
                                                            Ident(
                                                                [
                                                                    Symbol(
                                                                        "line",
                                                                    ),
                                                                ],
                                                            ),
                                                        ],
                                                        [
                                                            Symbol(
                                                                "\":(%d+):\"",
                                                            ),
                                                        ],
                                                    ],
                                                ),
                                            ],
                                        ),
                                    ],
                                ],
                            },
                            IfStatement {
                                condition: [
                                    Ident(
                                        [
                                            Symbol(
                                                "curr",
                                            ),
                                        ],
                                    ),
                                ],
                                body: CodeBlock {
                                    start: 14,
                                    code: [
                                        Ident(
                                            [
                                                Symbol(
                                                    "table",
                                                ),
                                                Symbol(
                                                    ".",
                                                ),
                                                Symbol(
                                                    "insert",
                                                ),
                                                Call(
                                                    [
                                                        [
                                                            Ident(
                                                                [
                                                                    Symbol(
                                                                        "stack",
                                                                    ),
                                                                ],
                                                            ),
                                                        ],
                                                        [
                                                            Ident(
                                                                [
                                                                    Symbol(
                                                                        "tonumber",
                                                                    ),
                                                                    Call(
                                                                        [
                                                                            [
                                                                                Ident(
                                                                                    [
                                                                                        Symbol(
                                                                                            "curr",
                                                                                        ),
                                                                                    ],
                                                                                ),
                                                                            ],
                                                                        ],
                                                                    ),
                                                                ],
                                                            ),
                                                        ],
                                                    ],
                                                ),
                                            ],
                                        ),
                                    ],
                                    end: 26,
                                },
                                next: None,
                            },
                        ],
                        end: 182,
                    },
                },
                Variable {
                    names: [
                        (
                            "i",
                            false,
                        ),
                    ],
                    values: [
                        [
                            Number(
                                Decimal(
                                    Decimal {
                                        before_decimal: "1",
                                        after_decimal: "",
                                    },
                                ),
                            ),
                        ],
                    ],
                },
                WhileLoop {
                    condition: [
                        Ident(
                            [
                                Symbol(
                                    "stack",
                                ),
                                Symbol(
                                    "[",
                                ),
                                Expr(
                                    [
                                        Ident(
                                            [
                                                Symbol(
                                                    "i",
                                                ),
                                            ],
                                        ),
                                    ],
                                ),
                                Symbol(
                                    "]",
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "~=",
                                true,
                            ),
                        ),
                        Ident(
                            [
                                Symbol(
                                    "l1",
                                ),
                            ],
                        ),
                    ],
                    body: CodeBlock {
                        start: 194,
                        code: [
                            Ident(
                                [
                                    Symbol(
                                        "assert",
                                    ),
                                    Call(
                                        [
                                            [
                                                Ident(
                                                    [
                                                        Symbol(
                                                            "stack",
                                                        ),
                                                        Symbol(
                                                            "[",
                                                        ),
                                                        Expr(
                                                            [
                                                                Ident(
                                                                    [
                                                                        Symbol(
                                                                            "i",
                                                                        ),
                                                                    ],
                                                                ),
                                                            ],
                                                        ),
                                                        Symbol(
                                                            "]",
                                                        ),
                                                    ],
                                                ),
                                                Operator(
                                                    (
                                                        "==",
                                                        true,
                                                    ),
                                                ),
                                                Ident(
                                                    [
                                                        Symbol(
                                                            "l",
                                                        ),
                                                    ],
                                                ),
                                            ],
                                        ],
                                    ),
                                ],
                            ),
                            Alter {
                                names: [
                                    Ident(
                                        [
                                            Symbol(
                                                "i",
                                            ),
                                        ],
                                    ),
                                ],
                                values: [
                                    [
                                        Ident(
                                            [
                                                Symbol(
                                                    "i",
                                                ),
                                            ],
                                        ),
                                        Operator(
                                            (
                                                "+",
                                                true,
                                            ),
                                        ),
                                        Number(
                                            Decimal(
                                                Decimal {
                                                    before_decimal: "1",
                                                    after_decimal: "",
                                                },
                                            ),
                                        ),
                                    ],
                                ],
                            },
                        ],
                        end: 209,
                    },
                },
                Ident(
                    [
                        Symbol(
                            "assert",
                        ),
                        Call(
                            [
                                [
                                    Ident(
                                        [
                                            Symbol(
                                                "i",
                                            ),
                                        ],
                                    ),
                                    Operator(
                                        (
                                            ">",
                                            true,
                                        ),
                                    ),
                                    Number(
                                        Decimal(
                                            Decimal {
                                                before_decimal: "15",
                                                after_decimal: "",
                                            },
                                        ),
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
                Variable {
                    names: [
                        (
                            "res",
                            false,
                        ),
                        (
                            "msg",
                            false,
                        ),
                    ],
                    values: [
                        [
                            Ident(
                                [
                                    Symbol(
                                        "xpcall",
                                    ),
                                    Call(
                                        [
                                            [
                                                Ident(
                                                    [
                                                        Symbol(
                                                            "error",
                                                        ),
                                                    ],
                                                ),
                                            ],
                                            [
                                                Ident(
                                                    [
                                                        Symbol(
                                                            "error",
                                                        ),
                                                    ],
                                                ),
                                            ],
                                        ],
                                    ),
                                ],
                            ),
                        ],
                    ],
                },
                Ident(
                    [
                        Symbol(
                            "assert",
                        ),
                        Call(
                            [
                                [
                                    Operator(
                                        (
                                            "not",
                                            false,
                                        ),
                                    ),
                                    Ident(
                                        [
                                            Symbol(
                                                "res",
                                            ),
                                        ],
                                    ),
                                    Operator(
                                        (
                                            "and",
                                            true,
                                        ),
                                    ),
                                    Ident(
                                        [
                                            Symbol(
                                                "type",
                                            ),
                                            Call(
                                                [
                                                    [
                                                        Ident(
                                                            [
                                                                Symbol(
                                                                    "msg",
                                                                ),
                                                            ],
                                                        ),
                                                    ],
                                                ],
                                            ),
                                        ],
                                    ),
                                    Operator(
                                        (
                                            "==",
                                            true,
                                        ),
                                    ),
                                    Symbol(
                                        "'string'",
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
                Ident(
                    [
                        Symbol(
                            "print",
                        ),
                        Call(
                            [
                                [
                                    Symbol(
                                        "'+'",
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
                Function {
                    local: true,
                    name: [
                        Symbol(
                            "f",
                        ),
                    ],
                    args: [
                        "x",
                    ],
                    body: CodeBlock {
                        start: 248,
                        code: [
                            IfStatement {
                                condition: [
                                    Ident(
                                        [
                                            Symbol(
                                                "x",
                                            ),
                                        ],
                                    ),
                                    Operator(
                                        (
                                            "==",
                                            true,
                                        ),
                                    ),
                                    Number(
                                        Decimal(
                                            Decimal {
                                                before_decimal: "0",
                                                after_decimal: "",
                                            },
                                        ),
                                    ),
                                ],
                                body: CodeBlock {
                                    start: 5,
                                    code: [
                                        Ident(
                                            [
                                                Symbol(
                                                    "error",
                                                ),
                                                Call(
                                                    [
                                                        [
                                                            Symbol(
                                                                "'a\\n'",
                                                            ),
                                                        ],
                                                    ],
                                                ),
                                            ],
                                        ),
                                    ],
                                    end: 10,
                                },
                                next: Some(
                                    IfStatement {
                                        condition: [],
                                        body: CodeBlock {
                                            start: 10,
                                            code: [
                                                Variable {
                                                    names: [
                                                        (
                                                            "aux",
                                                            false,
                                                        ),
                                                    ],
                                                    values: [
                                                        [
                                                            Lambda {
                                                                args: [],
                                                                body: CodeBlock {
                                                                    start: 6,
                                                                    code: [
                                                                        Return(
                                                                            Some(
                                                                                [
                                                                                    [
                                                                                        Ident(
                                                                                            [
                                                                                                Symbol(
                                                                                                    "f",
                                                                                                ),
                                                                                                Call(
                                                                                                    [
                                                                                                        [
                                                                                                            Ident(
                                                                                                                [
                                                                                                                    Symbol(
                                                                                                                        "x",
                                                                                                                    ),
                                                                                                                ],
                                                                                                            ),
                                                                                                            Operator(
                                                                                                                (
                                                                                                                    "-",
                                                                                                                    true,
                                                                                                                ),
                                                                                                            ),
                                                                                                            Number(
                                                                                                                Decimal(
                                                                                                                    Decimal {
                                                                                                                        before_decimal: "1",
                                                                                                                        after_decimal: "",
                                                                                                                    },
                                                                                                                ),
                                                                                                            ),
                                                                                                        ],
                                                                                                    ],
                                                                                                ),
                                                                                            ],
                                                                                        ),
                                                                                    ],
                                                                                ],
                                                                            ),
                                                                        ),
                                                                    ],
                                                                    end: 14,
                                                                },
                                                            },
                                                        ],
                                                    ],
                                                },
                                                Variable {
                                                    names: [
                                                        (
                                                            "a",
                                                            false,
                                                        ),
                                                        (
                                                            "b",
                                                            false,
                                                        ),
                                                    ],
                                                    values: [
                                                        [
                                                            Ident(
                                                                [
                                                                    Symbol(
                                                                        "xpcall",
                                                                    ),
                                                                    Call(
                                                                        [
                                                                            [
                                                                                Ident(
                                                                                    [
                                                                                        Symbol(
                                                                                            "aux",
                                                                                        ),
                                                                                    ],
                                                                                ),
                                                                            ],
                                                                            [
                                                                                Ident(
                                                                                    [
                                                                                        Symbol(
                                                                                            "aux",
                                                                                        ),
                                                                                    ],
                                                                                ),
                                                                            ],
                                                                        ],
                                                                    ),
                                                                ],
                                                            ),
                                                        ],
                                                    ],
                                                },
                                                Return(
                                                    Some(
                                                        [
                                                            [
                                                                Ident(
                                                                    [
                                                                        Symbol(
                                                                            "a",
                                                                        ),
                                                                    ],
                                                                ),
                                                            ],
                                                            [
                                                                Ident(
                                                                    [
                                                                        Symbol(
                                                                            "b",
                                                                        ),
                                                                    ],
                                                                ),
                                                            ],
                                                        ],
                                                    ),
                                                ),
                                            ],
                                            end: 40,
                                        },
                                        next: None,
                                    },
                                ),
                            },
                        ],
                        end: 289,
                    },
                },
                Ident(
                    [
                        Symbol(
                            "f",
                        ),
                        Call(
                            [
                                [
                                    Number(
                                        Decimal(
                                            Decimal {
                                                before_decimal: "3",
                                                after_decimal: "",
                                            },
                                        ),
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
                Function {
                    local: true,
                    name: [
                        Symbol(
                            "loop",
                        ),
                    ],
                    args: [
                        "x",
                        "y",
                        "z",
                    ],
                    body: CodeBlock {
                        start: 303,
                        code: [
                            Return(
                                Some(
                                    [
                                        [
                                            Number(
                                                Decimal(
                                                    Decimal {
                                                        before_decimal: "1",
                                                        after_decimal: "",
                                                    },
                                                ),
                                            ),
                                            Operator(
                                                (
                                                    "+",
                                                    true,
                                                ),
                                            ),
                                            Ident(
                                                [
                                                    Symbol(
                                                        "loop",
                                                    ),
                                                    Call(
                                                        [
                                                            [
                                                                Ident(
                                                                    [
                                                                        Symbol(
                                                                            "x",
                                                                        ),
                                                                    ],
                                                                ),
                                                            ],
                                                            [
                                                                Ident(
                                                                    [
                                                                        Symbol(
                                                                            "y",
                                                                        ),
                                                                    ],
                                                                ),
                                                            ],
                                                            [
                                                                Ident(
                                                                    [
                                                                        Symbol(
                                                                            "z",
                                                                        ),
                                                                    ],
                                                                ),
                                                            ],
                                                        ],
                                                    ),
                                                ],
                                            ),
                                        ],
                                    ],
                                ),
                            ),
                        ],
                        end: 315,
                    },
                },
                Variable {
                    names: [
                        (
                            "res",
                            false,
                        ),
                        (
                            "msg",
                            false,
                        ),
                    ],
                    values: [
                        [
                            Ident(
                                [
                                    Symbol(
                                        "xpcall",
                                    ),
                                    Call(
                                        [
                                            [
                                                Ident(
                                                    [
                                                        Symbol(
                                                            "loop",
                                                        ),
                                                    ],
                                                ),
                                            ],
                                            [
                                                Lambda {
                                                    args: [
                                                        "m",
                                                    ],
                                                    body: CodeBlock {
                                                        start: 328,
                                                        code: [
                                                            Ident(
                                                                [
                                                                    Symbol(
                                                                        "assert",
                                                                    ),
                                                                    Call(
                                                                        [
                                                                            [
                                                                                Ident(
                                                                                    [
                                                                                        Symbol(
                                                                                            "string",
                                                                                        ),
                                                                                        Symbol(
                                                                                            ".",
                                                                                        ),
                                                                                        Symbol(
                                                                                            "find",
                                                                                        ),
                                                                                        Call(
                                                                                            [
                                                                                                [
                                                                                                    Ident(
                                                                                                        [
                                                                                                            Symbol(
                                                                                                                "m",
                                                                                                            ),
                                                                                                        ],
                                                                                                    ),
                                                                                                ],
                                                                                                [
                                                                                                    Symbol(
                                                                                                        "\"stack overflow\"",
                                                                                                    ),
                                                                                                ],
                                                                                            ],
                                                                                        ),
                                                                                    ],
                                                                                ),
                                                                            ],
                                                                        ],
                                                                    ),
                                                                ],
                                                            ),
                                                            Variable {
                                                                names: [
                                                                    (
                                                                        "res",
                                                                        false,
                                                                    ),
                                                                    (
                                                                        "msg",
                                                                        false,
                                                                    ),
                                                                ],
                                                                values: [
                                                                    [
                                                                        Ident(
                                                                            [
                                                                                Symbol(
                                                                                    "pcall",
                                                                                ),
                                                                                Call(
                                                                                    [
                                                                                        [
                                                                                            Ident(
                                                                                                [
                                                                                                    Symbol(
                                                                                                        "loop",
                                                                                                    ),
                                                                                                ],
                                                                                            ),
                                                                                        ],
                                                                                    ],
                                                                                ),
                                                                            ],
                                                                        ),
                                                                    ],
                                                                ],
                                                            },
                                                            Ident(
                                                                [
                                                                    Symbol(
                                                                        "assert",
                                                                    ),
                                                                    Call(
                                                                        [
                                                                            [
                                                                                Ident(
                                                                                    [
                                                                                        Symbol(
                                                                                            "string",
                                                                                        ),
                                                                                        Symbol(
                                                                                            ".",
                                                                                        ),
                                                                                        Symbol(
                                                                                            "find",
                                                                                        ),
                                                                                        Call(
                                                                                            [
                                                                                                [
                                                                                                    Ident(
                                                                                                        [
                                                                                                            Symbol(
                                                                                                                "msg",
                                                                                                            ),
                                                                                                        ],
                                                                                                    ),
                                                                                                ],
                                                                                                [
                                                                                                    Symbol(
                                                                                                        "\"error handling\"",
                                                                                                    ),
                                                                                                ],
                                                                                            ],
                                                                                        ),
                                                                                    ],
                                                                                ),
                                                                            ],
                                                                        ],
                                                                    ),
                                                                ],
                                                            ),
                                                            Ident(
                                                                [
                                                                    Symbol(
                                                                        "assert",
                                                                    ),
                                                                    Call(
                                                                        [
                                                                            [
                                                                                Ident(
                                                                                    [
                                                                                        Symbol(
                                                                                            "math",
                                                                                        ),
                                                                                        Symbol(
                                                                                            ".",
                                                                                        ),
                                                                                        Symbol(
                                                                                            "sin",
                                                                                        ),
                                                                                        Call(
                                                                                            [
                                                                                                [
                                                                                                    Number(
                                                                                                        Decimal(
                                                                                                            Decimal {
                                                                                                                before_decimal: "0",
                                                                                                                after_decimal: "",
                                                                                                            },
                                                                                                        ),
                                                                                                    ),
                                                                                                ],
                                                                                            ],
                                                                                        ),
                                                                                    ],
                                                                                ),
                                                                                Operator(
                                                                                    (
                                                                                        "==",
                                                                                        true,
                                                                                    ),
                                                                                ),
                                                                                Number(
                                                                                    Decimal(
                                                                                        Decimal {
                                                                                            before_decimal: "0",
                                                                                            after_decimal: "",
                                                                                        },
                                                                                    ),
                                                                                ),
                                                                            ],
                                                                        ],
                                                                    ),
                                                                ],
                                                            ),
                                                            Return(
                                                                Some(
                                                                    [
                                                                        [
                                                                            Number(
                                                                                Decimal(
                                                                                    Decimal {
                                                                                        before_decimal: "15",
                                                                                        after_decimal: "",
                                                                                    },
                                                                                ),
                                                                            ),
                                                                        ],
                                                                    ],
                                                                ),
                                                            ),
                                                        ],
                                                        end: 373,
                                                    },
                                                },
                                            ],
                                        ],
                                    ),
                                ],
                            ),
                        ],
                    ],
                },
                Ident(
                    [
                        Symbol(
                            "assert",
                        ),
                        Call(
                            [
                                [
                                    Ident(
                                        [
                                            Symbol(
                                                "msg",
                                            ),
                                        ],
                                    ),
                                    Operator(
                                        (
                                            "==",
                                            true,
                                        ),
                                    ),
                                    Number(
                                        Decimal(
                                            Decimal {
                                                before_decimal: "15",
                                                after_decimal: "",
                                            },
                                        ),
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
                Alter {
                    names: [
                        Ident(
                            [
                                Symbol(
                                    "res",
                                ),
                            ],
                        ),
                        Ident(
                            [
                                Symbol(
                                    "msg",
                                ),
                            ],
                        ),
                    ],
                    values: [
                        [
                            Ident(
                                [
                                    Symbol(
                                        "pcall",
                                    ),
                                    Call(
                                        [
                                            [
                                                Lambda {
                                                    args: [],
                                                    body: CodeBlock {
                                                        start: 389,
                                                        code: [
                                                            ForLoop {
                                                                iter: "i",
                                                                start: [
                                                                    Number(
                                                                        Decimal(
                                                                            Decimal {
                                                                                before_decimal: "999900",
                                                                                after_decimal: "",
                                                                            },
                                                                        ),
                                                                    ),
                                                                ],
                                                                end: [
                                                                    Number(
                                                                        Decimal(
                                                                            Decimal {
                                                                                before_decimal: "1000000",
                                                                                after_decimal: "",
                                                                            },
                                                                        ),
                                                                    ),
                                                                ],
                                                                step: Some(
                                                                    [
                                                                        Number(
                                                                            Decimal(
                                                                                Decimal {
                                                                                    before_decimal: "1",
                                                                                    after_decimal: "",
                                                                                },
                                                                            ),
                                                                        ),
                                                                    ],
                                                                ),
                                                                code: CodeBlock {
                                                                    start: 9,
                                                                    code: [
                                                                        Ident(
                                                                            [
                                                                                Symbol(
                                                                                    "table",
                                                                                ),
                                                                                Symbol(
                                                                                    ".",
                                                                                ),
                                                                                Symbol(
                                                                                    "unpack",
                                                                                ),
                                                                                Call(
                                                                                    [
                                                                                        [
                                                                                            Table(
                                                                                                [],
                                                                                            ),
                                                                                        ],
                                                                                        [
                                                                                            Number(
                                                                                                Decimal(
                                                                                                    Decimal {
                                                                                                        before_decimal: "1",
                                                                                                        after_decimal: "",
                                                                                                    },
                                                                                                ),
                                                                                            ),
                                                                                        ],
                                                                                        [
                                                                                            Ident(
                                                                                                [
                                                                                                    Symbol(
                                                                                                        "i",
                                                                                                    ),
                                                                                                ],
                                                                                            ),
                                                                                        ],
                                                                                    ],
                                                                                ),
                                                                            ],
                                                                        ),
                                                                    ],
                                                                    end: 21,
                                                                },
                                                            },
                                                        ],
                                                        end: 411,
                                                    },
                                                },
                                            ],
                                        ],
                                    ),
                                ],
                            ),
                        ],
                    ],
                },
                Ident(
                    [
                        Symbol(
                            "assert",
                        ),
                        Call(
                            [
                                [
                                    Ident(
                                        [
                                            Symbol(
                                                "string",
                                            ),
                                            Symbol(
                                                ".",
                                            ),
                                            Symbol(
                                                "find",
                                            ),
                                            Call(
                                                [
                                                    [
                                                        Ident(
                                                            [
                                                                Symbol(
                                                                    "msg",
                                                                ),
                                                            ],
                                                        ),
                                                    ],
                                                    [
                                                        Symbol(
                                                            "\"too many results\"",
                                                        ),
                                                    ],
                                                ],
                                            ),
                                        ],
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
            ],
            end: 1433,
        },
        next: None,
    },
    Function {
        local: false,
        name: [
            Symbol(
                "f",
            ),
        ],
        args: [],
        body: CodeBlock {
            start: 1437,
            code: [
                Ident(
                    [
                        Symbol(
                            "error",
                        ),
                        Call(
                            [
                                [
                                    Table(
                                        [
                                            (
                                                Some(
                                                    [
                                                        Symbol(
                                                            "msg",
                                                        ),
                                                    ],
                                                ),
                                                [
                                                    Symbol(
                                                        "'x'",
                                                    ),
                                                ],
                                            ),
                                        ],
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
            ],
            end: 1444,
        },
    },
    Alter {
        names: [
            Ident(
                [
                    Symbol(
                        "res",
                    ),
                ],
            ),
            Ident(
                [
                    Symbol(
                        "msg",
                    ),
                ],
            ),
        ],
        values: [
            [
                Ident(
                    [
                        Symbol(
                            "xpcall",
                        ),
                        Call(
                            [
                                [
                                    Ident(
                                        [
                                            Symbol(
                                                "f",
                                            ),
                                        ],
                                    ),
                                ],
                                [
                                    Lambda {
                                        args: [
                                            "r",
                                        ],
                                        body: CodeBlock {
                                            start: 1456,
                                            code: [
                                                Return(
                                                    Some(
                                                        [
                                                            [
                                                                Table(
                                                                    [
                                                                        (
                                                                            Some(
                                                                                [
                                                                                    Symbol(
                                                                                        "msg",
                                                                                    ),
                                                                                ],
                                                                            ),
                                                                            [
                                                                                Ident(
                                                                                    [
                                                                                        Symbol(
                                                                                            "r",
                                                                                        ),
                                                                                        Symbol(
                                                                                            ".",
                                                                                        ),
                                                                                        Symbol(
                                                                                            "msg",
                                                                                        ),
                                                                                    ],
                                                                                ),
                                                                                Operator(
                                                                                    (
                                                                                        "..",
                                                                                        true,
                                                                                    ),
                                                                                ),
                                                                                Symbol(
                                                                                    "'y'",
                                                                                ),
                                                                            ],
                                                                        ),
                                                                    ],
                                                                ),
                                                            ],
                                                        ],
                                                    ),
                                                ),
                                            ],
                                            end: 1467,
                                        },
                                    },
                                ],
                            ],
                        ),
                    ],
                ),
            ],
        ],
    },
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "msg",
                                ),
                                Symbol(
                                    ".",
                                ),
                                Symbol(
                                    "msg",
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Symbol(
                            "'xy'",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Alter {
        names: [
            Ident(
                [
                    Symbol(
                        "a",
                    ),
                ],
            ),
            Ident(
                [
                    Symbol(
                        "b",
                    ),
                ],
            ),
            Ident(
                [
                    Symbol(
                        "c",
                    ),
                ],
            ),
        ],
        values: [
            [
                Ident(
                    [
                        Symbol(
                            "xpcall",
                        ),
                        Call(
                            [
                                [
                                    Ident(
                                        [
                                            Symbol(
                                                "string",
                                            ),
                                            Symbol(
                                                ".",
                                            ),
                                            Symbol(
                                                "find",
                                            ),
                                        ],
                                    ),
                                ],
                                [
                                    Ident(
                                        [
                                            Symbol(
                                                "error",
                                            ),
                                        ],
                                    ),
                                ],
                                [
                                    Symbol(
                                        "\"alo\"",
                                    ),
                                ],
                                [
                                    Symbol(
                                        "\"al\"",
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
            ],
        ],
    },
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "a",
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "and",
                                true,
                            ),
                        ),
                        Ident(
                            [
                                Symbol(
                                    "b",
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "1",
                                    after_decimal: "",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "and",
                                true,
                            ),
                        ),
                        Ident(
                            [
                                Symbol(
                                    "c",
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "2",
                                    after_decimal: "",
                                },
                            ),
                        ),
                    ],
                ],
            ),
        ],
    ),
    Alter {
        names: [
            Ident(
                [
                    Symbol(
                        "a",
                    ),
                ],
            ),
            Ident(
                [
                    Symbol(
                        "b",
                    ),
                ],
            ),
            Ident(
                [
                    Symbol(
                        "c",
                    ),
                ],
            ),
        ],
        values: [
            [
                Ident(
                    [
                        Symbol(
                            "xpcall",
                        ),
                        Call(
                            [
                                [
                                    Ident(
                                        [
                                            Symbol(
                                                "string",
                                            ),
                                            Symbol(
                                                ".",
                                            ),
                                            Symbol(
                                                "find",
                                            ),
                                        ],
                                    ),
                                ],
                                [
                                    Lambda {
                                        args: [
                                            "x",
                                        ],
                                        body: CodeBlock {
                                            start: 1522,
                                            code: [
                                                Return(
                                                    Some(
                                                        [
                                                            [
                                                                Table(
                                                                    [],
                                                                ),
                                                            ],
                                                        ],
                                                    ),
                                                ),
                                            ],
                                            end: 1526,
                                        },
                                    },
                                ],
                                [
                                    Symbol(
                                        "true",
                                    ),
                                ],
                                [
                                    Symbol(
                                        "\"al\"",
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
            ],
        ],
    },
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Operator(
                            (
                                "not",
                                false,
                            ),
                        ),
                        Ident(
                            [
                                Symbol(
                                    "a",
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "and",
                                true,
                            ),
                        ),
                        Ident(
                            [
                                Symbol(
                                    "type",
                                ),
                                Call(
                                    [
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "b",
                                                    ),
                                                ],
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Symbol(
                            "\"table\"",
                        ),
                        Operator(
                            (
                                "and",
                                true,
                            ),
                        ),
                        Ident(
                            [
                                Symbol(
                                    "c",
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Symbol(
                            "nil",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "print",
            ),
            Call(
                [
                    [
                        Symbol(
                            "'+'",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "checksyntax",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"syntax error\"",
                        ),
                    ],
                    [
                        Symbol(
                            "\"\"",
                        ),
                    ],
                    [
                        Symbol(
                            "\"error\"",
                        ),
                    ],
                    [
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "1",
                                    after_decimal: "",
                                },
                            ),
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "checksyntax",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"1.000\"",
                        ),
                    ],
                    [
                        Symbol(
                            "\"\"",
                        ),
                    ],
                    [
                        Symbol(
                            "\"1.000\"",
                        ),
                    ],
                    [
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "1",
                                    after_decimal: "",
                                },
                            ),
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "checksyntax",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"[[a]]\"",
                        ),
                    ],
                    [
                        Symbol(
                            "\"\"",
                        ),
                    ],
                    [
                        Symbol(
                            "\"[[a]]\"",
                        ),
                    ],
                    [
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "1",
                                    after_decimal: "",
                                },
                            ),
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "checksyntax",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"'aa'\"",
                        ),
                    ],
                    [
                        Symbol(
                            "\"\"",
                        ),
                    ],
                    [
                        Symbol(
                            "\"'aa'\"",
                        ),
                    ],
                    [
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "1",
                                    after_decimal: "",
                                },
                            ),
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "checksyntax",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"\\255a = 1\"",
                        ),
                    ],
                    [
                        Symbol(
                            "\"\"",
                        ),
                    ],
                    [
                        Symbol(
                            "\"char(255)\"",
                        ),
                    ],
                    [
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "1",
                                    after_decimal: "",
                                },
                            ),
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "doit",
            ),
            Call(
                [
                    [
                        Symbol(
                            "'I = load(\"a=9+\"); a=3'",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "a",
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "3",
                                    after_decimal: "",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "and",
                                true,
                            ),
                        ),
                        Ident(
                            [
                                Symbol(
                                    "I",
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "==",
                                true,
                            ),
                        ),
                        Symbol(
                            "nil",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "print",
            ),
            Call(
                [
                    [
                        Symbol(
                            "'+'",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Alter {
        names: [
            Ident(
                [
                    Symbol(
                        "lim",
                    ),
                ],
            ),
        ],
        values: [
            [
                Number(
                    Decimal(
                        Decimal {
                            before_decimal: "1000",
                            after_decimal: "",
                        },
                    ),
                ),
            ],
        ],
    },
    IfStatement {
        condition: [
            Ident(
                [
                    Symbol(
                        "_soft",
                    ),
                ],
            ),
        ],
        body: CodeBlock {
            start: 1625,
            code: [
                Alter {
                    names: [
                        Ident(
                            [
                                Symbol(
                                    "lim",
                                ),
                            ],
                        ),
                    ],
                    values: [
                        [
                            Number(
                                Decimal(
                                    Decimal {
                                        before_decimal: "100",
                                        after_decimal: "",
                                    },
                                ),
                            ),
                        ],
                    ],
                },
            ],
            end: 1629,
        },
        next: None,
    },
    ForLoop {
        iter: "i",
        start: [
            Number(
                Decimal(
                    Decimal {
                        before_decimal: "1",
                        after_decimal: "",
                    },
                ),
            ),
        ],
        end: [
            Ident(
                [
                    Symbol(
                        "lim",
                    ),
                ],
            ),
        ],
        step: None,
        code: CodeBlock {
            start: 1636,
            code: [
                Ident(
                    [
                        Symbol(
                            "doit",
                        ),
                        Call(
                            [
                                [
                                    Symbol(
                                        "'a = '",
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
                Ident(
                    [
                        Symbol(
                            "doit",
                        ),
                        Call(
                            [
                                [
                                    Symbol(
                                        "'a = 4+nil'",
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
            ],
            end: 1645,
        },
    },
    Function {
        local: true,
        name: [
            Symbol(
                "testrep",
            ),
        ],
        args: [
            "init",
            "rep",
        ],
        body: CodeBlock {
            start: 1653,
            code: [
                Variable {
                    names: [
                        (
                            "s",
                            false,
                        ),
                    ],
                    values: [
                        [
                            Symbol(
                                "\"local a; \"",
                            ),
                            Operator(
                                (
                                    "..",
                                    true,
                                ),
                            ),
                            Ident(
                                [
                                    Symbol(
                                        "init",
                                    ),
                                ],
                            ),
                            Operator(
                                (
                                    "..",
                                    true,
                                ),
                            ),
                            Ident(
                                [
                                    Symbol(
                                        "string",
                                    ),
                                    Symbol(
                                        ".",
                                    ),
                                    Symbol(
                                        "rep",
                                    ),
                                    Call(
                                        [
                                            [
                                                Ident(
                                                    [
                                                        Symbol(
                                                            "rep",
                                                        ),
                                                    ],
                                                ),
                                            ],
                                            [
                                                Number(
                                                    Decimal(
                                                        Decimal {
                                                            before_decimal: "400",
                                                            after_decimal: "",
                                                        },
                                                    ),
                                                ),
                                            ],
                                        ],
                                    ),
                                ],
                            ),
                        ],
                    ],
                },
                Variable {
                    names: [
                        (
                            "a",
                            false,
                        ),
                        (
                            "b",
                            false,
                        ),
                    ],
                    values: [
                        [
                            Ident(
                                [
                                    Symbol(
                                        "load",
                                    ),
                                    Call(
                                        [
                                            [
                                                Ident(
                                                    [
                                                        Symbol(
                                                            "s",
                                                        ),
                                                    ],
                                                ),
                                            ],
                                        ],
                                    ),
                                ],
                            ),
                        ],
                    ],
                },
                Ident(
                    [
                        Symbol(
                            "assert",
                        ),
                        Call(
                            [
                                [
                                    Operator(
                                        (
                                            "not",
                                            false,
                                        ),
                                    ),
                                    Ident(
                                        [
                                            Symbol(
                                                "a",
                                            ),
                                        ],
                                    ),
                                    Operator(
                                        (
                                            "and",
                                            true,
                                        ),
                                    ),
                                    Ident(
                                        [
                                            Symbol(
                                                "string",
                                            ),
                                            Symbol(
                                                ".",
                                            ),
                                            Symbol(
                                                "find",
                                            ),
                                            Call(
                                                [
                                                    [
                                                        Ident(
                                                            [
                                                                Symbol(
                                                                    "b",
                                                                ),
                                                            ],
                                                        ),
                                                    ],
                                                    [
                                                        Symbol(
                                                            "\"levels\"",
                                                        ),
                                                    ],
                                                ],
                                            ),
                                        ],
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
            ],
            end: 1692,
        },
    },
    Ident(
        [
            Symbol(
                "testrep",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"a=\"",
                        ),
                    ],
                    [
                        Symbol(
                            "\"{\"",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "testrep",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"a=\"",
                        ),
                    ],
                    [
                        Symbol(
                            "\"(\"",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "testrep",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"\"",
                        ),
                    ],
                    [
                        Symbol(
                            "\"a(\"",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "testrep",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"\"",
                        ),
                    ],
                    [
                        Symbol(
                            "\"do \"",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "testrep",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"\"",
                        ),
                    ],
                    [
                        Symbol(
                            "\"while a do \"",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "testrep",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"\"",
                        ),
                    ],
                    [
                        Symbol(
                            "\"if a then else \"",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "testrep",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"\"",
                        ),
                    ],
                    [
                        Symbol(
                            "\"function foo () \"",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "testrep",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"a=\"",
                        ),
                    ],
                    [
                        Symbol(
                            "\"a..\"",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Ident(
        [
            Symbol(
                "testrep",
            ),
            Call(
                [
                    [
                        Symbol(
                            "\"a=\"",
                        ),
                    ],
                    [
                        Symbol(
                            "\"a^\"",
                        ),
                    ],
                ],
            ),
        ],
    ),
    Variable {
        names: [
            (
                "s",
                false,
            ),
        ],
        values: [
            [
                Expr(
                    [
                        Symbol(
                            "\"a,\"",
                        ),
                    ],
                ),
                Ident(
                    [
                        Symbol(
                            ":",
                        ),
                        Symbol(
                            "rep",
                        ),
                        Call(
                            [
                                [
                                    Number(
                                        Decimal(
                                            Decimal {
                                                before_decimal: "200",
                                                after_decimal: "",
                                            },
                                        ),
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
                Operator(
                    (
                        "..",
                        true,
                    ),
                ),
                Symbol(
                    "\"a=nil\"",
                ),
            ],
        ],
    },
    Variable {
        names: [
            (
                "a",
                false,
            ),
            (
                "b",
                false,
            ),
        ],
        values: [
            [
                Ident(
                    [
                        Symbol(
                            "load",
                        ),
                        Call(
                            [
                                [
                                    Ident(
                                        [
                                            Symbol(
                                                "s",
                                            ),
                                        ],
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
            ],
        ],
    },
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Operator(
                            (
                                "not",
                                false,
                            ),
                        ),
                        Ident(
                            [
                                Symbol(
                                    "a",
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "and",
                                true,
                            ),
                        ),
                        Ident(
                            [
                                Symbol(
                                    "string",
                                ),
                                Symbol(
                                    ".",
                                ),
                                Symbol(
                                    "find",
                                ),
                                Call(
                                    [
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "b",
                                                    ),
                                                ],
                                            ),
                                        ],
                                        [
                                            Symbol(
                                                "\"levels\"",
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                    ],
                ],
            ),
        ],
    ),
    Variable {
        names: [
            (
                "lim",
                false,
            ),
        ],
        values: [
            [
                Number(
                    Decimal(
                        Decimal {
                            before_decimal: "127",
                            after_decimal: "",
                        },
                    ),
                ),
            ],
        ],
    },
    Variable {
        names: [
            (
                "s",
                false,
            ),
        ],
        values: [
            [
                Symbol(
                    "\"local function fooA ()\\n  local \"",
                ),
            ],
        ],
    },
    ForLoop {
        iter: "j",
        start: [
            Number(
                Decimal(
                    Decimal {
                        before_decimal: "1",
                        after_decimal: "",
                    },
                ),
            ),
        ],
        end: [
            Ident(
                [
                    Symbol(
                        "lim",
                    ),
                ],
            ),
        ],
        step: None,
        code: CodeBlock {
            start: 1797,
            code: [
                Alter {
                    names: [
                        Ident(
                            [
                                Symbol(
                                    "s",
                                ),
                            ],
                        ),
                    ],
                    values: [
                        [
                            Ident(
                                [
                                    Symbol(
                                        "s",
                                    ),
                                ],
                            ),
                            Operator(
                                (
                                    "..",
                                    true,
                                ),
                            ),
                            Symbol(
                                "\"a\"",
                            ),
                            Operator(
                                (
                                    "..",
                                    true,
                                ),
                            ),
                            Ident(
                                [
                                    Symbol(
                                        "j",
                                    ),
                                ],
                            ),
                            Operator(
                                (
                                    "..",
                                    true,
                                ),
                            ),
                            Symbol(
                                "\", \"",
                            ),
                        ],
                    ],
                },
            ],
            end: 1807,
        },
    },
    Alter {
        names: [
            Ident(
                [
                    Symbol(
                        "s",
                    ),
                ],
            ),
        ],
        values: [
            [
                Ident(
                    [
                        Symbol(
                            "s",
                        ),
                    ],
                ),
                Operator(
                    (
                        "..",
                        true,
                    ),
                ),
                Symbol(
                    "\"b,c\\n\"",
                ),
            ],
        ],
    },
    Alter {
        names: [
            Ident(
                [
                    Symbol(
                        "s",
                    ),
                ],
            ),
        ],
        values: [
            [
                Ident(
                    [
                        Symbol(
                            "s",
                        ),
                    ],
                ),
                Operator(
                    (
                        "..",
                        true,
                    ),
                ),
                Symbol(
                    "\"local function fooB ()\\n  local \"",
                ),
            ],
        ],
    },
    ForLoop {
        iter: "j",
        start: [
            Number(
                Decimal(
                    Decimal {
                        before_decimal: "1",
                        after_decimal: "",
                    },
                ),
            ),
        ],
        end: [
            Ident(
                [
                    Symbol(
                        "lim",
                    ),
                ],
            ),
        ],
        step: None,
        code: CodeBlock {
            start: 1824,
            code: [
                Alter {
                    names: [
                        Ident(
                            [
                                Symbol(
                                    "s",
                                ),
                            ],
                        ),
                    ],
                    values: [
                        [
                            Ident(
                                [
                                    Symbol(
                                        "s",
                                    ),
                                ],
                            ),
                            Operator(
                                (
                                    "..",
                                    true,
                                ),
                            ),
                            Symbol(
                                "\"b\"",
                            ),
                            Operator(
                                (
                                    "..",
                                    true,
                                ),
                            ),
                            Ident(
                                [
                                    Symbol(
                                        "j",
                                    ),
                                ],
                            ),
                            Operator(
                                (
                                    "..",
                                    true,
                                ),
                            ),
                            Symbol(
                                "\", \"",
                            ),
                        ],
                    ],
                },
            ],
            end: 1834,
        },
    },
    Alter {
        names: [
            Ident(
                [
                    Symbol(
                        "s",
                    ),
                ],
            ),
        ],
        values: [
            [
                Ident(
                    [
                        Symbol(
                            "s",
                        ),
                    ],
                ),
                Operator(
                    (
                        "..",
                        true,
                    ),
                ),
                Symbol(
                    "\"b\\n\"",
                ),
            ],
        ],
    },
    Alter {
        names: [
            Ident(
                [
                    Symbol(
                        "s",
                    ),
                ],
            ),
        ],
        values: [
            [
                Ident(
                    [
                        Symbol(
                            "s",
                        ),
                    ],
                ),
                Operator(
                    (
                        "..",
                        true,
                    ),
                ),
                Symbol(
                    "\"function fooC () return b+c\"",
                ),
            ],
        ],
    },
    Variable {
        names: [
            (
                "c",
                false,
            ),
        ],
        values: [
            [
                Number(
                    Decimal(
                        Decimal {
                            before_decimal: "1",
                            after_decimal: "",
                        },
                    ),
                ),
                Operator(
                    (
                        "+",
                        true,
                    ),
                ),
                Number(
                    Decimal(
                        Decimal {
                            before_decimal: "2",
                            after_decimal: "",
                        },
                    ),
                ),
            ],
        ],
    },
    ForLoop {
        iter: "j",
        start: [
            Number(
                Decimal(
                    Decimal {
                        before_decimal: "1",
                        after_decimal: "",
                    },
                ),
            ),
        ],
        end: [
            Ident(
                [
                    Symbol(
                        "lim",
                    ),
                ],
            ),
        ],
        step: None,
        code: CodeBlock {
            start: 1857,
            code: [
                Alter {
                    names: [
                        Ident(
                            [
                                Symbol(
                                    "s",
                                ),
                            ],
                        ),
                    ],
                    values: [
                        [
                            Ident(
                                [
                                    Symbol(
                                        "s",
                                    ),
                                ],
                            ),
                            Operator(
                                (
                                    "..",
                                    true,
                                ),
                            ),
                            Symbol(
                                "\"+a\"",
                            ),
                            Operator(
                                (
                                    "..",
                                    true,
                                ),
                            ),
                            Ident(
                                [
                                    Symbol(
                                        "j",
                                    ),
                                ],
                            ),
                            Operator(
                                (
                                    "..",
                                    true,
                                ),
                            ),
                            Symbol(
                                "\"+b\"",
                            ),
                            Operator(
                                (
                                    "..",
                                    true,
                                ),
                            ),
                            Ident(
                                [
                                    Symbol(
                                        "j",
                                    ),
                                ],
                            ),
                        ],
                    ],
                },
                Alter {
                    names: [
                        Ident(
                            [
                                Symbol(
                                    "c",
                                ),
                            ],
                        ),
                    ],
                    values: [
                        [
                            Ident(
                                [
                                    Symbol(
                                        "c",
                                    ),
                                ],
                            ),
                            Operator(
                                (
                                    "+",
                                    true,
                                ),
                            ),
                            Number(
                                Decimal(
                                    Decimal {
                                        before_decimal: "2",
                                        after_decimal: "",
                                    },
                                ),
                            ),
                        ],
                    ],
                },
            ],
            end: 1874,
        },
    },
    Alter {
        names: [
            Ident(
                [
                    Symbol(
                        "s",
                    ),
                ],
            ),
        ],
        values: [
            [
                Ident(
                    [
                        Symbol(
                            "s",
                        ),
                    ],
                ),
                Operator(
                    (
                        "..",
                        true,
                    ),
                ),
                Symbol(
                    "\"\\nend  end end\"",
                ),
            ],
        ],
    },
    Variable {
        names: [
            (
                "a",
                false,
            ),
            (
                "b",
                false,
            ),
        ],
        values: [
            [
                Ident(
                    [
                        Symbol(
                            "load",
                        ),
                        Call(
                            [
                                [
                                    Ident(
                                        [
                                            Symbol(
                                                "s",
                                            ),
                                        ],
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
            ],
        ],
    },
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "c",
                                ),
                            ],
                        ),
                        Operator(
                            (
                                ">",
                                true,
                            ),
                        ),
                        Number(
                            Decimal(
                                Decimal {
                                    before_decimal: "255",
                                    after_decimal: "",
                                },
                            ),
                        ),
                        Operator(
                            (
                                "and",
                                true,
                            ),
                        ),
                        Ident(
                            [
                                Symbol(
                                    "string",
                                ),
                                Symbol(
                                    ".",
                                ),
                                Symbol(
                                    "find",
                                ),
                                Call(
                                    [
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "b",
                                                    ),
                                                ],
                                            ),
                                        ],
                                        [
                                            Symbol(
                                                "\"too many upvalues\"",
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                        Operator(
                            (
                                "and",
                                true,
                            ),
                        ),
                        Ident(
                            [
                                Symbol(
                                    "string",
                                ),
                                Symbol(
                                    ".",
                                ),
                                Symbol(
                                    "find",
                                ),
                                Call(
                                    [
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "b",
                                                    ),
                                                ],
                                            ),
                                        ],
                                        [
                                            Symbol(
                                                "\"line 5\"",
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                    ],
                ],
            ),
        ],
    ),
    Alter {
        names: [
            Ident(
                [
                    Symbol(
                        "s",
                    ),
                ],
            ),
        ],
        values: [
            [
                Symbol(
                    "\"\\nfunction foo ()\\n  local \"",
                ),
            ],
        ],
    },
    ForLoop {
        iter: "j",
        start: [
            Number(
                Decimal(
                    Decimal {
                        before_decimal: "1",
                        after_decimal: "",
                    },
                ),
            ),
        ],
        end: [
            Number(
                Decimal(
                    Decimal {
                        before_decimal: "300",
                        after_decimal: "",
                    },
                ),
            ),
        ],
        step: None,
        code: CodeBlock {
            start: 1922,
            code: [
                Alter {
                    names: [
                        Ident(
                            [
                                Symbol(
                                    "s",
                                ),
                            ],
                        ),
                    ],
                    values: [
                        [
                            Ident(
                                [
                                    Symbol(
                                        "s",
                                    ),
                                ],
                            ),
                            Operator(
                                (
                                    "..",
                                    true,
                                ),
                            ),
                            Symbol(
                                "\"a\"",
                            ),
                            Operator(
                                (
                                    "..",
                                    true,
                                ),
                            ),
                            Ident(
                                [
                                    Symbol(
                                        "j",
                                    ),
                                ],
                            ),
                            Operator(
                                (
                                    "..",
                                    true,
                                ),
                            ),
                            Symbol(
                                "\", \"",
                            ),
                        ],
                    ],
                },
            ],
            end: 1932,
        },
    },
    Alter {
        names: [
            Ident(
                [
                    Symbol(
                        "s",
                    ),
                ],
            ),
        ],
        values: [
            [
                Ident(
                    [
                        Symbol(
                            "s",
                        ),
                    ],
                ),
                Operator(
                    (
                        "..",
                        true,
                    ),
                ),
                Symbol(
                    "\"b\\n\"",
                ),
            ],
        ],
    },
    Variable {
        names: [
            (
                "a",
                false,
            ),
            (
                "b",
                false,
            ),
        ],
        values: [
            [
                Ident(
                    [
                        Symbol(
                            "load",
                        ),
                        Call(
                            [
                                [
                                    Ident(
                                        [
                                            Symbol(
                                                "s",
                                            ),
                                        ],
                                    ),
                                ],
                            ],
                        ),
                    ],
                ),
            ],
        ],
    },
    Ident(
        [
            Symbol(
                "assert",
            ),
            Call(
                [
                    [
                        Ident(
                            [
                                Symbol(
                                    "string",
                                ),
                                Symbol(
                                    ".",
                                ),
                                Symbol(
                                    "find",
                                ),
                                Call(
                                    [
                                        [
                                            Ident(
                                                [
                                                    Symbol(
                                                        "b",
                                                    ),
                                                ],
                                            ),
                                        ],
                                        [
                                            Symbol(
                                                "\"line 2\"",
                                            ),
                                        ],
                                    ],
                                ),
                            ],
                        ),
                    ],
                ],
            ),
        ],
    ),
    Alter {
        names: [
            Ident(
                [
                    Symbol(
                        "mt",
                    ),
                    Symbol(
                        ".",
                    ),
                    Symbol(
                        "__index",
                    ),
                ],
            ),
        ],
        values: [
            [
                Ident(
                    [
                        Symbol(
                            "oldmm",
                        ),
                    ],
                ),
            ],
        ],
    },
    Ident(
        [
            Symbol(
                "print",
            ),
            Call(
                [
                    [
                        Symbol(
                            "'OK'",
                        ),
                    ],
                ],
            ),
        ],
    ),
]
