---
source: src/main.rs
expression: scanned
input_file: test-data/lua5.4-tests/tracegc.lua
---
[
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        position: Position {
            line: 3,
            column: 6,
            span: 22..27,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "M",
        ),
        position: Position {
            line: 3,
            column: 8,
            span: 28..29,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 3,
            column: 10,
            span: 30..31,
        },
    },
    Token {
        kind: LeftBrace,
        lexeme: Symbol(
            "{",
        ),
        position: Position {
            line: 3,
            column: 12,
            span: 32..33,
        },
    },
    Token {
        kind: RightBrace,
        lexeme: Symbol(
            "}",
        ),
        position: Position {
            line: 3,
            column: 13,
            span: 33..34,
        },
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        position: Position {
            line: 6,
            column: 6,
            span: 51..56,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "setmetatable",
        ),
        position: Position {
            line: 6,
            column: 19,
            span: 57..69,
        },
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        position: Position {
            line: 6,
            column: 20,
            span: 69..70,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "stderr",
        ),
        position: Position {
            line: 6,
            column: 27,
            span: 71..77,
        },
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        position: Position {
            line: 6,
            column: 28,
            span: 77..78,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "collectgarbage",
        ),
        position: Position {
            line: 6,
            column: 43,
            span: 79..93,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 6,
            column: 45,
            span: 94..95,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "setmetatable",
        ),
        position: Position {
            line: 7,
            column: 22,
            span: 105..117,
        },
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        position: Position {
            line: 7,
            column: 23,
            span: 117..118,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        position: Position {
            line: 7,
            column: 26,
            span: 119..121,
        },
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        position: Position {
            line: 7,
            column: 27,
            span: 121..122,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "stderr",
        ),
        position: Position {
            line: 7,
            column: 33,
            span: 122..128,
        },
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        position: Position {
            line: 7,
            column: 34,
            span: 128..129,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "collectgarbage",
        ),
        position: Position {
            line: 7,
            column: 0,
            span: 130..144,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "_ENV",
        ),
        position: Position {
            line: 9,
            column: 5,
            span: 146..150,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 9,
            column: 7,
            span: 151..152,
        },
    },
    Token {
        kind: Nil,
        lexeme: Symbol(
            "nil",
        ),
        position: Position {
            line: 9,
            column: 0,
            span: 153..156,
        },
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        position: Position {
            line: 11,
            column: 6,
            span: 158..163,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "active",
        ),
        position: Position {
            line: 11,
            column: 13,
            span: 164..170,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 11,
            column: 15,
            span: 171..172,
        },
    },
    Token {
        kind: False,
        lexeme: Symbol(
            "false",
        ),
        position: Position {
            line: 11,
            column: 0,
            span: 173..178,
        },
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        position: Position {
            line: 16,
            column: 6,
            span: 260..265,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "mt",
        ),
        position: Position {
            line: 16,
            column: 9,
            span: 266..268,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 16,
            column: 11,
            span: 269..270,
        },
    },
    Token {
        kind: LeftBrace,
        lexeme: Symbol(
            "{",
        ),
        position: Position {
            line: 16,
            column: 13,
            span: 271..272,
        },
    },
    Token {
        kind: RightBrace,
        lexeme: Symbol(
            "}",
        ),
        position: Position {
            line: 16,
            column: 14,
            span: 272..273,
        },
    },
    Token {
        kind: Function,
        lexeme: Symbol(
            "function",
        ),
        position: Position {
            line: 17,
            column: 9,
            span: 274..282,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "mt",
        ),
        position: Position {
            line: 17,
            column: 12,
            span: 283..285,
        },
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        position: Position {
            line: 17,
            column: 13,
            span: 285..286,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "__gc",
        ),
        position: Position {
            line: 17,
            column: 17,
            span: 286..290,
        },
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        position: Position {
            line: 17,
            column: 19,
            span: 291..292,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "o",
        ),
        position: Position {
            line: 17,
            column: 20,
            span: 292..293,
        },
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        position: Position {
            line: 17,
            column: 21,
            span: 293..294,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "stderr",
        ),
        position: Position {
            line: 18,
            column: 9,
            span: 297..303,
        },
    },
    Token {
        kind: Colon,
        lexeme: Symbol(
            ":",
        ),
        position: Position {
            line: 18,
            column: 10,
            span: 303..304,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "write",
        ),
        position: Position {
            line: 18,
            column: 15,
            span: 304..309,
        },
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'.'",
        ),
        position: Position {
            line: 18,
            column: 18,
            span: 309..312,
        },
    },
    Token {
        kind: If,
        lexeme: Symbol(
            "if",
        ),
        position: Position {
            line: 19,
            column: 5,
            span: 335..337,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "active",
        ),
        position: Position {
            line: 19,
            column: 12,
            span: 338..344,
        },
    },
    Token {
        kind: Then,
        lexeme: Symbol(
            "then",
        ),
        position: Position {
            line: 19,
            column: 0,
            span: 345..349,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "setmetatable",
        ),
        position: Position {
            line: 20,
            column: 17,
            span: 354..366,
        },
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        position: Position {
            line: 20,
            column: 18,
            span: 366..367,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "o",
        ),
        position: Position {
            line: 20,
            column: 19,
            span: 367..368,
        },
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        position: Position {
            line: 20,
            column: 20,
            span: 368..369,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "mt",
        ),
        position: Position {
            line: 20,
            column: 23,
            span: 370..372,
        },
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        position: Position {
            line: 20,
            column: 24,
            span: 372..373,
        },
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        position: Position {
            line: 21,
            column: 0,
            span: 412..415,
        },
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        position: Position {
            line: 22,
            column: 0,
            span: 416..419,
        },
    },
    Token {
        kind: Function,
        lexeme: Symbol(
            "function",
        ),
        position: Position {
            line: 25,
            column: 9,
            span: 422..430,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "M",
        ),
        position: Position {
            line: 25,
            column: 11,
            span: 431..432,
        },
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        position: Position {
            line: 25,
            column: 12,
            span: 432..433,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "start",
        ),
        position: Position {
            line: 25,
            column: 17,
            span: 433..438,
        },
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        position: Position {
            line: 25,
            column: 19,
            span: 439..440,
        },
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        position: Position {
            line: 25,
            column: 20,
            span: 440..441,
        },
    },
    Token {
        kind: If,
        lexeme: Symbol(
            "if",
        ),
        position: Position {
            line: 26,
            column: 5,
            span: 444..446,
        },
    },
    Token {
        kind: Not,
        lexeme: Symbol(
            "not",
        ),
        position: Position {
            line: 26,
            column: 9,
            span: 447..450,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "active",
        ),
        position: Position {
            line: 26,
            column: 16,
            span: 451..457,
        },
    },
    Token {
        kind: Then,
        lexeme: Symbol(
            "then",
        ),
        position: Position {
            line: 26,
            column: 0,
            span: 458..462,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "active",
        ),
        position: Position {
            line: 27,
            column: 11,
            span: 467..473,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 27,
            column: 13,
            span: 474..475,
        },
    },
    Token {
        kind: True,
        lexeme: Symbol(
            "true",
        ),
        position: Position {
            line: 27,
            column: 0,
            span: 476..480,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "setmetatable",
        ),
        position: Position {
            line: 28,
            column: 17,
            span: 485..497,
        },
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        position: Position {
            line: 28,
            column: 18,
            span: 497..498,
        },
    },
    Token {
        kind: LeftBrace,
        lexeme: Symbol(
            "{",
        ),
        position: Position {
            line: 28,
            column: 19,
            span: 498..499,
        },
    },
    Token {
        kind: RightBrace,
        lexeme: Symbol(
            "}",
        ),
        position: Position {
            line: 28,
            column: 20,
            span: 499..500,
        },
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        position: Position {
            line: 28,
            column: 21,
            span: 500..501,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "mt",
        ),
        position: Position {
            line: 28,
            column: 24,
            span: 502..504,
        },
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        position: Position {
            line: 28,
            column: 25,
            span: 504..505,
        },
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        position: Position {
            line: 29,
            column: 0,
            span: 536..539,
        },
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        position: Position {
            line: 30,
            column: 0,
            span: 540..543,
        },
    },
    Token {
        kind: Function,
        lexeme: Symbol(
            "function",
        ),
        position: Position {
            line: 33,
            column: 9,
            span: 546..554,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "M",
        ),
        position: Position {
            line: 33,
            column: 11,
            span: 555..556,
        },
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        position: Position {
            line: 33,
            column: 12,
            span: 556..557,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "stop",
        ),
        position: Position {
            line: 33,
            column: 16,
            span: 557..561,
        },
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        position: Position {
            line: 33,
            column: 18,
            span: 562..563,
        },
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        position: Position {
            line: 33,
            column: 19,
            span: 563..564,
        },
    },
    Token {
        kind: If,
        lexeme: Symbol(
            "if",
        ),
        position: Position {
            line: 34,
            column: 5,
            span: 567..569,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "active",
        ),
        position: Position {
            line: 34,
            column: 12,
            span: 570..576,
        },
    },
    Token {
        kind: Then,
        lexeme: Symbol(
            "then",
        ),
        position: Position {
            line: 34,
            column: 0,
            span: 577..581,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "active",
        ),
        position: Position {
            line: 35,
            column: 11,
            span: 586..592,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 35,
            column: 13,
            span: 593..594,
        },
    },
    Token {
        kind: False,
        lexeme: Symbol(
            "false",
        ),
        position: Position {
            line: 35,
            column: 0,
            span: 595..600,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "collectgarbage",
        ),
        position: Position {
            line: 36,
            column: 19,
            span: 605..619,
        },
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        position: Position {
            line: 36,
            column: 20,
            span: 619..620,
        },
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        position: Position {
            line: 36,
            column: 21,
            span: 620..621,
        },
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        position: Position {
            line: 37,
            column: 0,
            span: 662..665,
        },
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        position: Position {
            line: 38,
            column: 0,
            span: 666..669,
        },
    },
    Token {
        kind: Return,
        lexeme: Symbol(
            "return",
        ),
        position: Position {
            line: 40,
            column: 7,
            span: 671..677,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "M",
        ),
        position: Position {
            line: 40,
            column: 0,
            span: 678..679,
        },
    },
]
