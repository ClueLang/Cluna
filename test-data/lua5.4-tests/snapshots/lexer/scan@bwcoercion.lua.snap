---
source: src/main.rs
expression: scanned
input_file: test-data/lua5.4-tests/bwcoercion.lua
---
[
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        position: Position {
            line: 1,
            column: 5,
            span: 0..5,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "tonumber",
        ),
        position: Position {
            line: 1,
            column: 14,
            span: 6..14,
        },
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        position: Position {
            line: 1,
            column: 15,
            span: 14..15,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "tointeger",
        ),
        position: Position {
            line: 1,
            column: 25,
            span: 16..25,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 1,
            column: 27,
            span: 26..27,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "tonumber",
        ),
        position: Position {
            line: 1,
            column: 36,
            span: 28..36,
        },
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        position: Position {
            line: 1,
            column: 37,
            span: 36..37,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "math",
        ),
        position: Position {
            line: 1,
            column: 42,
            span: 38..42,
        },
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        position: Position {
            line: 1,
            column: 43,
            span: 42..43,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "tointeger",
        ),
        position: Position {
            line: 1,
            column: 0,
            span: 43..52,
        },
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        position: Position {
            line: 2,
            column: 6,
            span: 53..58,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "type",
        ),
        position: Position {
            line: 2,
            column: 11,
            span: 59..63,
        },
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        position: Position {
            line: 2,
            column: 12,
            span: 63..64,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "getmetatable",
        ),
        position: Position {
            line: 2,
            column: 25,
            span: 65..77,
        },
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        position: Position {
            line: 2,
            column: 26,
            span: 77..78,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "rawget",
        ),
        position: Position {
            line: 2,
            column: 33,
            span: 79..85,
        },
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        position: Position {
            line: 2,
            column: 34,
            span: 85..86,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "error",
        ),
        position: Position {
            line: 2,
            column: 40,
            span: 87..92,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 2,
            column: 42,
            span: 93..94,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "type",
        ),
        position: Position {
            line: 2,
            column: 47,
            span: 95..99,
        },
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        position: Position {
            line: 2,
            column: 48,
            span: 99..100,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "getmetatable",
        ),
        position: Position {
            line: 2,
            column: 61,
            span: 101..113,
        },
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        position: Position {
            line: 2,
            column: 62,
            span: 113..114,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "rawget",
        ),
        position: Position {
            line: 2,
            column: 69,
            span: 115..121,
        },
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        position: Position {
            line: 2,
            column: 70,
            span: 121..122,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "error",
        ),
        position: Position {
            line: 2,
            column: 0,
            span: 123..128,
        },
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        position: Position {
            line: 3,
            column: 6,
            span: 129..134,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "strsub",
        ),
        position: Position {
            line: 3,
            column: 13,
            span: 135..141,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 3,
            column: 15,
            span: 142..143,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "string",
        ),
        position: Position {
            line: 3,
            column: 22,
            span: 144..150,
        },
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        position: Position {
            line: 3,
            column: 23,
            span: 150..151,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "sub",
        ),
        position: Position {
            line: 3,
            column: 0,
            span: 151..154,
        },
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        position: Position {
            line: 5,
            column: 6,
            span: 156..161,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "print",
        ),
        position: Position {
            line: 5,
            column: 12,
            span: 162..167,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 5,
            column: 14,
            span: 168..169,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "print",
        ),
        position: Position {
            line: 5,
            column: 0,
            span: 170..175,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "_ENV",
        ),
        position: Position {
            line: 7,
            column: 5,
            span: 177..181,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 7,
            column: 7,
            span: 182..183,
        },
    },
    Token {
        kind: Nil,
        lexeme: Symbol(
            "nil",
        ),
        position: Position {
            line: 7,
            column: 0,
            span: 184..187,
        },
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        position: Position {
            line: 10,
            column: 6,
            span: 261..266,
        },
    },
    Token {
        kind: Function,
        lexeme: Symbol(
            "function",
        ),
        position: Position {
            line: 10,
            column: 15,
            span: 267..275,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "toint",
        ),
        position: Position {
            line: 10,
            column: 21,
            span: 276..281,
        },
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        position: Position {
            line: 10,
            column: 23,
            span: 282..283,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "x",
        ),
        position: Position {
            line: 10,
            column: 24,
            span: 283..284,
        },
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        position: Position {
            line: 10,
            column: 25,
            span: 284..285,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "x",
        ),
        position: Position {
            line: 11,
            column: 4,
            span: 288..289,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 11,
            column: 6,
            span: 290..291,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "tonumber",
        ),
        position: Position {
            line: 11,
            column: 15,
            span: 292..300,
        },
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        position: Position {
            line: 11,
            column: 16,
            span: 300..301,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "x",
        ),
        position: Position {
            line: 11,
            column: 17,
            span: 301..302,
        },
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        position: Position {
            line: 11,
            column: 18,
            span: 302..303,
        },
    },
    Token {
        kind: If,
        lexeme: Symbol(
            "if",
        ),
        position: Position {
            line: 12,
            column: 5,
            span: 336..338,
        },
    },
    Token {
        kind: Not,
        lexeme: Symbol(
            "not",
        ),
        position: Position {
            line: 12,
            column: 9,
            span: 339..342,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "x",
        ),
        position: Position {
            line: 12,
            column: 11,
            span: 343..344,
        },
    },
    Token {
        kind: Then,
        lexeme: Symbol(
            "then",
        ),
        position: Position {
            line: 12,
            column: 0,
            span: 345..349,
        },
    },
    Token {
        kind: Return,
        lexeme: Symbol(
            "return",
        ),
        position: Position {
            line: 13,
            column: 11,
            span: 354..360,
        },
    },
    Token {
        kind: False,
        lexeme: Symbol(
            "false",
        ),
        position: Position {
            line: 13,
            column: 17,
            span: 361..366,
        },
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        position: Position {
            line: 14,
            column: 0,
            span: 401..404,
        },
    },
    Token {
        kind: Return,
        lexeme: Symbol(
            "return",
        ),
        position: Position {
            line: 15,
            column: 9,
            span: 407..413,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "tointeger",
        ),
        position: Position {
            line: 15,
            column: 19,
            span: 414..423,
        },
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        position: Position {
            line: 15,
            column: 20,
            span: 423..424,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "x",
        ),
        position: Position {
            line: 15,
            column: 21,
            span: 424..425,
        },
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        position: Position {
            line: 15,
            column: 22,
            span: 425..426,
        },
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        position: Position {
            line: 16,
            column: 0,
            span: 427..430,
        },
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        position: Position {
            line: 22,
            column: 6,
            span: 583..588,
        },
    },
    Token {
        kind: Function,
        lexeme: Symbol(
            "function",
        ),
        position: Position {
            line: 22,
            column: 15,
            span: 589..597,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "trymt",
        ),
        position: Position {
            line: 22,
            column: 21,
            span: 598..603,
        },
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        position: Position {
            line: 22,
            column: 23,
            span: 604..605,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "x",
        ),
        position: Position {
            line: 22,
            column: 24,
            span: 605..606,
        },
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        position: Position {
            line: 22,
            column: 25,
            span: 606..607,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "y",
        ),
        position: Position {
            line: 22,
            column: 27,
            span: 608..609,
        },
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        position: Position {
            line: 22,
            column: 28,
            span: 609..610,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "mtname",
        ),
        position: Position {
            line: 22,
            column: 35,
            span: 611..617,
        },
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        position: Position {
            line: 22,
            column: 36,
            span: 617..618,
        },
    },
    Token {
        kind: If,
        lexeme: Symbol(
            "if",
        ),
        position: Position {
            line: 23,
            column: 5,
            span: 621..623,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "type",
        ),
        position: Position {
            line: 23,
            column: 10,
            span: 624..628,
        },
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        position: Position {
            line: 23,
            column: 11,
            span: 628..629,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "y",
        ),
        position: Position {
            line: 23,
            column: 12,
            span: 629..630,
        },
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        position: Position {
            line: 23,
            column: 13,
            span: 630..631,
        },
    },
    Token {
        kind: NotEquals,
        lexeme: Symbol(
            "~=",
        ),
        position: Position {
            line: 23,
            column: 16,
            span: 632..634,
        },
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"string\"",
        ),
        position: Position {
            line: 23,
            column: 25,
            span: 635..643,
        },
    },
    Token {
        kind: Then,
        lexeme: Symbol(
            "then",
        ),
        position: Position {
            line: 23,
            column: 30,
            span: 644..648,
        },
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        position: Position {
            line: 24,
            column: 10,
            span: 695..700,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "mt",
        ),
        position: Position {
            line: 24,
            column: 13,
            span: 701..703,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 24,
            column: 15,
            span: 704..705,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "getmetatable",
        ),
        position: Position {
            line: 24,
            column: 28,
            span: 706..718,
        },
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        position: Position {
            line: 24,
            column: 29,
            span: 718..719,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "y",
        ),
        position: Position {
            line: 24,
            column: 30,
            span: 719..720,
        },
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        position: Position {
            line: 24,
            column: 31,
            span: 720..721,
        },
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        position: Position {
            line: 25,
            column: 10,
            span: 726..731,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "mm",
        ),
        position: Position {
            line: 25,
            column: 13,
            span: 732..734,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 25,
            column: 15,
            span: 735..736,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "mt",
        ),
        position: Position {
            line: 25,
            column: 18,
            span: 737..739,
        },
    },
    Token {
        kind: And,
        lexeme: Symbol(
            "and",
        ),
        position: Position {
            line: 25,
            column: 22,
            span: 740..743,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "rawget",
        ),
        position: Position {
            line: 25,
            column: 29,
            span: 744..750,
        },
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        position: Position {
            line: 25,
            column: 30,
            span: 750..751,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "mt",
        ),
        position: Position {
            line: 25,
            column: 32,
            span: 751..753,
        },
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        position: Position {
            line: 25,
            column: 33,
            span: 753..754,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "mtname",
        ),
        position: Position {
            line: 25,
            column: 40,
            span: 755..761,
        },
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        position: Position {
            line: 25,
            column: 41,
            span: 761..762,
        },
    },
    Token {
        kind: If,
        lexeme: Symbol(
            "if",
        ),
        position: Position {
            line: 26,
            column: 7,
            span: 767..769,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "mm",
        ),
        position: Position {
            line: 26,
            column: 10,
            span: 770..772,
        },
    },
    Token {
        kind: Then,
        lexeme: Symbol(
            "then",
        ),
        position: Position {
            line: 26,
            column: 0,
            span: 773..777,
        },
    },
    Token {
        kind: Return,
        lexeme: Symbol(
            "return",
        ),
        position: Position {
            line: 27,
            column: 13,
            span: 784..790,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "mm",
        ),
        position: Position {
            line: 27,
            column: 16,
            span: 791..793,
        },
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        position: Position {
            line: 27,
            column: 17,
            span: 793..794,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "x",
        ),
        position: Position {
            line: 27,
            column: 18,
            span: 794..795,
        },
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        position: Position {
            line: 27,
            column: 19,
            span: 795..796,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "y",
        ),
        position: Position {
            line: 27,
            column: 21,
            span: 797..798,
        },
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        position: Position {
            line: 27,
            column: 22,
            span: 798..799,
        },
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        position: Position {
            line: 28,
            column: 0,
            span: 804..807,
        },
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        position: Position {
            line: 29,
            column: 0,
            span: 810..813,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "error",
        ),
        position: Position {
            line: 31,
            column: 8,
            span: 882..887,
        },
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        position: Position {
            line: 31,
            column: 9,
            span: 887..888,
        },
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"attempt to '\"",
        ),
        position: Position {
            line: 31,
            column: 23,
            span: 888..902,
        },
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        position: Position {
            line: 31,
            column: 26,
            span: 903..905,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "strsub",
        ),
        position: Position {
            line: 31,
            column: 33,
            span: 906..912,
        },
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        position: Position {
            line: 31,
            column: 34,
            span: 912..913,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "mtname",
        ),
        position: Position {
            line: 31,
            column: 40,
            span: 913..919,
        },
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        position: Position {
            line: 31,
            column: 41,
            span: 919..920,
        },
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "3",
                    after_decimal: "",
                },
            ),
        ),
        position: Position {
            line: 31,
            column: 43,
            span: 920..922,
        },
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        position: Position {
            line: 31,
            column: 44,
            span: 922..923,
        },
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        position: Position {
            line: 31,
            column: 47,
            span: 924..926,
        },
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"' a \"",
        ),
        position: Position {
            line: 32,
            column: 15,
            span: 935..941,
        },
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        position: Position {
            line: 32,
            column: 18,
            span: 942..944,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "type",
        ),
        position: Position {
            line: 32,
            column: 23,
            span: 945..949,
        },
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        position: Position {
            line: 32,
            column: 24,
            span: 949..950,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "x",
        ),
        position: Position {
            line: 32,
            column: 25,
            span: 950..951,
        },
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        position: Position {
            line: 32,
            column: 26,
            span: 951..952,
        },
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        position: Position {
            line: 32,
            column: 29,
            span: 953..955,
        },
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\" with a \"",
        ),
        position: Position {
            line: 32,
            column: 40,
            span: 956..966,
        },
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        position: Position {
            line: 32,
            column: 43,
            span: 967..969,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "type",
        ),
        position: Position {
            line: 32,
            column: 48,
            span: 970..974,
        },
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        position: Position {
            line: 32,
            column: 49,
            span: 974..975,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "y",
        ),
        position: Position {
            line: 32,
            column: 50,
            span: 975..976,
        },
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        position: Position {
            line: 32,
            column: 51,
            span: 976..977,
        },
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        position: Position {
            line: 32,
            column: 52,
            span: 977..978,
        },
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "4",
                    after_decimal: "",
                },
            ),
        ),
        position: Position {
            line: 32,
            column: 54,
            span: 978..980,
        },
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        position: Position {
            line: 32,
            column: 55,
            span: 980..981,
        },
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        position: Position {
            line: 33,
            column: 0,
            span: 982..985,
        },
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        position: Position {
            line: 36,
            column: 6,
            span: 988..993,
        },
    },
    Token {
        kind: Function,
        lexeme: Symbol(
            "function",
        ),
        position: Position {
            line: 36,
            column: 15,
            span: 994..1002,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "checkargs",
        ),
        position: Position {
            line: 36,
            column: 25,
            span: 1003..1012,
        },
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        position: Position {
            line: 36,
            column: 27,
            span: 1013..1014,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "x",
        ),
        position: Position {
            line: 36,
            column: 28,
            span: 1014..1015,
        },
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        position: Position {
            line: 36,
            column: 29,
            span: 1015..1016,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "y",
        ),
        position: Position {
            line: 36,
            column: 31,
            span: 1017..1018,
        },
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        position: Position {
            line: 36,
            column: 32,
            span: 1018..1019,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "mtname",
        ),
        position: Position {
            line: 36,
            column: 39,
            span: 1020..1026,
        },
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        position: Position {
            line: 36,
            column: 40,
            span: 1026..1027,
        },
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        position: Position {
            line: 37,
            column: 8,
            span: 1030..1035,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "xi",
        ),
        position: Position {
            line: 37,
            column: 11,
            span: 1036..1038,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 37,
            column: 13,
            span: 1039..1040,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "toint",
        ),
        position: Position {
            line: 37,
            column: 19,
            span: 1041..1046,
        },
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        position: Position {
            line: 37,
            column: 20,
            span: 1046..1047,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "x",
        ),
        position: Position {
            line: 37,
            column: 21,
            span: 1047..1048,
        },
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        position: Position {
            line: 37,
            column: 22,
            span: 1048..1049,
        },
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        position: Position {
            line: 38,
            column: 8,
            span: 1052..1057,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "yi",
        ),
        position: Position {
            line: 38,
            column: 11,
            span: 1058..1060,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 38,
            column: 13,
            span: 1061..1062,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "toint",
        ),
        position: Position {
            line: 38,
            column: 19,
            span: 1063..1068,
        },
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        position: Position {
            line: 38,
            column: 20,
            span: 1068..1069,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "y",
        ),
        position: Position {
            line: 38,
            column: 21,
            span: 1069..1070,
        },
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        position: Position {
            line: 38,
            column: 22,
            span: 1070..1071,
        },
    },
    Token {
        kind: If,
        lexeme: Symbol(
            "if",
        ),
        position: Position {
            line: 39,
            column: 5,
            span: 1074..1076,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "xi",
        ),
        position: Position {
            line: 39,
            column: 8,
            span: 1077..1079,
        },
    },
    Token {
        kind: And,
        lexeme: Symbol(
            "and",
        ),
        position: Position {
            line: 39,
            column: 12,
            span: 1080..1083,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "yi",
        ),
        position: Position {
            line: 39,
            column: 15,
            span: 1084..1086,
        },
    },
    Token {
        kind: Then,
        lexeme: Symbol(
            "then",
        ),
        position: Position {
            line: 39,
            column: 0,
            span: 1087..1091,
        },
    },
    Token {
        kind: Return,
        lexeme: Symbol(
            "return",
        ),
        position: Position {
            line: 40,
            column: 11,
            span: 1096..1102,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "xi",
        ),
        position: Position {
            line: 40,
            column: 14,
            span: 1103..1105,
        },
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        position: Position {
            line: 40,
            column: 15,
            span: 1105..1106,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "yi",
        ),
        position: Position {
            line: 40,
            column: 0,
            span: 1107..1109,
        },
    },
    Token {
        kind: Else,
        lexeme: Symbol(
            "else",
        ),
        position: Position {
            line: 41,
            column: 0,
            span: 1112..1116,
        },
    },
    Token {
        kind: Return,
        lexeme: Symbol(
            "return",
        ),
        position: Position {
            line: 42,
            column: 11,
            span: 1121..1127,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "trymt",
        ),
        position: Position {
            line: 42,
            column: 17,
            span: 1128..1133,
        },
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        position: Position {
            line: 42,
            column: 18,
            span: 1133..1134,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "x",
        ),
        position: Position {
            line: 42,
            column: 19,
            span: 1134..1135,
        },
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        position: Position {
            line: 42,
            column: 20,
            span: 1135..1136,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "y",
        ),
        position: Position {
            line: 42,
            column: 22,
            span: 1137..1138,
        },
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        position: Position {
            line: 42,
            column: 23,
            span: 1138..1139,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "mtname",
        ),
        position: Position {
            line: 42,
            column: 30,
            span: 1140..1146,
        },
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        position: Position {
            line: 42,
            column: 31,
            span: 1146..1147,
        },
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        position: Position {
            line: 42,
            column: 32,
            span: 1147..1148,
        },
    },
    Token {
        kind: Nil,
        lexeme: Symbol(
            "nil",
        ),
        position: Position {
            line: 42,
            column: 0,
            span: 1149..1152,
        },
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        position: Position {
            line: 43,
            column: 0,
            span: 1155..1158,
        },
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        position: Position {
            line: 44,
            column: 0,
            span: 1159..1162,
        },
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        position: Position {
            line: 47,
            column: 6,
            span: 1165..1170,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "smt",
        ),
        position: Position {
            line: 47,
            column: 10,
            span: 1171..1174,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 47,
            column: 12,
            span: 1175..1176,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "getmetatable",
        ),
        position: Position {
            line: 47,
            column: 25,
            span: 1177..1189,
        },
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        position: Position {
            line: 47,
            column: 26,
            span: 1189..1190,
        },
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"\"",
        ),
        position: Position {
            line: 47,
            column: 28,
            span: 1190..1192,
        },
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        position: Position {
            line: 47,
            column: 29,
            span: 1192..1193,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "smt",
        ),
        position: Position {
            line: 49,
            column: 4,
            span: 1195..1198,
        },
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        position: Position {
            line: 49,
            column: 5,
            span: 1198..1199,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "__band",
        ),
        position: Position {
            line: 49,
            column: 11,
            span: 1199..1205,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 49,
            column: 13,
            span: 1206..1207,
        },
    },
    Token {
        kind: Function,
        lexeme: Symbol(
            "function",
        ),
        position: Position {
            line: 49,
            column: 22,
            span: 1208..1216,
        },
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        position: Position {
            line: 49,
            column: 24,
            span: 1217..1218,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "x",
        ),
        position: Position {
            line: 49,
            column: 25,
            span: 1218..1219,
        },
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        position: Position {
            line: 49,
            column: 26,
            span: 1219..1220,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "y",
        ),
        position: Position {
            line: 49,
            column: 28,
            span: 1221..1222,
        },
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        position: Position {
            line: 49,
            column: 29,
            span: 1222..1223,
        },
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        position: Position {
            line: 50,
            column: 8,
            span: 1226..1231,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "x",
        ),
        position: Position {
            line: 50,
            column: 10,
            span: 1232..1233,
        },
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        position: Position {
            line: 50,
            column: 11,
            span: 1233..1234,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "y",
        ),
        position: Position {
            line: 50,
            column: 13,
            span: 1235..1236,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 50,
            column: 15,
            span: 1237..1238,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "checkargs",
        ),
        position: Position {
            line: 50,
            column: 25,
            span: 1239..1248,
        },
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        position: Position {
            line: 50,
            column: 26,
            span: 1248..1249,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "x",
        ),
        position: Position {
            line: 50,
            column: 27,
            span: 1249..1250,
        },
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        position: Position {
            line: 50,
            column: 28,
            span: 1250..1251,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "y",
        ),
        position: Position {
            line: 50,
            column: 30,
            span: 1252..1253,
        },
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        position: Position {
            line: 50,
            column: 31,
            span: 1253..1254,
        },
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"__band\"",
        ),
        position: Position {
            line: 50,
            column: 40,
            span: 1255..1263,
        },
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        position: Position {
            line: 50,
            column: 41,
            span: 1263..1264,
        },
    },
    Token {
        kind: Return,
        lexeme: Symbol(
            "return",
        ),
        position: Position {
            line: 51,
            column: 9,
            span: 1267..1273,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "y",
        ),
        position: Position {
            line: 51,
            column: 11,
            span: 1274..1275,
        },
    },
    Token {
        kind: And,
        lexeme: Symbol(
            "and",
        ),
        position: Position {
            line: 51,
            column: 15,
            span: 1276..1279,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "x",
        ),
        position: Position {
            line: 51,
            column: 17,
            span: 1280..1281,
        },
    },
    Token {
        kind: BitAnd,
        lexeme: Symbol(
            "&",
        ),
        position: Position {
            line: 51,
            column: 19,
            span: 1282..1283,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "y",
        ),
        position: Position {
            line: 51,
            column: 21,
            span: 1284..1285,
        },
    },
    Token {
        kind: Or,
        lexeme: Symbol(
            "or",
        ),
        position: Position {
            line: 51,
            column: 24,
            span: 1286..1288,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "x",
        ),
        position: Position {
            line: 51,
            column: 0,
            span: 1289..1290,
        },
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        position: Position {
            line: 52,
            column: 0,
            span: 1291..1294,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "smt",
        ),
        position: Position {
            line: 54,
            column: 4,
            span: 1296..1299,
        },
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        position: Position {
            line: 54,
            column: 5,
            span: 1299..1300,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "__bor",
        ),
        position: Position {
            line: 54,
            column: 10,
            span: 1300..1305,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 54,
            column: 12,
            span: 1306..1307,
        },
    },
    Token {
        kind: Function,
        lexeme: Symbol(
            "function",
        ),
        position: Position {
            line: 54,
            column: 21,
            span: 1308..1316,
        },
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        position: Position {
            line: 54,
            column: 23,
            span: 1317..1318,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "x",
        ),
        position: Position {
            line: 54,
            column: 24,
            span: 1318..1319,
        },
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        position: Position {
            line: 54,
            column: 25,
            span: 1319..1320,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "y",
        ),
        position: Position {
            line: 54,
            column: 27,
            span: 1321..1322,
        },
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        position: Position {
            line: 54,
            column: 28,
            span: 1322..1323,
        },
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        position: Position {
            line: 55,
            column: 8,
            span: 1326..1331,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "x",
        ),
        position: Position {
            line: 55,
            column: 10,
            span: 1332..1333,
        },
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        position: Position {
            line: 55,
            column: 11,
            span: 1333..1334,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "y",
        ),
        position: Position {
            line: 55,
            column: 13,
            span: 1335..1336,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 55,
            column: 15,
            span: 1337..1338,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "checkargs",
        ),
        position: Position {
            line: 55,
            column: 25,
            span: 1339..1348,
        },
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        position: Position {
            line: 55,
            column: 26,
            span: 1348..1349,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "x",
        ),
        position: Position {
            line: 55,
            column: 27,
            span: 1349..1350,
        },
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        position: Position {
            line: 55,
            column: 28,
            span: 1350..1351,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "y",
        ),
        position: Position {
            line: 55,
            column: 30,
            span: 1352..1353,
        },
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        position: Position {
            line: 55,
            column: 31,
            span: 1353..1354,
        },
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"__bor\"",
        ),
        position: Position {
            line: 55,
            column: 39,
            span: 1355..1362,
        },
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        position: Position {
            line: 55,
            column: 40,
            span: 1362..1363,
        },
    },
    Token {
        kind: Return,
        lexeme: Symbol(
            "return",
        ),
        position: Position {
            line: 56,
            column: 9,
            span: 1366..1372,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "y",
        ),
        position: Position {
            line: 56,
            column: 11,
            span: 1373..1374,
        },
    },
    Token {
        kind: And,
        lexeme: Symbol(
            "and",
        ),
        position: Position {
            line: 56,
            column: 15,
            span: 1375..1378,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "x",
        ),
        position: Position {
            line: 56,
            column: 17,
            span: 1379..1380,
        },
    },
    Token {
        kind: BitOr,
        lexeme: Symbol(
            "|",
        ),
        position: Position {
            line: 56,
            column: 19,
            span: 1381..1382,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "y",
        ),
        position: Position {
            line: 56,
            column: 21,
            span: 1383..1384,
        },
    },
    Token {
        kind: Or,
        lexeme: Symbol(
            "or",
        ),
        position: Position {
            line: 56,
            column: 24,
            span: 1385..1387,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "x",
        ),
        position: Position {
            line: 56,
            column: 0,
            span: 1388..1389,
        },
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        position: Position {
            line: 57,
            column: 0,
            span: 1390..1393,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "smt",
        ),
        position: Position {
            line: 59,
            column: 4,
            span: 1395..1398,
        },
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        position: Position {
            line: 59,
            column: 5,
            span: 1398..1399,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "__bxor",
        ),
        position: Position {
            line: 59,
            column: 11,
            span: 1399..1405,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 59,
            column: 13,
            span: 1406..1407,
        },
    },
    Token {
        kind: Function,
        lexeme: Symbol(
            "function",
        ),
        position: Position {
            line: 59,
            column: 22,
            span: 1408..1416,
        },
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        position: Position {
            line: 59,
            column: 24,
            span: 1417..1418,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "x",
        ),
        position: Position {
            line: 59,
            column: 25,
            span: 1418..1419,
        },
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        position: Position {
            line: 59,
            column: 26,
            span: 1419..1420,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "y",
        ),
        position: Position {
            line: 59,
            column: 28,
            span: 1421..1422,
        },
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        position: Position {
            line: 59,
            column: 29,
            span: 1422..1423,
        },
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        position: Position {
            line: 60,
            column: 8,
            span: 1426..1431,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "x",
        ),
        position: Position {
            line: 60,
            column: 10,
            span: 1432..1433,
        },
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        position: Position {
            line: 60,
            column: 11,
            span: 1433..1434,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "y",
        ),
        position: Position {
            line: 60,
            column: 13,
            span: 1435..1436,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 60,
            column: 15,
            span: 1437..1438,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "checkargs",
        ),
        position: Position {
            line: 60,
            column: 25,
            span: 1439..1448,
        },
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        position: Position {
            line: 60,
            column: 26,
            span: 1448..1449,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "x",
        ),
        position: Position {
            line: 60,
            column: 27,
            span: 1449..1450,
        },
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        position: Position {
            line: 60,
            column: 28,
            span: 1450..1451,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "y",
        ),
        position: Position {
            line: 60,
            column: 30,
            span: 1452..1453,
        },
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        position: Position {
            line: 60,
            column: 31,
            span: 1453..1454,
        },
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"__bxor\"",
        ),
        position: Position {
            line: 60,
            column: 40,
            span: 1455..1463,
        },
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        position: Position {
            line: 60,
            column: 41,
            span: 1463..1464,
        },
    },
    Token {
        kind: Return,
        lexeme: Symbol(
            "return",
        ),
        position: Position {
            line: 61,
            column: 9,
            span: 1467..1473,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "y",
        ),
        position: Position {
            line: 61,
            column: 11,
            span: 1474..1475,
        },
    },
    Token {
        kind: And,
        lexeme: Symbol(
            "and",
        ),
        position: Position {
            line: 61,
            column: 15,
            span: 1476..1479,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "x",
        ),
        position: Position {
            line: 61,
            column: 17,
            span: 1480..1481,
        },
    },
    Token {
        kind: Tilde,
        lexeme: Symbol(
            "~",
        ),
        position: Position {
            line: 61,
            column: 19,
            span: 1482..1483,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "y",
        ),
        position: Position {
            line: 61,
            column: 21,
            span: 1484..1485,
        },
    },
    Token {
        kind: Or,
        lexeme: Symbol(
            "or",
        ),
        position: Position {
            line: 61,
            column: 24,
            span: 1486..1488,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "x",
        ),
        position: Position {
            line: 61,
            column: 0,
            span: 1489..1490,
        },
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        position: Position {
            line: 62,
            column: 0,
            span: 1491..1494,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "smt",
        ),
        position: Position {
            line: 64,
            column: 4,
            span: 1496..1499,
        },
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        position: Position {
            line: 64,
            column: 5,
            span: 1499..1500,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "__shl",
        ),
        position: Position {
            line: 64,
            column: 10,
            span: 1500..1505,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 64,
            column: 12,
            span: 1506..1507,
        },
    },
    Token {
        kind: Function,
        lexeme: Symbol(
            "function",
        ),
        position: Position {
            line: 64,
            column: 21,
            span: 1508..1516,
        },
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        position: Position {
            line: 64,
            column: 23,
            span: 1517..1518,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "x",
        ),
        position: Position {
            line: 64,
            column: 24,
            span: 1518..1519,
        },
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        position: Position {
            line: 64,
            column: 25,
            span: 1519..1520,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "y",
        ),
        position: Position {
            line: 64,
            column: 27,
            span: 1521..1522,
        },
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        position: Position {
            line: 64,
            column: 28,
            span: 1522..1523,
        },
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        position: Position {
            line: 65,
            column: 8,
            span: 1526..1531,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "x",
        ),
        position: Position {
            line: 65,
            column: 10,
            span: 1532..1533,
        },
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        position: Position {
            line: 65,
            column: 11,
            span: 1533..1534,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "y",
        ),
        position: Position {
            line: 65,
            column: 13,
            span: 1535..1536,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 65,
            column: 15,
            span: 1537..1538,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "checkargs",
        ),
        position: Position {
            line: 65,
            column: 25,
            span: 1539..1548,
        },
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        position: Position {
            line: 65,
            column: 26,
            span: 1548..1549,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "x",
        ),
        position: Position {
            line: 65,
            column: 27,
            span: 1549..1550,
        },
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        position: Position {
            line: 65,
            column: 28,
            span: 1550..1551,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "y",
        ),
        position: Position {
            line: 65,
            column: 30,
            span: 1552..1553,
        },
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        position: Position {
            line: 65,
            column: 31,
            span: 1553..1554,
        },
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"__shl\"",
        ),
        position: Position {
            line: 65,
            column: 39,
            span: 1555..1562,
        },
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        position: Position {
            line: 65,
            column: 40,
            span: 1562..1563,
        },
    },
    Token {
        kind: Return,
        lexeme: Symbol(
            "return",
        ),
        position: Position {
            line: 66,
            column: 9,
            span: 1566..1572,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "y",
        ),
        position: Position {
            line: 66,
            column: 11,
            span: 1573..1574,
        },
    },
    Token {
        kind: And,
        lexeme: Symbol(
            "and",
        ),
        position: Position {
            line: 66,
            column: 15,
            span: 1575..1578,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "x",
        ),
        position: Position {
            line: 66,
            column: 17,
            span: 1579..1580,
        },
    },
    Token {
        kind: BitShiftLeft,
        lexeme: Symbol(
            "<<",
        ),
        position: Position {
            line: 66,
            column: 20,
            span: 1581..1583,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "y",
        ),
        position: Position {
            line: 66,
            column: 22,
            span: 1584..1585,
        },
    },
    Token {
        kind: Or,
        lexeme: Symbol(
            "or",
        ),
        position: Position {
            line: 66,
            column: 25,
            span: 1586..1588,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "x",
        ),
        position: Position {
            line: 66,
            column: 0,
            span: 1589..1590,
        },
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        position: Position {
            line: 67,
            column: 0,
            span: 1591..1594,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "smt",
        ),
        position: Position {
            line: 69,
            column: 4,
            span: 1596..1599,
        },
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        position: Position {
            line: 69,
            column: 5,
            span: 1599..1600,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "__shr",
        ),
        position: Position {
            line: 69,
            column: 10,
            span: 1600..1605,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 69,
            column: 12,
            span: 1606..1607,
        },
    },
    Token {
        kind: Function,
        lexeme: Symbol(
            "function",
        ),
        position: Position {
            line: 69,
            column: 21,
            span: 1608..1616,
        },
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        position: Position {
            line: 69,
            column: 23,
            span: 1617..1618,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "x",
        ),
        position: Position {
            line: 69,
            column: 24,
            span: 1618..1619,
        },
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        position: Position {
            line: 69,
            column: 25,
            span: 1619..1620,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "y",
        ),
        position: Position {
            line: 69,
            column: 27,
            span: 1621..1622,
        },
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        position: Position {
            line: 69,
            column: 28,
            span: 1622..1623,
        },
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        position: Position {
            line: 70,
            column: 8,
            span: 1626..1631,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "x",
        ),
        position: Position {
            line: 70,
            column: 10,
            span: 1632..1633,
        },
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        position: Position {
            line: 70,
            column: 11,
            span: 1633..1634,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "y",
        ),
        position: Position {
            line: 70,
            column: 13,
            span: 1635..1636,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 70,
            column: 15,
            span: 1637..1638,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "checkargs",
        ),
        position: Position {
            line: 70,
            column: 25,
            span: 1639..1648,
        },
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        position: Position {
            line: 70,
            column: 26,
            span: 1648..1649,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "x",
        ),
        position: Position {
            line: 70,
            column: 27,
            span: 1649..1650,
        },
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        position: Position {
            line: 70,
            column: 28,
            span: 1650..1651,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "y",
        ),
        position: Position {
            line: 70,
            column: 30,
            span: 1652..1653,
        },
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        position: Position {
            line: 70,
            column: 31,
            span: 1653..1654,
        },
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"__shr\"",
        ),
        position: Position {
            line: 70,
            column: 39,
            span: 1655..1662,
        },
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        position: Position {
            line: 70,
            column: 40,
            span: 1662..1663,
        },
    },
    Token {
        kind: Return,
        lexeme: Symbol(
            "return",
        ),
        position: Position {
            line: 71,
            column: 9,
            span: 1666..1672,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "y",
        ),
        position: Position {
            line: 71,
            column: 11,
            span: 1673..1674,
        },
    },
    Token {
        kind: And,
        lexeme: Symbol(
            "and",
        ),
        position: Position {
            line: 71,
            column: 15,
            span: 1675..1678,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "x",
        ),
        position: Position {
            line: 71,
            column: 17,
            span: 1679..1680,
        },
    },
    Token {
        kind: BitShiftRight,
        lexeme: Symbol(
            ">>",
        ),
        position: Position {
            line: 71,
            column: 20,
            span: 1681..1683,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "y",
        ),
        position: Position {
            line: 71,
            column: 22,
            span: 1684..1685,
        },
    },
    Token {
        kind: Or,
        lexeme: Symbol(
            "or",
        ),
        position: Position {
            line: 71,
            column: 25,
            span: 1686..1688,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "x",
        ),
        position: Position {
            line: 71,
            column: 0,
            span: 1689..1690,
        },
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        position: Position {
            line: 72,
            column: 0,
            span: 1691..1694,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "smt",
        ),
        position: Position {
            line: 74,
            column: 4,
            span: 1696..1699,
        },
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        position: Position {
            line: 74,
            column: 5,
            span: 1699..1700,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "__bnot",
        ),
        position: Position {
            line: 74,
            column: 11,
            span: 1700..1706,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 74,
            column: 13,
            span: 1707..1708,
        },
    },
    Token {
        kind: Function,
        lexeme: Symbol(
            "function",
        ),
        position: Position {
            line: 74,
            column: 22,
            span: 1709..1717,
        },
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        position: Position {
            line: 74,
            column: 24,
            span: 1718..1719,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "x",
        ),
        position: Position {
            line: 74,
            column: 25,
            span: 1719..1720,
        },
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        position: Position {
            line: 74,
            column: 26,
            span: 1720..1721,
        },
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        position: Position {
            line: 75,
            column: 8,
            span: 1724..1729,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "x",
        ),
        position: Position {
            line: 75,
            column: 10,
            span: 1730..1731,
        },
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        position: Position {
            line: 75,
            column: 11,
            span: 1731..1732,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "y",
        ),
        position: Position {
            line: 75,
            column: 13,
            span: 1733..1734,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 75,
            column: 15,
            span: 1735..1736,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "checkargs",
        ),
        position: Position {
            line: 75,
            column: 25,
            span: 1737..1746,
        },
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        position: Position {
            line: 75,
            column: 26,
            span: 1746..1747,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "x",
        ),
        position: Position {
            line: 75,
            column: 27,
            span: 1747..1748,
        },
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        position: Position {
            line: 75,
            column: 28,
            span: 1748..1749,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "x",
        ),
        position: Position {
            line: 75,
            column: 30,
            span: 1750..1751,
        },
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        position: Position {
            line: 75,
            column: 31,
            span: 1751..1752,
        },
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"__bnot\"",
        ),
        position: Position {
            line: 75,
            column: 40,
            span: 1753..1761,
        },
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        position: Position {
            line: 75,
            column: 41,
            span: 1761..1762,
        },
    },
    Token {
        kind: Return,
        lexeme: Symbol(
            "return",
        ),
        position: Position {
            line: 76,
            column: 9,
            span: 1765..1771,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "y",
        ),
        position: Position {
            line: 76,
            column: 11,
            span: 1772..1773,
        },
    },
    Token {
        kind: And,
        lexeme: Symbol(
            "and",
        ),
        position: Position {
            line: 76,
            column: 15,
            span: 1774..1777,
        },
    },
    Token {
        kind: Tilde,
        lexeme: Symbol(
            "~",
        ),
        position: Position {
            line: 76,
            column: 17,
            span: 1778..1779,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "x",
        ),
        position: Position {
            line: 76,
            column: 18,
            span: 1779..1780,
        },
    },
    Token {
        kind: Or,
        lexeme: Symbol(
            "or",
        ),
        position: Position {
            line: 76,
            column: 21,
            span: 1781..1783,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "x",
        ),
        position: Position {
            line: 76,
            column: 0,
            span: 1784..1785,
        },
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        position: Position {
            line: 77,
            column: 0,
            span: 1786..1789,
        },
    },
]
