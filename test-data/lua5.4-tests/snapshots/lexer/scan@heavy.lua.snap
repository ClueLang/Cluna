---
source: src/main.rs
expression: scanned
input_file: test-data/lua5.4-tests/heavy.lua
---
[
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        line: 4,
        column: 6,
        span: 99..104,
    },
    Token {
        kind: Function,
        lexeme: Symbol(
            "function",
        ),
        line: 4,
        column: 15,
        span: 105..113,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "teststring",
        ),
        line: 4,
        column: 26,
        span: 114..124,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 4,
        column: 28,
        span: 125..126,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 4,
        column: 29,
        span: 126..127,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "print",
        ),
        line: 5,
        column: 8,
        span: 130..135,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 5,
        column: 9,
        span: 135..136,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"creating a string too long\"",
        ),
        line: 5,
        column: 37,
        span: 136..164,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 5,
        column: 38,
        span: 164..165,
    },
    Token {
        kind: Do,
        lexeme: Symbol(
            "do",
        ),
        line: 6,
        column: 0,
        span: 168..170,
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        line: 7,
        column: 10,
        span: 175..180,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 7,
        column: 12,
        span: 181..182,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 7,
        column: 14,
        span: 183..184,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"x\"",
        ),
        line: 7,
        column: 18,
        span: 185..188,
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        line: 8,
        column: 10,
        span: 193..198,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "st",
        ),
        line: 8,
        column: 13,
        span: 199..201,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 8,
        column: 14,
        span: 201..202,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "msg",
        ),
        line: 8,
        column: 18,
        span: 203..206,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 8,
        column: 20,
        span: 207..208,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "pcall",
        ),
        line: 8,
        column: 26,
        span: 209..214,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 8,
        column: 27,
        span: 214..215,
    },
    Token {
        kind: Function,
        lexeme: Symbol(
            "function",
        ),
        line: 8,
        column: 35,
        span: 215..223,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 8,
        column: 37,
        span: 224..225,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 8,
        column: 38,
        span: 225..226,
    },
    Token {
        kind: While,
        lexeme: Symbol(
            "while",
        ),
        line: 9,
        column: 12,
        span: 233..238,
    },
    Token {
        kind: True,
        lexeme: Symbol(
            "true",
        ),
        line: 9,
        column: 17,
        span: 239..243,
    },
    Token {
        kind: Do,
        lexeme: Symbol(
            "do",
        ),
        line: 9,
        column: 0,
        span: 244..246,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 10,
        column: 10,
        span: 255..256,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 10,
        column: 12,
        span: 257..258,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 10,
        column: 14,
        span: 259..260,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 10,
        column: 17,
        span: 261..263,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 10,
        column: 19,
        span: 264..265,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 10,
        column: 21,
        span: 265..267,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 10,
        column: 23,
        span: 268..269,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 10,
        column: 25,
        span: 269..271,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 10,
        column: 27,
        span: 272..273,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 10,
        column: 29,
        span: 273..275,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 10,
        column: 31,
        span: 276..277,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 10,
        column: 33,
        span: 277..279,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 10,
        column: 35,
        span: 280..281,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 10,
        column: 37,
        span: 281..283,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 10,
        column: 39,
        span: 284..285,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 10,
        column: 41,
        span: 285..287,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 10,
        column: 43,
        span: 288..289,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 10,
        column: 45,
        span: 289..291,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 10,
        column: 47,
        span: 292..293,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 10,
        column: 49,
        span: 293..295,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 10,
        column: 0,
        span: 296..297,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 11,
        column: 12,
        span: 307..309,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 11,
        column: 14,
        span: 310..311,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 11,
        column: 17,
        span: 312..314,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 11,
        column: 19,
        span: 315..316,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 11,
        column: 21,
        span: 316..318,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 11,
        column: 23,
        span: 319..320,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 11,
        column: 25,
        span: 320..322,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 11,
        column: 27,
        span: 323..324,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 11,
        column: 29,
        span: 324..326,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 11,
        column: 31,
        span: 327..328,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 11,
        column: 33,
        span: 328..330,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 11,
        column: 35,
        span: 331..332,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 11,
        column: 37,
        span: 332..334,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 11,
        column: 39,
        span: 335..336,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 11,
        column: 41,
        span: 336..338,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 11,
        column: 43,
        span: 339..340,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 11,
        column: 45,
        span: 340..342,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 11,
        column: 47,
        span: 343..344,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 11,
        column: 49,
        span: 344..346,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 11,
        column: 0,
        span: 347..348,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 12,
        column: 12,
        span: 358..360,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 12,
        column: 14,
        span: 361..362,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 12,
        column: 17,
        span: 363..365,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 12,
        column: 19,
        span: 366..367,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 12,
        column: 21,
        span: 367..369,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 12,
        column: 23,
        span: 370..371,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 12,
        column: 25,
        span: 371..373,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 12,
        column: 27,
        span: 374..375,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 12,
        column: 29,
        span: 375..377,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 12,
        column: 31,
        span: 378..379,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 12,
        column: 33,
        span: 379..381,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 12,
        column: 35,
        span: 382..383,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 12,
        column: 37,
        span: 383..385,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 12,
        column: 39,
        span: 386..387,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 12,
        column: 41,
        span: 387..389,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 12,
        column: 43,
        span: 390..391,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 12,
        column: 45,
        span: 391..393,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 12,
        column: 47,
        span: 394..395,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 12,
        column: 49,
        span: 395..397,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 12,
        column: 0,
        span: 398..399,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 13,
        column: 12,
        span: 409..411,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 13,
        column: 14,
        span: 412..413,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 13,
        column: 17,
        span: 414..416,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 13,
        column: 19,
        span: 417..418,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 13,
        column: 21,
        span: 418..420,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 13,
        column: 23,
        span: 421..422,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 13,
        column: 25,
        span: 422..424,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 13,
        column: 27,
        span: 425..426,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 13,
        column: 29,
        span: 426..428,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 13,
        column: 31,
        span: 429..430,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 13,
        column: 33,
        span: 430..432,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 13,
        column: 35,
        span: 433..434,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 13,
        column: 37,
        span: 434..436,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 13,
        column: 39,
        span: 437..438,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 13,
        column: 41,
        span: 438..440,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 13,
        column: 43,
        span: 441..442,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 13,
        column: 45,
        span: 442..444,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 13,
        column: 47,
        span: 445..446,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 13,
        column: 49,
        span: 446..448,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 13,
        column: 0,
        span: 449..450,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 14,
        column: 12,
        span: 460..462,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 14,
        column: 14,
        span: 463..464,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 14,
        column: 17,
        span: 465..467,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 14,
        column: 19,
        span: 468..469,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 14,
        column: 21,
        span: 469..471,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 14,
        column: 23,
        span: 472..473,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 14,
        column: 25,
        span: 473..475,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 14,
        column: 27,
        span: 476..477,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 14,
        column: 29,
        span: 477..479,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 14,
        column: 31,
        span: 480..481,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 14,
        column: 33,
        span: 481..483,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 14,
        column: 35,
        span: 484..485,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 14,
        column: 37,
        span: 485..487,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 14,
        column: 39,
        span: 488..489,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 14,
        column: 41,
        span: 489..491,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 14,
        column: 43,
        span: 492..493,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 14,
        column: 45,
        span: 493..495,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 14,
        column: 47,
        span: 496..497,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 14,
        column: 49,
        span: 497..499,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 14,
        column: 0,
        span: 500..501,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 15,
        column: 12,
        span: 511..513,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 15,
        column: 14,
        span: 514..515,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 15,
        column: 17,
        span: 516..518,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 15,
        column: 19,
        span: 519..520,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 15,
        column: 21,
        span: 520..522,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 15,
        column: 23,
        span: 523..524,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 15,
        column: 25,
        span: 524..526,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 15,
        column: 27,
        span: 527..528,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 15,
        column: 29,
        span: 528..530,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 15,
        column: 31,
        span: 531..532,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 15,
        column: 33,
        span: 532..534,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 15,
        column: 35,
        span: 535..536,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 15,
        column: 37,
        span: 536..538,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 15,
        column: 39,
        span: 539..540,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 15,
        column: 41,
        span: 540..542,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 15,
        column: 43,
        span: 543..544,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 15,
        column: 45,
        span: 544..546,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 15,
        column: 47,
        span: 547..548,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 15,
        column: 49,
        span: 548..550,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 15,
        column: 0,
        span: 551..552,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 16,
        column: 12,
        span: 562..564,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 16,
        column: 14,
        span: 565..566,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 16,
        column: 17,
        span: 567..569,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 16,
        column: 19,
        span: 570..571,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 16,
        column: 21,
        span: 571..573,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 16,
        column: 23,
        span: 574..575,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 16,
        column: 25,
        span: 575..577,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 16,
        column: 27,
        span: 578..579,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 16,
        column: 29,
        span: 579..581,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 16,
        column: 31,
        span: 582..583,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 16,
        column: 33,
        span: 583..585,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 16,
        column: 35,
        span: 586..587,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 16,
        column: 37,
        span: 587..589,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 16,
        column: 39,
        span: 590..591,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 16,
        column: 41,
        span: 591..593,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 16,
        column: 43,
        span: 594..595,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 16,
        column: 45,
        span: 595..597,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 16,
        column: 47,
        span: 598..599,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 16,
        column: 49,
        span: 599..601,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 16,
        column: 0,
        span: 602..603,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 17,
        column: 12,
        span: 613..615,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 17,
        column: 14,
        span: 616..617,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 17,
        column: 17,
        span: 618..620,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 17,
        column: 19,
        span: 621..622,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 17,
        column: 21,
        span: 622..624,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 17,
        column: 23,
        span: 625..626,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 17,
        column: 25,
        span: 626..628,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 17,
        column: 27,
        span: 629..630,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 17,
        column: 29,
        span: 630..632,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 17,
        column: 31,
        span: 633..634,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 17,
        column: 33,
        span: 634..636,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 17,
        column: 35,
        span: 637..638,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 17,
        column: 37,
        span: 638..640,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 17,
        column: 39,
        span: 641..642,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 17,
        column: 41,
        span: 642..644,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 17,
        column: 43,
        span: 645..646,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 17,
        column: 45,
        span: 646..648,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 17,
        column: 47,
        span: 649..650,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 17,
        column: 49,
        span: 650..652,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 17,
        column: 0,
        span: 653..654,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 18,
        column: 12,
        span: 664..666,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 18,
        column: 14,
        span: 667..668,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 18,
        column: 17,
        span: 669..671,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 18,
        column: 19,
        span: 672..673,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 18,
        column: 21,
        span: 673..675,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 18,
        column: 23,
        span: 676..677,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 18,
        column: 25,
        span: 677..679,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 18,
        column: 27,
        span: 680..681,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 18,
        column: 29,
        span: 681..683,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 18,
        column: 31,
        span: 684..685,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 18,
        column: 33,
        span: 685..687,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 18,
        column: 35,
        span: 688..689,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 18,
        column: 37,
        span: 689..691,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 18,
        column: 39,
        span: 692..693,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 18,
        column: 41,
        span: 693..695,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 18,
        column: 43,
        span: 696..697,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 18,
        column: 45,
        span: 697..699,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 18,
        column: 47,
        span: 700..701,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 18,
        column: 49,
        span: 701..703,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 18,
        column: 0,
        span: 704..705,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 19,
        column: 12,
        span: 715..717,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 19,
        column: 14,
        span: 718..719,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 19,
        column: 17,
        span: 720..722,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 19,
        column: 19,
        span: 723..724,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 19,
        column: 21,
        span: 724..726,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 19,
        column: 23,
        span: 727..728,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 19,
        column: 25,
        span: 728..730,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 19,
        column: 27,
        span: 731..732,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 19,
        column: 29,
        span: 732..734,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 19,
        column: 31,
        span: 735..736,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 19,
        column: 33,
        span: 736..738,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 19,
        column: 35,
        span: 739..740,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 19,
        column: 37,
        span: 740..742,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 19,
        column: 39,
        span: 743..744,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 19,
        column: 41,
        span: 744..746,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 19,
        column: 43,
        span: 747..748,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 19,
        column: 45,
        span: 748..750,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 19,
        column: 47,
        span: 751..752,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 19,
        column: 49,
        span: 752..754,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 19,
        column: 0,
        span: 755..756,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "print",
        ),
        line: 20,
        column: 15,
        span: 766..771,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 20,
        column: 16,
        span: 771..772,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "string",
        ),
        line: 20,
        column: 22,
        span: 772..778,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 20,
        column: 23,
        span: 778..779,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "format",
        ),
        line: 20,
        column: 29,
        span: 779..785,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 20,
        column: 30,
        span: 785..786,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"string with %d bytes\"",
        ),
        line: 20,
        column: 52,
        span: 786..808,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 20,
        column: 53,
        span: 808..809,
    },
    Token {
        kind: Hash,
        lexeme: Symbol(
            "#",
        ),
        line: 20,
        column: 55,
        span: 810..811,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 20,
        column: 56,
        span: 811..812,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 20,
        column: 57,
        span: 812..813,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 20,
        column: 58,
        span: 813..814,
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        line: 21,
        column: 0,
        span: 821..824,
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        line: 22,
        column: 8,
        span: 829..832,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 22,
        column: 9,
        span: 832..833,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 23,
        column: 11,
        span: 838..844,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 23,
        column: 12,
        span: 844..845,
    },
    Token {
        kind: Not,
        lexeme: Symbol(
            "not",
        ),
        line: 23,
        column: 15,
        span: 845..848,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "st",
        ),
        line: 23,
        column: 18,
        span: 849..851,
    },
    Token {
        kind: And,
        lexeme: Symbol(
            "and",
        ),
        line: 23,
        column: 0,
        span: 852..855,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 24,
        column: 8,
        span: 862..863,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "string",
        ),
        line: 24,
        column: 14,
        span: 863..869,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 24,
        column: 15,
        span: 869..870,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "find",
        ),
        line: 24,
        column: 19,
        span: 870..874,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 24,
        column: 20,
        span: 874..875,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "msg",
        ),
        line: 24,
        column: 23,
        span: 875..878,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 24,
        column: 24,
        span: 878..879,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"string length overflow\"",
        ),
        line: 24,
        column: 49,
        span: 880..904,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 24,
        column: 50,
        span: 904..905,
    },
    Token {
        kind: Or,
        lexeme: Symbol(
            "or",
        ),
        line: 24,
        column: 0,
        span: 906..908,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "string",
        ),
        line: 25,
        column: 14,
        span: 916..922,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 25,
        column: 15,
        span: 922..923,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "find",
        ),
        line: 25,
        column: 19,
        span: 923..927,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 25,
        column: 20,
        span: 927..928,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "msg",
        ),
        line: 25,
        column: 23,
        span: 928..931,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 25,
        column: 24,
        span: 931..932,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"not enough memory\"",
        ),
        line: 25,
        column: 44,
        span: 933..952,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 25,
        column: 45,
        span: 952..953,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 25,
        column: 46,
        span: 953..954,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 25,
        column: 47,
        span: 954..955,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "print",
        ),
        line: 26,
        column: 10,
        span: 960..965,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 26,
        column: 11,
        span: 965..966,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"string length overflow with \"",
        ),
        line: 26,
        column: 41,
        span: 966..996,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 26,
        column: 44,
        span: 997..999,
    },
    Token {
        kind: Hash,
        lexeme: Symbol(
            "#",
        ),
        line: 26,
        column: 46,
        span: 1000..1001,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 26,
        column: 47,
        span: 1001..1002,
    },
    Token {
        kind: Star,
        lexeme: Symbol(
            "*",
        ),
        line: 26,
        column: 49,
        span: 1003..1004,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "100",
                    after_decimal: "",
                },
            ),
        ),
        line: 26,
        column: 53,
        span: 1004..1008,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 26,
        column: 54,
        span: 1008..1009,
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        line: 27,
        column: 0,
        span: 1012..1015,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "print",
        ),
        line: 28,
        column: 8,
        span: 1018..1023,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 28,
        column: 9,
        span: 1023..1024,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'+'",
        ),
        line: 28,
        column: 12,
        span: 1024..1027,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 28,
        column: 13,
        span: 1027..1028,
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        line: 29,
        column: 0,
        span: 1029..1032,
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        line: 31,
        column: 6,
        span: 1034..1039,
    },
    Token {
        kind: Function,
        lexeme: Symbol(
            "function",
        ),
        line: 31,
        column: 15,
        span: 1040..1048,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "loadrep",
        ),
        line: 31,
        column: 23,
        span: 1049..1056,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 31,
        column: 25,
        span: 1057..1058,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "x",
        ),
        line: 31,
        column: 26,
        span: 1058..1059,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 31,
        column: 27,
        span: 1059..1060,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "what",
        ),
        line: 31,
        column: 32,
        span: 1061..1065,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 31,
        column: 33,
        span: 1065..1066,
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        line: 32,
        column: 8,
        span: 1069..1074,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "p",
        ),
        line: 32,
        column: 10,
        span: 1075..1076,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 32,
        column: 12,
        span: 1077..1078,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "1",
                    after_decimal: "",
                },
            ),
        ),
        line: 32,
        column: 14,
        span: 1078..1080,
    },
    Token {
        kind: BitShiftLeft,
        lexeme: Symbol(
            "<<",
        ),
        line: 32,
        column: 16,
        span: 1080..1082,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "20",
                    after_decimal: "",
                },
            ),
        ),
        line: 32,
        column: 0,
        span: 1081..1084,
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        line: 33,
        column: 8,
        span: 1087..1092,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "s",
        ),
        line: 33,
        column: 10,
        span: 1093..1094,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 33,
        column: 12,
        span: 1095..1096,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "string",
        ),
        line: 33,
        column: 19,
        span: 1097..1103,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 33,
        column: 20,
        span: 1103..1104,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "rep",
        ),
        line: 33,
        column: 23,
        span: 1104..1107,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 33,
        column: 24,
        span: 1107..1108,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "x",
        ),
        line: 33,
        column: 25,
        span: 1108..1109,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 33,
        column: 26,
        span: 1109..1110,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "p",
        ),
        line: 33,
        column: 28,
        span: 1111..1112,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 33,
        column: 29,
        span: 1112..1113,
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        line: 34,
        column: 8,
        span: 1116..1121,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "count",
        ),
        line: 34,
        column: 14,
        span: 1122..1127,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 34,
        column: 16,
        span: 1128..1129,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "0",
                    after_decimal: "",
                },
            ),
        ),
        line: 34,
        column: 0,
        span: 1129..1131,
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        line: 35,
        column: 8,
        span: 1134..1139,
    },
    Token {
        kind: Function,
        lexeme: Symbol(
            "function",
        ),
        line: 35,
        column: 17,
        span: 1140..1148,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "f",
        ),
        line: 35,
        column: 19,
        span: 1149..1150,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 35,
        column: 20,
        span: 1150..1151,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 35,
        column: 21,
        span: 1151..1152,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "count",
        ),
        line: 36,
        column: 10,
        span: 1157..1162,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 36,
        column: 12,
        span: 1163..1164,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "count",
        ),
        line: 36,
        column: 18,
        span: 1165..1170,
    },
    Token {
        kind: Plus,
        lexeme: Symbol(
            "+",
        ),
        line: 36,
        column: 20,
        span: 1171..1172,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "p",
        ),
        line: 36,
        column: 0,
        span: 1173..1174,
    },
    Token {
        kind: If,
        lexeme: Symbol(
            "if",
        ),
        line: 37,
        column: 7,
        span: 1179..1181,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "count",
        ),
        line: 37,
        column: 13,
        span: 1182..1187,
    },
    Token {
        kind: Percent,
        lexeme: Symbol(
            "%",
        ),
        line: 37,
        column: 15,
        span: 1188..1189,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 37,
        column: 17,
        span: 1190..1191,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Hex(
                "0x80",
            ),
        ),
        line: 37,
        column: 21,
        span: 1190..1195,
    },
    Token {
        kind: Star,
        lexeme: Symbol(
            "*",
        ),
        line: 37,
        column: 22,
        span: 1195..1196,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "p",
        ),
        line: 37,
        column: 23,
        span: 1196..1197,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 37,
        column: 24,
        span: 1197..1198,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 37,
        column: 27,
        span: 1199..1201,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "0",
                    after_decimal: "",
                },
            ),
        ),
        line: 37,
        column: 29,
        span: 1201..1203,
    },
    Token {
        kind: Then,
        lexeme: Symbol(
            "then",
        ),
        line: 37,
        column: 0,
        span: 1204..1208,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 38,
        column: 9,
        span: 1215..1217,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 38,
        column: 10,
        span: 1217..1218,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "stderr",
        ),
        line: 38,
        column: 16,
        span: 1218..1224,
    },
    Token {
        kind: Colon,
        lexeme: Symbol(
            ":",
        ),
        line: 38,
        column: 17,
        span: 1224..1225,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "write",
        ),
        line: 38,
        column: 22,
        span: 1225..1230,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 38,
        column: 23,
        span: 1230..1231,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"(\"",
        ),
        line: 38,
        column: 26,
        span: 1231..1234,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 38,
        column: 27,
        span: 1234..1235,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "count",
        ),
        line: 38,
        column: 33,
        span: 1236..1241,
    },
    Token {
        kind: FloorDiv,
        lexeme: Symbol(
            "//",
        ),
        line: 38,
        column: 36,
        span: 1242..1244,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "2",
                    after_decimal: "",
                },
            ),
        ),
        line: 38,
        column: 38,
        span: 1244..1246,
    },
    Token {
        kind: Caret,
        lexeme: Symbol(
            "^",
        ),
        line: 38,
        column: 39,
        span: 1246..1247,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "20",
                    after_decimal: "",
                },
            ),
        ),
        line: 38,
        column: 41,
        span: 1246..1249,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 38,
        column: 42,
        span: 1249..1250,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\" M)\"",
        ),
        line: 38,
        column: 48,
        span: 1251..1256,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 38,
        column: 49,
        span: 1256..1257,
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        line: 39,
        column: 0,
        span: 1262..1265,
    },
    Token {
        kind: Return,
        lexeme: Symbol(
            "return",
        ),
        line: 40,
        column: 11,
        span: 1270..1276,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "s",
        ),
        line: 40,
        column: 0,
        span: 1277..1278,
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        line: 41,
        column: 0,
        span: 1281..1284,
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        line: 42,
        column: 8,
        span: 1287..1292,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "st",
        ),
        line: 42,
        column: 11,
        span: 1293..1295,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 42,
        column: 12,
        span: 1295..1296,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "msg",
        ),
        line: 42,
        column: 16,
        span: 1297..1300,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 42,
        column: 18,
        span: 1301..1302,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "load",
        ),
        line: 42,
        column: 23,
        span: 1303..1307,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 42,
        column: 24,
        span: 1307..1308,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "f",
        ),
        line: 42,
        column: 25,
        span: 1308..1309,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 42,
        column: 26,
        span: 1309..1310,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"=big\"",
        ),
        line: 42,
        column: 33,
        span: 1311..1317,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 42,
        column: 34,
        span: 1317..1318,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "print",
        ),
        line: 43,
        column: 8,
        span: 1321..1326,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 43,
        column: 9,
        span: 1326..1327,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"\\nmemory: \"",
        ),
        line: 43,
        column: 21,
        span: 1327..1339,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 43,
        column: 22,
        span: 1339..1340,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "collectgarbage",
        ),
        line: 43,
        column: 37,
        span: 1341..1355,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'count'",
        ),
        line: 43,
        column: 44,
        span: 1355..1362,
    },
    Token {
        kind: Star,
        lexeme: Symbol(
            "*",
        ),
        line: 43,
        column: 46,
        span: 1363..1364,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "1024",
                    after_decimal: "",
                },
            ),
        ),
        line: 43,
        column: 51,
        span: 1364..1369,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 43,
        column: 52,
        span: 1369..1370,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "msg",
        ),
        line: 44,
        column: 6,
        span: 1373..1376,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 44,
        column: 8,
        span: 1377..1378,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "string",
        ),
        line: 44,
        column: 15,
        span: 1379..1385,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 44,
        column: 16,
        span: 1385..1386,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "match",
        ),
        line: 44,
        column: 21,
        span: 1386..1391,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 44,
        column: 22,
        span: 1391..1392,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "msg",
        ),
        line: 44,
        column: 25,
        span: 1392..1395,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 44,
        column: 26,
        span: 1395..1396,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"^[^\\n]+\"",
        ),
        line: 44,
        column: 36,
        span: 1397..1406,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 44,
        column: 37,
        span: 1406..1407,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "print",
        ),
        line: 45,
        column: 8,
        span: 1436..1441,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 45,
        column: 9,
        span: 1441..1442,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "string",
        ),
        line: 45,
        column: 15,
        span: 1442..1448,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 45,
        column: 16,
        span: 1448..1449,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "format",
        ),
        line: 45,
        column: 22,
        span: 1449..1455,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 45,
        column: 23,
        span: 1455..1456,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"total: 0x%x %s ('%s')\"",
        ),
        line: 45,
        column: 46,
        span: 1456..1479,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 45,
        column: 47,
        span: 1479..1480,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "count",
        ),
        line: 45,
        column: 53,
        span: 1481..1486,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 45,
        column: 54,
        span: 1486..1487,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "what",
        ),
        line: 45,
        column: 59,
        span: 1488..1492,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 45,
        column: 60,
        span: 1492..1493,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "msg",
        ),
        line: 45,
        column: 64,
        span: 1494..1497,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 45,
        column: 65,
        span: 1497..1498,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 45,
        column: 66,
        span: 1498..1499,
    },
    Token {
        kind: Return,
        lexeme: Symbol(
            "return",
        ),
        line: 46,
        column: 9,
        span: 1502..1508,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "st",
        ),
        line: 46,
        column: 12,
        span: 1509..1511,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 46,
        column: 13,
        span: 1511..1512,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "msg",
        ),
        line: 46,
        column: 0,
        span: 1513..1516,
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        line: 47,
        column: 0,
        span: 1517..1520,
    },
    Token {
        kind: Function,
        lexeme: Symbol(
            "function",
        ),
        line: 50,
        column: 9,
        span: 1523..1531,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "controlstruct",
        ),
        line: 50,
        column: 23,
        span: 1532..1545,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 50,
        column: 25,
        span: 1546..1547,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 50,
        column: 26,
        span: 1547..1548,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "print",
        ),
        line: 51,
        column: 8,
        span: 1551..1556,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 51,
        column: 9,
        span: 1556..1557,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"control structure too long\"",
        ),
        line: 51,
        column: 37,
        span: 1557..1585,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 51,
        column: 38,
        span: 1585..1586,
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        line: 52,
        column: 8,
        span: 1589..1594,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "lim",
        ),
        line: 52,
        column: 12,
        span: 1595..1598,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 52,
        column: 14,
        span: 1599..1600,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 52,
        column: 16,
        span: 1601..1602,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 52,
        column: 17,
        span: 1602..1603,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "1",
                    after_decimal: "",
                },
            ),
        ),
        line: 52,
        column: 18,
        span: 1602..1604,
    },
    Token {
        kind: BitShiftLeft,
        lexeme: Symbol(
            "<<",
        ),
        line: 52,
        column: 21,
        span: 1605..1607,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "24",
                    after_decimal: "",
                },
            ),
        ),
        line: 52,
        column: 24,
        span: 1607..1610,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 52,
        column: 25,
        span: 1610..1611,
    },
    Token {
        kind: Minus,
        lexeme: Symbol(
            "-",
        ),
        line: 52,
        column: 27,
        span: 1612..1613,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "2",
                    after_decimal: "",
                },
            ),
        ),
        line: 52,
        column: 29,
        span: 1613..1615,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 52,
        column: 30,
        span: 1615..1616,
    },
    Token {
        kind: FloorDiv,
        lexeme: Symbol(
            "//",
        ),
        line: 52,
        column: 33,
        span: 1617..1619,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "3",
                    after_decimal: "",
                },
            ),
        ),
        line: 52,
        column: 0,
        span: 1619..1621,
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        line: 53,
        column: 8,
        span: 1624..1629,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "s",
        ),
        line: 53,
        column: 10,
        span: 1630..1631,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 53,
        column: 12,
        span: 1632..1633,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "string",
        ),
        line: 53,
        column: 19,
        span: 1634..1640,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 53,
        column: 20,
        span: 1640..1641,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "rep",
        ),
        line: 53,
        column: 23,
        span: 1641..1644,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 53,
        column: 24,
        span: 1644..1645,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"a = a + 1\\n\"",
        ),
        line: 53,
        column: 37,
        span: 1645..1658,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 53,
        column: 38,
        span: 1658..1659,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "lim",
        ),
        line: 53,
        column: 42,
        span: 1660..1663,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 53,
        column: 43,
        span: 1663..1664,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "s",
        ),
        line: 54,
        column: 4,
        span: 1667..1668,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 54,
        column: 6,
        span: 1669..1670,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"while true do \"",
        ),
        line: 54,
        column: 23,
        span: 1671..1687,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 54,
        column: 26,
        span: 1688..1690,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "s",
        ),
        line: 54,
        column: 28,
        span: 1691..1692,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 54,
        column: 31,
        span: 1693..1695,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"end\"",
        ),
        line: 54,
        column: 37,
        span: 1696..1701,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 55,
        column: 9,
        span: 1704..1710,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 55,
        column: 10,
        span: 1710..1711,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "load",
        ),
        line: 55,
        column: 14,
        span: 1711..1715,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 55,
        column: 15,
        span: 1715..1716,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "s",
        ),
        line: 55,
        column: 16,
        span: 1716..1717,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 55,
        column: 17,
        span: 1717..1718,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 55,
        column: 18,
        span: 1718..1719,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "print",
        ),
        line: 56,
        column: 8,
        span: 1722..1727,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 56,
        column: 9,
        span: 1727..1728,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"ok with \"",
        ),
        line: 56,
        column: 19,
        span: 1728..1738,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 56,
        column: 22,
        span: 1739..1741,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "lim",
        ),
        line: 56,
        column: 26,
        span: 1742..1745,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 56,
        column: 29,
        span: 1746..1748,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\" lines\"",
        ),
        line: 56,
        column: 38,
        span: 1749..1757,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 56,
        column: 39,
        span: 1757..1758,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "lim",
        ),
        line: 57,
        column: 6,
        span: 1761..1764,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 57,
        column: 8,
        span: 1765..1766,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "lim",
        ),
        line: 57,
        column: 12,
        span: 1767..1770,
    },
    Token {
        kind: Plus,
        lexeme: Symbol(
            "+",
        ),
        line: 57,
        column: 14,
        span: 1771..1772,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "3",
                    after_decimal: "",
                },
            ),
        ),
        line: 57,
        column: 0,
        span: 1772..1774,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "s",
        ),
        line: 58,
        column: 4,
        span: 1777..1778,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 58,
        column: 6,
        span: 1779..1780,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "string",
        ),
        line: 58,
        column: 13,
        span: 1781..1787,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 58,
        column: 14,
        span: 1787..1788,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "rep",
        ),
        line: 58,
        column: 17,
        span: 1788..1791,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 58,
        column: 18,
        span: 1791..1792,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"a = a + 1\\n\"",
        ),
        line: 58,
        column: 31,
        span: 1792..1805,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 58,
        column: 32,
        span: 1805..1806,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "lim",
        ),
        line: 58,
        column: 36,
        span: 1807..1810,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 58,
        column: 37,
        span: 1810..1811,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "s",
        ),
        line: 59,
        column: 4,
        span: 1814..1815,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 59,
        column: 6,
        span: 1816..1817,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"while true do \"",
        ),
        line: 59,
        column: 23,
        span: 1818..1834,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 59,
        column: 26,
        span: 1835..1837,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "s",
        ),
        line: 59,
        column: 28,
        span: 1838..1839,
    },
    Token {
        kind: DoubleDot,
        lexeme: Symbol(
            "..",
        ),
        line: 59,
        column: 31,
        span: 1840..1842,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"end\"",
        ),
        line: 59,
        column: 37,
        span: 1843..1848,
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        line: 60,
        column: 8,
        span: 1851..1856,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "st",
        ),
        line: 60,
        column: 11,
        span: 1857..1859,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 60,
        column: 12,
        span: 1859..1860,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "msg",
        ),
        line: 60,
        column: 16,
        span: 1861..1864,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 60,
        column: 18,
        span: 1865..1866,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "load",
        ),
        line: 60,
        column: 23,
        span: 1867..1871,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 60,
        column: 24,
        span: 1871..1872,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "s",
        ),
        line: 60,
        column: 25,
        span: 1872..1873,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 60,
        column: 26,
        span: 1873..1874,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 61,
        column: 9,
        span: 1877..1883,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 61,
        column: 10,
        span: 1883..1884,
    },
    Token {
        kind: Not,
        lexeme: Symbol(
            "not",
        ),
        line: 61,
        column: 13,
        span: 1884..1887,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "st",
        ),
        line: 61,
        column: 16,
        span: 1888..1890,
    },
    Token {
        kind: And,
        lexeme: Symbol(
            "and",
        ),
        line: 61,
        column: 20,
        span: 1891..1894,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "string",
        ),
        line: 61,
        column: 27,
        span: 1895..1901,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 61,
        column: 28,
        span: 1901..1902,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "find",
        ),
        line: 61,
        column: 32,
        span: 1902..1906,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 61,
        column: 33,
        span: 1906..1907,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "msg",
        ),
        line: 61,
        column: 36,
        span: 1907..1910,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 61,
        column: 37,
        span: 1910..1911,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"too long\"",
        ),
        line: 61,
        column: 48,
        span: 1912..1922,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 61,
        column: 49,
        span: 1922..1923,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 61,
        column: 50,
        span: 1923..1924,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "print",
        ),
        line: 62,
        column: 8,
        span: 1927..1932,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 62,
        column: 9,
        span: 1932..1933,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "msg",
        ),
        line: 62,
        column: 12,
        span: 1933..1936,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 62,
        column: 13,
        span: 1936..1937,
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        line: 63,
        column: 0,
        span: 1938..1941,
    },
    Token {
        kind: Function,
        lexeme: Symbol(
            "function",
        ),
        line: 66,
        column: 9,
        span: 1944..1952,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "manylines",
        ),
        line: 66,
        column: 19,
        span: 1953..1962,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 66,
        column: 21,
        span: 1963..1964,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 66,
        column: 22,
        span: 1964..1965,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "print",
        ),
        line: 67,
        column: 8,
        span: 1968..1973,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 67,
        column: 9,
        span: 1973..1974,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"loading chunk with too many lines\"",
        ),
        line: 67,
        column: 44,
        span: 1974..2009,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 67,
        column: 45,
        span: 2009..2010,
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        line: 68,
        column: 8,
        span: 2013..2018,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "st",
        ),
        line: 68,
        column: 11,
        span: 2019..2021,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 68,
        column: 12,
        span: 2021..2022,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "msg",
        ),
        line: 68,
        column: 16,
        span: 2023..2026,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 68,
        column: 18,
        span: 2027..2028,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "loadrep",
        ),
        line: 68,
        column: 26,
        span: 2029..2036,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 68,
        column: 27,
        span: 2036..2037,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"\\n\"",
        ),
        line: 68,
        column: 31,
        span: 2037..2041,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 68,
        column: 32,
        span: 2041..2042,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"lines\"",
        ),
        line: 68,
        column: 40,
        span: 2043..2050,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 68,
        column: 41,
        span: 2050..2051,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 69,
        column: 9,
        span: 2054..2060,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 69,
        column: 10,
        span: 2060..2061,
    },
    Token {
        kind: Not,
        lexeme: Symbol(
            "not",
        ),
        line: 69,
        column: 13,
        span: 2061..2064,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "st",
        ),
        line: 69,
        column: 16,
        span: 2065..2067,
    },
    Token {
        kind: And,
        lexeme: Symbol(
            "and",
        ),
        line: 69,
        column: 20,
        span: 2068..2071,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "string",
        ),
        line: 69,
        column: 27,
        span: 2072..2078,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 69,
        column: 28,
        span: 2078..2079,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "find",
        ),
        line: 69,
        column: 32,
        span: 2079..2083,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 69,
        column: 33,
        span: 2083..2084,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "msg",
        ),
        line: 69,
        column: 36,
        span: 2084..2087,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 69,
        column: 37,
        span: 2087..2088,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"too many lines\"",
        ),
        line: 69,
        column: 54,
        span: 2089..2105,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 69,
        column: 55,
        span: 2105..2106,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 69,
        column: 56,
        span: 2106..2107,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "print",
        ),
        line: 70,
        column: 8,
        span: 2110..2115,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 70,
        column: 9,
        span: 2115..2116,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'+'",
        ),
        line: 70,
        column: 12,
        span: 2116..2119,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 70,
        column: 13,
        span: 2119..2120,
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        line: 71,
        column: 0,
        span: 2121..2124,
    },
    Token {
        kind: Function,
        lexeme: Symbol(
            "function",
        ),
        line: 74,
        column: 9,
        span: 2127..2135,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "hugeid",
        ),
        line: 74,
        column: 16,
        span: 2136..2142,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 74,
        column: 18,
        span: 2143..2144,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 74,
        column: 19,
        span: 2144..2145,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "print",
        ),
        line: 75,
        column: 8,
        span: 2148..2153,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 75,
        column: 9,
        span: 2153..2154,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"loading chunk with huge identifier\"",
        ),
        line: 75,
        column: 45,
        span: 2154..2190,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 75,
        column: 46,
        span: 2190..2191,
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        line: 76,
        column: 8,
        span: 2194..2199,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "st",
        ),
        line: 76,
        column: 11,
        span: 2200..2202,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 76,
        column: 12,
        span: 2202..2203,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "msg",
        ),
        line: 76,
        column: 16,
        span: 2204..2207,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 76,
        column: 18,
        span: 2208..2209,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "loadrep",
        ),
        line: 76,
        column: 26,
        span: 2210..2217,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 76,
        column: 27,
        span: 2217..2218,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"a\"",
        ),
        line: 76,
        column: 30,
        span: 2218..2221,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 76,
        column: 31,
        span: 2221..2222,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"chars\"",
        ),
        line: 76,
        column: 39,
        span: 2223..2230,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 76,
        column: 40,
        span: 2230..2231,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 77,
        column: 9,
        span: 2234..2240,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 77,
        column: 10,
        span: 2240..2241,
    },
    Token {
        kind: Not,
        lexeme: Symbol(
            "not",
        ),
        line: 77,
        column: 13,
        span: 2241..2244,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "st",
        ),
        line: 77,
        column: 16,
        span: 2245..2247,
    },
    Token {
        kind: And,
        lexeme: Symbol(
            "and",
        ),
        line: 77,
        column: 20,
        span: 2248..2251,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 78,
        column: 6,
        span: 2257..2258,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "string",
        ),
        line: 78,
        column: 12,
        span: 2258..2264,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 78,
        column: 13,
        span: 2264..2265,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "find",
        ),
        line: 78,
        column: 17,
        span: 2265..2269,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 78,
        column: 18,
        span: 2269..2270,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "msg",
        ),
        line: 78,
        column: 21,
        span: 2270..2273,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 78,
        column: 22,
        span: 2273..2274,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"lexical element too long\"",
        ),
        line: 78,
        column: 49,
        span: 2275..2301,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 78,
        column: 50,
        span: 2301..2302,
    },
    Token {
        kind: Or,
        lexeme: Symbol(
            "or",
        ),
        line: 78,
        column: 0,
        span: 2303..2305,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "string",
        ),
        line: 79,
        column: 12,
        span: 2311..2317,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 79,
        column: 13,
        span: 2317..2318,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "find",
        ),
        line: 79,
        column: 17,
        span: 2318..2322,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 79,
        column: 18,
        span: 2322..2323,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "msg",
        ),
        line: 79,
        column: 21,
        span: 2323..2326,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 79,
        column: 22,
        span: 2326..2327,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"not enough memory\"",
        ),
        line: 79,
        column: 42,
        span: 2328..2347,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 79,
        column: 43,
        span: 2347..2348,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 79,
        column: 44,
        span: 2348..2349,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 79,
        column: 45,
        span: 2349..2350,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "print",
        ),
        line: 80,
        column: 8,
        span: 2353..2358,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 80,
        column: 9,
        span: 2358..2359,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'+'",
        ),
        line: 80,
        column: 12,
        span: 2359..2362,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 80,
        column: 13,
        span: 2362..2363,
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        line: 81,
        column: 0,
        span: 2364..2367,
    },
    Token {
        kind: Function,
        lexeme: Symbol(
            "function",
        ),
        line: 83,
        column: 9,
        span: 2369..2377,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "toomanyinst",
        ),
        line: 83,
        column: 21,
        span: 2378..2389,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 83,
        column: 23,
        span: 2390..2391,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 83,
        column: 24,
        span: 2391..2392,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "print",
        ),
        line: 84,
        column: 8,
        span: 2395..2400,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 84,
        column: 9,
        span: 2400..2401,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"loading chunk with too many instructions\"",
        ),
        line: 84,
        column: 51,
        span: 2401..2443,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 84,
        column: 52,
        span: 2443..2444,
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        line: 85,
        column: 8,
        span: 2447..2452,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "st",
        ),
        line: 85,
        column: 11,
        span: 2453..2455,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 85,
        column: 12,
        span: 2455..2456,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "msg",
        ),
        line: 85,
        column: 16,
        span: 2457..2460,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 85,
        column: 18,
        span: 2461..2462,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "loadrep",
        ),
        line: 85,
        column: 26,
        span: 2463..2470,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 85,
        column: 27,
        span: 2470..2471,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"a = 10; \"",
        ),
        line: 85,
        column: 37,
        span: 2471..2481,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 85,
        column: 38,
        span: 2481..2482,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"instructions\"",
        ),
        line: 85,
        column: 53,
        span: 2483..2497,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 85,
        column: 54,
        span: 2497..2498,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "print",
        ),
        line: 86,
        column: 8,
        span: 2501..2506,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 86,
        column: 9,
        span: 2506..2507,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'+'",
        ),
        line: 86,
        column: 12,
        span: 2507..2510,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 86,
        column: 13,
        span: 2510..2511,
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        line: 87,
        column: 0,
        span: 2512..2515,
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        line: 90,
        column: 6,
        span: 2518..2523,
    },
    Token {
        kind: Function,
        lexeme: Symbol(
            "function",
        ),
        line: 90,
        column: 15,
        span: 2524..2532,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "loadrepfunc",
        ),
        line: 90,
        column: 27,
        span: 2533..2544,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 90,
        column: 29,
        span: 2545..2546,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "prefix",
        ),
        line: 90,
        column: 35,
        span: 2546..2552,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 90,
        column: 36,
        span: 2552..2553,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "f",
        ),
        line: 90,
        column: 38,
        span: 2554..2555,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 90,
        column: 39,
        span: 2555..2556,
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        line: 91,
        column: 8,
        span: 2559..2564,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "count",
        ),
        line: 91,
        column: 14,
        span: 2565..2570,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 91,
        column: 16,
        span: 2571..2572,
    },
    Token {
        kind: Minus,
        lexeme: Symbol(
            "-",
        ),
        line: 91,
        column: 18,
        span: 2573..2574,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "1",
                    after_decimal: "",
                },
            ),
        ),
        line: 91,
        column: 0,
        span: 2573..2575,
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        line: 92,
        column: 8,
        span: 2578..2583,
    },
    Token {
        kind: Function,
        lexeme: Symbol(
            "function",
        ),
        line: 92,
        column: 17,
        span: 2584..2592,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "aux",
        ),
        line: 92,
        column: 21,
        span: 2593..2596,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 92,
        column: 23,
        span: 2597..2598,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 92,
        column: 24,
        span: 2598..2599,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "count",
        ),
        line: 93,
        column: 10,
        span: 2604..2609,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 93,
        column: 12,
        span: 2610..2611,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "count",
        ),
        line: 93,
        column: 18,
        span: 2612..2617,
    },
    Token {
        kind: Plus,
        lexeme: Symbol(
            "+",
        ),
        line: 93,
        column: 20,
        span: 2618..2619,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "1",
                    after_decimal: "",
                },
            ),
        ),
        line: 93,
        column: 0,
        span: 2619..2621,
    },
    Token {
        kind: If,
        lexeme: Symbol(
            "if",
        ),
        line: 94,
        column: 7,
        span: 2626..2628,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "count",
        ),
        line: 94,
        column: 13,
        span: 2629..2634,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 94,
        column: 16,
        span: 2635..2637,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "0",
                    after_decimal: "",
                },
            ),
        ),
        line: 94,
        column: 18,
        span: 2637..2639,
    },
    Token {
        kind: Then,
        lexeme: Symbol(
            "then",
        ),
        line: 94,
        column: 0,
        span: 2640..2644,
    },
    Token {
        kind: Return,
        lexeme: Symbol(
            "return",
        ),
        line: 95,
        column: 13,
        span: 2651..2657,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "prefix",
        ),
        line: 95,
        column: 0,
        span: 2658..2664,
    },
    Token {
        kind: Else,
        lexeme: Symbol(
            "else",
        ),
        line: 96,
        column: 0,
        span: 2669..2673,
    },
    Token {
        kind: If,
        lexeme: Symbol(
            "if",
        ),
        line: 97,
        column: 9,
        span: 2680..2682,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "count",
        ),
        line: 97,
        column: 15,
        span: 2683..2688,
    },
    Token {
        kind: Percent,
        lexeme: Symbol(
            "%",
        ),
        line: 97,
        column: 17,
        span: 2689..2690,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 97,
        column: 19,
        span: 2691..2692,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Hex(
                "0x100000",
            ),
        ),
        line: 97,
        column: 27,
        span: 2691..2700,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 97,
        column: 28,
        span: 2700..2701,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 97,
        column: 31,
        span: 2702..2704,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "0",
                    after_decimal: "",
                },
            ),
        ),
        line: 97,
        column: 33,
        span: 2704..2706,
    },
    Token {
        kind: Then,
        lexeme: Symbol(
            "then",
        ),
        line: 97,
        column: 0,
        span: 2707..2711,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 98,
        column: 11,
        span: 2720..2722,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 98,
        column: 12,
        span: 2722..2723,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "stderr",
        ),
        line: 98,
        column: 18,
        span: 2723..2729,
    },
    Token {
        kind: Colon,
        lexeme: Symbol(
            ":",
        ),
        line: 98,
        column: 19,
        span: 2729..2730,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "write",
        ),
        line: 98,
        column: 24,
        span: 2730..2735,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 98,
        column: 25,
        span: 2735..2736,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"(\"",
        ),
        line: 98,
        column: 28,
        span: 2736..2739,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 98,
        column: 29,
        span: 2739..2740,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "count",
        ),
        line: 98,
        column: 35,
        span: 2741..2746,
    },
    Token {
        kind: FloorDiv,
        lexeme: Symbol(
            "//",
        ),
        line: 98,
        column: 38,
        span: 2747..2749,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "2",
                    after_decimal: "",
                },
            ),
        ),
        line: 98,
        column: 40,
        span: 2749..2751,
    },
    Token {
        kind: Caret,
        lexeme: Symbol(
            "^",
        ),
        line: 98,
        column: 41,
        span: 2751..2752,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "20",
                    after_decimal: "",
                },
            ),
        ),
        line: 98,
        column: 43,
        span: 2751..2754,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 98,
        column: 44,
        span: 2754..2755,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\" M)\"",
        ),
        line: 98,
        column: 50,
        span: 2756..2761,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 98,
        column: 51,
        span: 2761..2762,
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        line: 99,
        column: 0,
        span: 2769..2772,
    },
    Token {
        kind: Return,
        lexeme: Symbol(
            "return",
        ),
        line: 100,
        column: 13,
        span: 2779..2785,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "f",
        ),
        line: 100,
        column: 15,
        span: 2786..2787,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 100,
        column: 16,
        span: 2787..2788,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "count",
        ),
        line: 100,
        column: 21,
        span: 2788..2793,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 100,
        column: 22,
        span: 2793..2794,
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        line: 101,
        column: 0,
        span: 2799..2802,
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        line: 102,
        column: 0,
        span: 2805..2808,
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        line: 103,
        column: 8,
        span: 2811..2816,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "st",
        ),
        line: 103,
        column: 11,
        span: 2817..2819,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 103,
        column: 12,
        span: 2819..2820,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "msg",
        ),
        line: 103,
        column: 16,
        span: 2821..2824,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 103,
        column: 18,
        span: 2825..2826,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "load",
        ),
        line: 103,
        column: 23,
        span: 2827..2831,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 103,
        column: 24,
        span: 2831..2832,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "aux",
        ),
        line: 103,
        column: 27,
        span: 2832..2835,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 103,
        column: 28,
        span: 2835..2836,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"k\"",
        ),
        line: 103,
        column: 32,
        span: 2837..2840,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 103,
        column: 33,
        span: 2840..2841,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "print",
        ),
        line: 104,
        column: 8,
        span: 2844..2849,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 104,
        column: 9,
        span: 2849..2850,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"\\nmemory: \"",
        ),
        line: 104,
        column: 21,
        span: 2850..2862,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 104,
        column: 22,
        span: 2862..2863,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "collectgarbage",
        ),
        line: 104,
        column: 37,
        span: 2864..2878,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'count'",
        ),
        line: 104,
        column: 44,
        span: 2878..2885,
    },
    Token {
        kind: Star,
        lexeme: Symbol(
            "*",
        ),
        line: 104,
        column: 46,
        span: 2886..2887,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "1024",
                    after_decimal: "",
                },
            ),
        ),
        line: 104,
        column: 51,
        span: 2887..2892,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 104,
        column: 52,
        span: 2892..2893,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "msg",
        ),
        line: 105,
        column: 6,
        span: 2896..2899,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 105,
        column: 8,
        span: 2900..2901,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "string",
        ),
        line: 105,
        column: 15,
        span: 2902..2908,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 105,
        column: 16,
        span: 2908..2909,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "match",
        ),
        line: 105,
        column: 21,
        span: 2909..2914,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 105,
        column: 22,
        span: 2914..2915,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "msg",
        ),
        line: 105,
        column: 25,
        span: 2915..2918,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 105,
        column: 26,
        span: 2918..2919,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"^[^\\n]+\"",
        ),
        line: 105,
        column: 36,
        span: 2920..2929,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 105,
        column: 37,
        span: 2929..2930,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "print",
        ),
        line: 106,
        column: 8,
        span: 2959..2964,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 106,
        column: 9,
        span: 2964..2965,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"expected error: \"",
        ),
        line: 106,
        column: 27,
        span: 2965..2983,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 106,
        column: 28,
        span: 2983..2984,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "msg",
        ),
        line: 106,
        column: 32,
        span: 2985..2988,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 106,
        column: 33,
        span: 2988..2989,
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        line: 107,
        column: 0,
        span: 2990..2993,
    },
    Token {
        kind: Function,
        lexeme: Symbol(
            "function",
        ),
        line: 110,
        column: 9,
        span: 2996..3004,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "toomanyconst",
        ),
        line: 110,
        column: 22,
        span: 3005..3017,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 110,
        column: 24,
        span: 3018..3019,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 110,
        column: 25,
        span: 3019..3020,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "print",
        ),
        line: 111,
        column: 8,
        span: 3023..3028,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 111,
        column: 9,
        span: 3028..3029,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"loading function with too many constants\"",
        ),
        line: 111,
        column: 51,
        span: 3029..3071,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 111,
        column: 52,
        span: 3071..3072,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "loadrepfunc",
        ),
        line: 112,
        column: 14,
        span: 3075..3086,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 112,
        column: 15,
        span: 3086..3087,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"function foo () return {0,\"",
        ),
        line: 112,
        column: 43,
        span: 3087..3115,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 112,
        column: 44,
        span: 3115..3116,
    },
    Token {
        kind: Function,
        lexeme: Symbol(
            "function",
        ),
        line: 113,
        column: 15,
        span: 3123..3131,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 113,
        column: 17,
        span: 3132..3133,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "n",
        ),
        line: 113,
        column: 18,
        span: 3133..3134,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 113,
        column: 19,
        span: 3134..3135,
    },
    Token {
        kind: Return,
        lexeme: Symbol(
            "return",
        ),
        line: 118,
        column: 15,
        span: 3357..3363,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "string",
        ),
        line: 118,
        column: 22,
        span: 3364..3370,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 118,
        column: 23,
        span: 3370..3371,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "char",
        ),
        line: 118,
        column: 27,
        span: 3371..3375,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 118,
        column: 28,
        span: 3375..3376,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "34",
                    after_decimal: "",
                },
            ),
        ),
        line: 118,
        column: 30,
        span: 3375..3378,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 118,
        column: 31,
        span: 3378..3379,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 119,
        column: 12,
        span: 3390..3391,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 119,
        column: 13,
        span: 3391..3392,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "n",
        ),
        line: 119,
        column: 14,
        span: 3392..3393,
    },
    Token {
        kind: FloorDiv,
        lexeme: Symbol(
            "//",
        ),
        line: 119,
        column: 17,
        span: 3394..3396,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "128",
                    after_decimal: "",
                },
            ),
        ),
        line: 119,
        column: 21,
        span: 3396..3400,
    },
    Token {
        kind: Caret,
        lexeme: Symbol(
            "^",
        ),
        line: 119,
        column: 22,
        span: 3400..3401,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "0",
                    after_decimal: "",
                },
            ),
        ),
        line: 119,
        column: 23,
        span: 3400..3402,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 119,
        column: 24,
        span: 3402..3403,
    },
    Token {
        kind: BitAnd,
        lexeme: Symbol(
            "&",
        ),
        line: 119,
        column: 26,
        span: 3404..3405,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "127",
                    after_decimal: "",
                },
            ),
        ),
        line: 119,
        column: 30,
        span: 3405..3409,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 119,
        column: 31,
        span: 3409..3410,
    },
    Token {
        kind: Plus,
        lexeme: Symbol(
            "+",
        ),
        line: 119,
        column: 33,
        span: 3411..3412,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "128",
                    after_decimal: "",
                },
            ),
        ),
        line: 119,
        column: 37,
        span: 3412..3416,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 119,
        column: 38,
        span: 3416..3417,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 120,
        column: 12,
        span: 3428..3429,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 120,
        column: 13,
        span: 3429..3430,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "n",
        ),
        line: 120,
        column: 14,
        span: 3430..3431,
    },
    Token {
        kind: FloorDiv,
        lexeme: Symbol(
            "//",
        ),
        line: 120,
        column: 17,
        span: 3432..3434,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "128",
                    after_decimal: "",
                },
            ),
        ),
        line: 120,
        column: 21,
        span: 3434..3438,
    },
    Token {
        kind: Caret,
        lexeme: Symbol(
            "^",
        ),
        line: 120,
        column: 22,
        span: 3438..3439,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "1",
                    after_decimal: "",
                },
            ),
        ),
        line: 120,
        column: 23,
        span: 3438..3440,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 120,
        column: 24,
        span: 3440..3441,
    },
    Token {
        kind: BitAnd,
        lexeme: Symbol(
            "&",
        ),
        line: 120,
        column: 26,
        span: 3442..3443,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "127",
                    after_decimal: "",
                },
            ),
        ),
        line: 120,
        column: 30,
        span: 3443..3447,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 120,
        column: 31,
        span: 3447..3448,
    },
    Token {
        kind: Plus,
        lexeme: Symbol(
            "+",
        ),
        line: 120,
        column: 33,
        span: 3449..3450,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "128",
                    after_decimal: "",
                },
            ),
        ),
        line: 120,
        column: 37,
        span: 3450..3454,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 120,
        column: 38,
        span: 3454..3455,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 121,
        column: 12,
        span: 3466..3467,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 121,
        column: 13,
        span: 3467..3468,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "n",
        ),
        line: 121,
        column: 14,
        span: 3468..3469,
    },
    Token {
        kind: FloorDiv,
        lexeme: Symbol(
            "//",
        ),
        line: 121,
        column: 17,
        span: 3470..3472,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "128",
                    after_decimal: "",
                },
            ),
        ),
        line: 121,
        column: 21,
        span: 3472..3476,
    },
    Token {
        kind: Caret,
        lexeme: Symbol(
            "^",
        ),
        line: 121,
        column: 22,
        span: 3476..3477,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "2",
                    after_decimal: "",
                },
            ),
        ),
        line: 121,
        column: 23,
        span: 3476..3478,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 121,
        column: 24,
        span: 3478..3479,
    },
    Token {
        kind: BitAnd,
        lexeme: Symbol(
            "&",
        ),
        line: 121,
        column: 26,
        span: 3480..3481,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "127",
                    after_decimal: "",
                },
            ),
        ),
        line: 121,
        column: 30,
        span: 3481..3485,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 121,
        column: 31,
        span: 3485..3486,
    },
    Token {
        kind: Plus,
        lexeme: Symbol(
            "+",
        ),
        line: 121,
        column: 33,
        span: 3487..3488,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "128",
                    after_decimal: "",
                },
            ),
        ),
        line: 121,
        column: 37,
        span: 3488..3492,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 121,
        column: 38,
        span: 3492..3493,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 122,
        column: 12,
        span: 3504..3505,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 122,
        column: 13,
        span: 3505..3506,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "n",
        ),
        line: 122,
        column: 14,
        span: 3506..3507,
    },
    Token {
        kind: FloorDiv,
        lexeme: Symbol(
            "//",
        ),
        line: 122,
        column: 17,
        span: 3508..3510,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "128",
                    after_decimal: "",
                },
            ),
        ),
        line: 122,
        column: 21,
        span: 3510..3514,
    },
    Token {
        kind: Caret,
        lexeme: Symbol(
            "^",
        ),
        line: 122,
        column: 22,
        span: 3514..3515,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "3",
                    after_decimal: "",
                },
            ),
        ),
        line: 122,
        column: 23,
        span: 3514..3516,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 122,
        column: 24,
        span: 3516..3517,
    },
    Token {
        kind: BitAnd,
        lexeme: Symbol(
            "&",
        ),
        line: 122,
        column: 26,
        span: 3518..3519,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "127",
                    after_decimal: "",
                },
            ),
        ),
        line: 122,
        column: 30,
        span: 3519..3523,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 122,
        column: 31,
        span: 3523..3524,
    },
    Token {
        kind: Plus,
        lexeme: Symbol(
            "+",
        ),
        line: 122,
        column: 33,
        span: 3525..3526,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "128",
                    after_decimal: "",
                },
            ),
        ),
        line: 122,
        column: 37,
        span: 3526..3530,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 122,
        column: 38,
        span: 3530..3531,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 123,
        column: 12,
        span: 3542..3543,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 123,
        column: 13,
        span: 3543..3544,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "n",
        ),
        line: 123,
        column: 14,
        span: 3544..3545,
    },
    Token {
        kind: FloorDiv,
        lexeme: Symbol(
            "//",
        ),
        line: 123,
        column: 17,
        span: 3546..3548,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "128",
                    after_decimal: "",
                },
            ),
        ),
        line: 123,
        column: 21,
        span: 3548..3552,
    },
    Token {
        kind: Caret,
        lexeme: Symbol(
            "^",
        ),
        line: 123,
        column: 22,
        span: 3552..3553,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "4",
                    after_decimal: "",
                },
            ),
        ),
        line: 123,
        column: 23,
        span: 3552..3554,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 123,
        column: 24,
        span: 3554..3555,
    },
    Token {
        kind: BitAnd,
        lexeme: Symbol(
            "&",
        ),
        line: 123,
        column: 26,
        span: 3556..3557,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "127",
                    after_decimal: "",
                },
            ),
        ),
        line: 123,
        column: 30,
        span: 3557..3561,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 123,
        column: 31,
        span: 3561..3562,
    },
    Token {
        kind: Plus,
        lexeme: Symbol(
            "+",
        ),
        line: 123,
        column: 33,
        span: 3563..3564,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "128",
                    after_decimal: "",
                },
            ),
        ),
        line: 123,
        column: 37,
        span: 3564..3568,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 123,
        column: 38,
        span: 3568..3569,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "34",
                    after_decimal: "",
                },
            ),
        ),
        line: 124,
        column: 13,
        span: 3579..3582,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 124,
        column: 14,
        span: 3582..3583,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "44",
                    after_decimal: "",
                },
            ),
        ),
        line: 124,
        column: 17,
        span: 3583..3586,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 124,
        column: 18,
        span: 3586..3587,
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        line: 125,
        column: 10,
        span: 3594..3597,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 125,
        column: 11,
        span: 3597..3598,
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        line: 126,
        column: 0,
        span: 3599..3602,
    },
    Token {
        kind: Function,
        lexeme: Symbol(
            "function",
        ),
        line: 129,
        column: 9,
        span: 3605..3613,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "toomanystr",
        ),
        line: 129,
        column: 20,
        span: 3614..3624,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 129,
        column: 22,
        span: 3625..3626,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 129,
        column: 23,
        span: 3626..3627,
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        line: 130,
        column: 8,
        span: 3630..3635,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 130,
        column: 10,
        span: 3636..3637,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 130,
        column: 12,
        span: 3638..3639,
    },
    Token {
        kind: LeftBrace,
        lexeme: Symbol(
            "{",
        ),
        line: 130,
        column: 14,
        span: 3640..3641,
    },
    Token {
        kind: RightBrace,
        lexeme: Symbol(
            "}",
        ),
        line: 130,
        column: 15,
        span: 3641..3642,
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        line: 131,
        column: 8,
        span: 3645..3650,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "st",
        ),
        line: 131,
        column: 11,
        span: 3651..3653,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 131,
        column: 12,
        span: 3653..3654,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "msg",
        ),
        line: 131,
        column: 16,
        span: 3655..3658,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 131,
        column: 18,
        span: 3659..3660,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "pcall",
        ),
        line: 131,
        column: 24,
        span: 3661..3666,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 131,
        column: 25,
        span: 3666..3667,
    },
    Token {
        kind: Function,
        lexeme: Symbol(
            "function",
        ),
        line: 131,
        column: 33,
        span: 3667..3675,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 131,
        column: 35,
        span: 3676..3677,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 131,
        column: 36,
        span: 3677..3678,
    },
    Token {
        kind: For,
        lexeme: Symbol(
            "for",
        ),
        line: 132,
        column: 8,
        span: 3683..3686,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "i",
        ),
        line: 132,
        column: 10,
        span: 3687..3688,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 132,
        column: 12,
        span: 3689..3690,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "1",
                    after_decimal: "",
                },
            ),
        ),
        line: 132,
        column: 14,
        span: 3690..3692,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 132,
        column: 15,
        span: 3692..3693,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "math",
        ),
        line: 132,
        column: 20,
        span: 3694..3698,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 132,
        column: 21,
        span: 3698..3699,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "huge",
        ),
        line: 132,
        column: 25,
        span: 3699..3703,
    },
    Token {
        kind: Do,
        lexeme: Symbol(
            "do",
        ),
        line: 132,
        column: 0,
        span: 3704..3706,
    },
    Token {
        kind: If,
        lexeme: Symbol(
            "if",
        ),
        line: 133,
        column: 9,
        span: 3713..3715,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "i",
        ),
        line: 133,
        column: 11,
        span: 3716..3717,
    },
    Token {
        kind: Percent,
        lexeme: Symbol(
            "%",
        ),
        line: 133,
        column: 13,
        span: 3718..3719,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 133,
        column: 15,
        span: 3720..3721,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Hex(
                "0x100000",
            ),
        ),
        line: 133,
        column: 23,
        span: 3720..3729,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 133,
        column: 24,
        span: 3729..3730,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 133,
        column: 27,
        span: 3731..3733,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "0",
                    after_decimal: "",
                },
            ),
        ),
        line: 133,
        column: 29,
        span: 3733..3735,
    },
    Token {
        kind: Then,
        lexeme: Symbol(
            "then",
        ),
        line: 133,
        column: 0,
        span: 3736..3740,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 134,
        column: 11,
        span: 3749..3751,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 134,
        column: 12,
        span: 3751..3752,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "stderr",
        ),
        line: 134,
        column: 18,
        span: 3752..3758,
    },
    Token {
        kind: Colon,
        lexeme: Symbol(
            ":",
        ),
        line: 134,
        column: 19,
        span: 3758..3759,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "write",
        ),
        line: 134,
        column: 24,
        span: 3759..3764,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 134,
        column: 25,
        span: 3764..3765,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"(\"",
        ),
        line: 134,
        column: 28,
        span: 3765..3768,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 134,
        column: 29,
        span: 3768..3769,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "i",
        ),
        line: 134,
        column: 31,
        span: 3770..3771,
    },
    Token {
        kind: FloorDiv,
        lexeme: Symbol(
            "//",
        ),
        line: 134,
        column: 34,
        span: 3772..3774,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "2",
                    after_decimal: "",
                },
            ),
        ),
        line: 134,
        column: 36,
        span: 3774..3776,
    },
    Token {
        kind: Caret,
        lexeme: Symbol(
            "^",
        ),
        line: 134,
        column: 37,
        span: 3776..3777,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "20",
                    after_decimal: "",
                },
            ),
        ),
        line: 134,
        column: 39,
        span: 3776..3779,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 134,
        column: 40,
        span: 3779..3780,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\" M)\"",
        ),
        line: 134,
        column: 46,
        span: 3781..3786,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 134,
        column: 47,
        span: 3786..3787,
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        line: 135,
        column: 0,
        span: 3794..3797,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 136,
        column: 8,
        span: 3804..3805,
    },
    Token {
        kind: LeftBracket,
        lexeme: Symbol(
            "[",
        ),
        line: 136,
        column: 9,
        span: 3805..3806,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "i",
        ),
        line: 136,
        column: 10,
        span: 3806..3807,
    },
    Token {
        kind: RightBracket,
        lexeme: Symbol(
            "]",
        ),
        line: 136,
        column: 11,
        span: 3807..3808,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 136,
        column: 13,
        span: 3809..3810,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "string",
        ),
        line: 136,
        column: 20,
        span: 3811..3817,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 136,
        column: 21,
        span: 3817..3818,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "pack",
        ),
        line: 136,
        column: 25,
        span: 3818..3822,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 136,
        column: 26,
        span: 3822..3823,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"I\"",
        ),
        line: 136,
        column: 29,
        span: 3823..3826,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 136,
        column: 30,
        span: 3826..3827,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "i",
        ),
        line: 136,
        column: 32,
        span: 3828..3829,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 136,
        column: 33,
        span: 3829..3830,
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        line: 137,
        column: 0,
        span: 3836..3839,
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        line: 138,
        column: 6,
        span: 3842..3845,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 138,
        column: 7,
        span: 3845..3846,
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        line: 139,
        column: 8,
        span: 3849..3854,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "size",
        ),
        line: 139,
        column: 13,
        span: 3855..3859,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 139,
        column: 15,
        span: 3860..3861,
    },
    Token {
        kind: Hash,
        lexeme: Symbol(
            "#",
        ),
        line: 139,
        column: 17,
        span: 3862..3863,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 139,
        column: 0,
        span: 3863..3864,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 140,
        column: 4,
        span: 3867..3868,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 140,
        column: 6,
        span: 3869..3870,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "collectgarbage",
        ),
        line: 140,
        column: 21,
        span: 3871..3885,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'count'",
        ),
        line: 140,
        column: 28,
        span: 3885..3892,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "print",
        ),
        line: 141,
        column: 8,
        span: 3895..3900,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 141,
        column: 9,
        span: 3900..3901,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"\\nmemory:\"",
        ),
        line: 141,
        column: 20,
        span: 3901..3912,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 141,
        column: 21,
        span: 3912..3913,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 141,
        column: 23,
        span: 3914..3915,
    },
    Token {
        kind: Star,
        lexeme: Symbol(
            "*",
        ),
        line: 141,
        column: 25,
        span: 3916..3917,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "1024",
                    after_decimal: "",
                },
            ),
        ),
        line: 141,
        column: 30,
        span: 3917..3922,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 141,
        column: 31,
        span: 3922..3923,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "print",
        ),
        line: 142,
        column: 8,
        span: 3926..3931,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 142,
        column: 9,
        span: 3931..3932,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"expected error:\"",
        ),
        line: 142,
        column: 26,
        span: 3932..3949,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 142,
        column: 27,
        span: 3949..3950,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "msg",
        ),
        line: 142,
        column: 31,
        span: 3951..3954,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 142,
        column: 32,
        span: 3954..3955,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "print",
        ),
        line: 143,
        column: 8,
        span: 3958..3963,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 143,
        column: 9,
        span: 3963..3964,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"size:\"",
        ),
        line: 143,
        column: 16,
        span: 3964..3971,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 143,
        column: 17,
        span: 3971..3972,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "size",
        ),
        line: 143,
        column: 22,
        span: 3973..3977,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 143,
        column: 23,
        span: 3977..3978,
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        line: 144,
        column: 0,
        span: 3979..3982,
    },
    Token {
        kind: Function,
        lexeme: Symbol(
            "function",
        ),
        line: 147,
        column: 9,
        span: 3985..3993,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "toomanyidx",
        ),
        line: 147,
        column: 20,
        span: 3994..4004,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 147,
        column: 22,
        span: 4005..4006,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 147,
        column: 23,
        span: 4006..4007,
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        line: 148,
        column: 8,
        span: 4010..4015,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 148,
        column: 10,
        span: 4016..4017,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 148,
        column: 12,
        span: 4018..4019,
    },
    Token {
        kind: LeftBrace,
        lexeme: Symbol(
            "{",
        ),
        line: 148,
        column: 14,
        span: 4020..4021,
    },
    Token {
        kind: RightBrace,
        lexeme: Symbol(
            "}",
        ),
        line: 148,
        column: 15,
        span: 4021..4022,
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        line: 149,
        column: 8,
        span: 4025..4030,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "st",
        ),
        line: 149,
        column: 11,
        span: 4031..4033,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 149,
        column: 12,
        span: 4033..4034,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "msg",
        ),
        line: 149,
        column: 16,
        span: 4035..4038,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 149,
        column: 18,
        span: 4039..4040,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "pcall",
        ),
        line: 149,
        column: 24,
        span: 4041..4046,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 149,
        column: 25,
        span: 4046..4047,
    },
    Token {
        kind: Function,
        lexeme: Symbol(
            "function",
        ),
        line: 149,
        column: 33,
        span: 4047..4055,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 149,
        column: 35,
        span: 4056..4057,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 149,
        column: 36,
        span: 4057..4058,
    },
    Token {
        kind: For,
        lexeme: Symbol(
            "for",
        ),
        line: 150,
        column: 8,
        span: 4063..4066,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "i",
        ),
        line: 150,
        column: 10,
        span: 4067..4068,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 150,
        column: 12,
        span: 4069..4070,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "1",
                    after_decimal: "",
                },
            ),
        ),
        line: 150,
        column: 14,
        span: 4070..4072,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 150,
        column: 15,
        span: 4072..4073,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "math",
        ),
        line: 150,
        column: 20,
        span: 4074..4078,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 150,
        column: 21,
        span: 4078..4079,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "huge",
        ),
        line: 150,
        column: 25,
        span: 4079..4083,
    },
    Token {
        kind: Do,
        lexeme: Symbol(
            "do",
        ),
        line: 150,
        column: 0,
        span: 4084..4086,
    },
    Token {
        kind: If,
        lexeme: Symbol(
            "if",
        ),
        line: 151,
        column: 9,
        span: 4093..4095,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "i",
        ),
        line: 151,
        column: 11,
        span: 4096..4097,
    },
    Token {
        kind: Percent,
        lexeme: Symbol(
            "%",
        ),
        line: 151,
        column: 13,
        span: 4098..4099,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 151,
        column: 15,
        span: 4100..4101,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Hex(
                "0x100000",
            ),
        ),
        line: 151,
        column: 23,
        span: 4100..4109,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 151,
        column: 24,
        span: 4109..4110,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 151,
        column: 27,
        span: 4111..4113,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "0",
                    after_decimal: "",
                },
            ),
        ),
        line: 151,
        column: 29,
        span: 4113..4115,
    },
    Token {
        kind: Then,
        lexeme: Symbol(
            "then",
        ),
        line: 151,
        column: 0,
        span: 4116..4120,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 152,
        column: 11,
        span: 4129..4131,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 152,
        column: 12,
        span: 4131..4132,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "stderr",
        ),
        line: 152,
        column: 18,
        span: 4132..4138,
    },
    Token {
        kind: Colon,
        lexeme: Symbol(
            ":",
        ),
        line: 152,
        column: 19,
        span: 4138..4139,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "write",
        ),
        line: 152,
        column: 24,
        span: 4139..4144,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 152,
        column: 25,
        span: 4144..4145,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"(\"",
        ),
        line: 152,
        column: 28,
        span: 4145..4148,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 152,
        column: 29,
        span: 4148..4149,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "i",
        ),
        line: 152,
        column: 31,
        span: 4150..4151,
    },
    Token {
        kind: FloorDiv,
        lexeme: Symbol(
            "//",
        ),
        line: 152,
        column: 34,
        span: 4152..4154,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "2",
                    after_decimal: "",
                },
            ),
        ),
        line: 152,
        column: 36,
        span: 4154..4156,
    },
    Token {
        kind: Caret,
        lexeme: Symbol(
            "^",
        ),
        line: 152,
        column: 37,
        span: 4156..4157,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "20",
                    after_decimal: "",
                },
            ),
        ),
        line: 152,
        column: 39,
        span: 4156..4159,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 152,
        column: 40,
        span: 4159..4160,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\" M)\"",
        ),
        line: 152,
        column: 46,
        span: 4161..4166,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 152,
        column: 47,
        span: 4166..4167,
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        line: 153,
        column: 0,
        span: 4174..4177,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 154,
        column: 8,
        span: 4184..4185,
    },
    Token {
        kind: LeftBracket,
        lexeme: Symbol(
            "[",
        ),
        line: 154,
        column: 9,
        span: 4185..4186,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "i",
        ),
        line: 154,
        column: 10,
        span: 4186..4187,
    },
    Token {
        kind: RightBracket,
        lexeme: Symbol(
            "]",
        ),
        line: 154,
        column: 11,
        span: 4187..4188,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 154,
        column: 13,
        span: 4189..4190,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "i",
        ),
        line: 154,
        column: 0,
        span: 4191..4192,
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        line: 155,
        column: 0,
        span: 4198..4201,
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        line: 156,
        column: 6,
        span: 4204..4207,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 156,
        column: 7,
        span: 4207..4208,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "print",
        ),
        line: 157,
        column: 8,
        span: 4211..4216,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 157,
        column: 9,
        span: 4216..4217,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"\\nmemory: \"",
        ),
        line: 157,
        column: 21,
        span: 4217..4229,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 157,
        column: 22,
        span: 4229..4230,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "collectgarbage",
        ),
        line: 157,
        column: 37,
        span: 4231..4245,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'count'",
        ),
        line: 157,
        column: 44,
        span: 4245..4252,
    },
    Token {
        kind: Star,
        lexeme: Symbol(
            "*",
        ),
        line: 157,
        column: 46,
        span: 4253..4254,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "1024",
                    after_decimal: "",
                },
            ),
        ),
        line: 157,
        column: 51,
        span: 4254..4259,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 157,
        column: 52,
        span: 4259..4260,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "print",
        ),
        line: 158,
        column: 8,
        span: 4263..4268,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 158,
        column: 9,
        span: 4268..4269,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"expected error: \"",
        ),
        line: 158,
        column: 27,
        span: 4269..4287,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 158,
        column: 28,
        span: 4287..4288,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "msg",
        ),
        line: 158,
        column: 32,
        span: 4289..4292,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 158,
        column: 33,
        span: 4292..4293,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "print",
        ),
        line: 159,
        column: 8,
        span: 4296..4301,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 159,
        column: 9,
        span: 4301..4302,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"size:\"",
        ),
        line: 159,
        column: 16,
        span: 4302..4309,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 159,
        column: 17,
        span: 4309..4310,
    },
    Token {
        kind: Hash,
        lexeme: Symbol(
            "#",
        ),
        line: 159,
        column: 19,
        span: 4311..4312,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        line: 159,
        column: 20,
        span: 4312..4313,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 159,
        column: 21,
        span: 4313..4314,
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        line: 160,
        column: 0,
        span: 4315..4318,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "toomanyidx",
        ),
        line: 171,
        column: 11,
        span: 4437..4447,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 171,
        column: 12,
        span: 4447..4448,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 171,
        column: 13,
        span: 4448..4449,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "print",
        ),
        line: 173,
        column: 6,
        span: 4451..4456,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"OK\"",
        ),
        line: 173,
        column: 11,
        span: 4457..4461,
    },
]
