---
source: src/main.rs
expression: scanned
input_file: test-data/lua5.3-tests/verybig.lua
---
[
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "print",
        ),
        line: 4,
        column: 6,
        span: 102..107,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"testing RK\"",
        ),
        line: 4,
        column: 19,
        span: 108..120,
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        line: 7,
        column: 6,
        span: 179..184,
    },
    Token {
        kind: Function,
        lexeme: Symbol(
            "function",
        ),
        line: 7,
        column: 15,
        span: 185..193,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "foo",
        ),
        line: 7,
        column: 19,
        span: 194..197,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 7,
        column: 21,
        span: 198..199,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 7,
        column: 22,
        span: 199..200,
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        line: 8,
        column: 8,
        span: 203..208,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "dummy",
        ),
        line: 8,
        column: 14,
        span: 209..214,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 8,
        column: 16,
        span: 215..216,
    },
    Token {
        kind: LeftBrace,
        lexeme: Symbol(
            "{",
        ),
        line: 8,
        column: 18,
        span: 217..218,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "1",
                    after_decimal: "",
                },
            ),
        ),
        line: 10,
        column: 7,
        span: 276..278,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 10,
        column: 8,
        span: 278..279,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "2",
                    after_decimal: "",
                },
            ),
        ),
        line: 10,
        column: 10,
        span: 279..281,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 10,
        column: 11,
        span: 281..282,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "3",
                    after_decimal: "",
                },
            ),
        ),
        line: 10,
        column: 13,
        span: 282..284,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 10,
        column: 14,
        span: 284..285,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "4",
                    after_decimal: "",
                },
            ),
        ),
        line: 10,
        column: 16,
        span: 285..287,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 10,
        column: 17,
        span: 287..288,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "5",
                    after_decimal: "",
                },
            ),
        ),
        line: 10,
        column: 19,
        span: 288..290,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 10,
        column: 20,
        span: 290..291,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "6",
                    after_decimal: "",
                },
            ),
        ),
        line: 10,
        column: 22,
        span: 291..293,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 10,
        column: 23,
        span: 293..294,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "7",
                    after_decimal: "",
                },
            ),
        ),
        line: 10,
        column: 25,
        span: 294..296,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 10,
        column: 26,
        span: 296..297,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "8",
                    after_decimal: "",
                },
            ),
        ),
        line: 10,
        column: 28,
        span: 297..299,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 10,
        column: 29,
        span: 299..300,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "9",
                    after_decimal: "",
                },
            ),
        ),
        line: 10,
        column: 31,
        span: 300..302,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 10,
        column: 32,
        span: 302..303,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "10",
                    after_decimal: "",
                },
            ),
        ),
        line: 10,
        column: 35,
        span: 303..306,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 10,
        column: 36,
        span: 306..307,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "11",
                    after_decimal: "",
                },
            ),
        ),
        line: 10,
        column: 39,
        span: 307..310,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 10,
        column: 40,
        span: 310..311,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "12",
                    after_decimal: "",
                },
            ),
        ),
        line: 10,
        column: 43,
        span: 311..314,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 10,
        column: 44,
        span: 314..315,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "13",
                    after_decimal: "",
                },
            ),
        ),
        line: 10,
        column: 47,
        span: 315..318,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 10,
        column: 48,
        span: 318..319,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "14",
                    after_decimal: "",
                },
            ),
        ),
        line: 10,
        column: 51,
        span: 319..322,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 10,
        column: 52,
        span: 322..323,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "15",
                    after_decimal: "",
                },
            ),
        ),
        line: 10,
        column: 55,
        span: 323..326,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 10,
        column: 56,
        span: 326..327,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "16",
                    after_decimal: "",
                },
            ),
        ),
        line: 10,
        column: 59,
        span: 327..330,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 10,
        column: 60,
        span: 330..331,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "17",
                    after_decimal: "",
                },
            ),
        ),
        line: 11,
        column: 8,
        span: 336..339,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 11,
        column: 9,
        span: 339..340,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "18",
                    after_decimal: "",
                },
            ),
        ),
        line: 11,
        column: 12,
        span: 340..343,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 11,
        column: 13,
        span: 343..344,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "19",
                    after_decimal: "",
                },
            ),
        ),
        line: 11,
        column: 16,
        span: 344..347,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 11,
        column: 17,
        span: 347..348,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "20",
                    after_decimal: "",
                },
            ),
        ),
        line: 11,
        column: 20,
        span: 348..351,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 11,
        column: 21,
        span: 351..352,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "21",
                    after_decimal: "",
                },
            ),
        ),
        line: 11,
        column: 24,
        span: 352..355,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 11,
        column: 25,
        span: 355..356,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "22",
                    after_decimal: "",
                },
            ),
        ),
        line: 11,
        column: 28,
        span: 356..359,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 11,
        column: 29,
        span: 359..360,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "23",
                    after_decimal: "",
                },
            ),
        ),
        line: 11,
        column: 32,
        span: 360..363,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 11,
        column: 33,
        span: 363..364,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "24",
                    after_decimal: "",
                },
            ),
        ),
        line: 11,
        column: 36,
        span: 364..367,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 11,
        column: 37,
        span: 367..368,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "25",
                    after_decimal: "",
                },
            ),
        ),
        line: 11,
        column: 40,
        span: 368..371,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 11,
        column: 41,
        span: 371..372,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "26",
                    after_decimal: "",
                },
            ),
        ),
        line: 11,
        column: 44,
        span: 372..375,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 11,
        column: 45,
        span: 375..376,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "27",
                    after_decimal: "",
                },
            ),
        ),
        line: 11,
        column: 48,
        span: 376..379,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 11,
        column: 49,
        span: 379..380,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "28",
                    after_decimal: "",
                },
            ),
        ),
        line: 11,
        column: 52,
        span: 380..383,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 11,
        column: 53,
        span: 383..384,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "29",
                    after_decimal: "",
                },
            ),
        ),
        line: 11,
        column: 56,
        span: 384..387,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 11,
        column: 57,
        span: 387..388,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "30",
                    after_decimal: "",
                },
            ),
        ),
        line: 11,
        column: 60,
        span: 388..391,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 11,
        column: 61,
        span: 391..392,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "31",
                    after_decimal: "",
                },
            ),
        ),
        line: 11,
        column: 64,
        span: 392..395,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 11,
        column: 65,
        span: 395..396,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "32",
                    after_decimal: "",
                },
            ),
        ),
        line: 11,
        column: 68,
        span: 396..399,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 11,
        column: 69,
        span: 399..400,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "33",
                    after_decimal: "",
                },
            ),
        ),
        line: 12,
        column: 8,
        span: 405..408,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 12,
        column: 9,
        span: 408..409,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "34",
                    after_decimal: "",
                },
            ),
        ),
        line: 12,
        column: 12,
        span: 409..412,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 12,
        column: 13,
        span: 412..413,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "35",
                    after_decimal: "",
                },
            ),
        ),
        line: 12,
        column: 16,
        span: 413..416,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 12,
        column: 17,
        span: 416..417,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "36",
                    after_decimal: "",
                },
            ),
        ),
        line: 12,
        column: 20,
        span: 417..420,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 12,
        column: 21,
        span: 420..421,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "37",
                    after_decimal: "",
                },
            ),
        ),
        line: 12,
        column: 24,
        span: 421..424,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 12,
        column: 25,
        span: 424..425,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "38",
                    after_decimal: "",
                },
            ),
        ),
        line: 12,
        column: 28,
        span: 425..428,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 12,
        column: 29,
        span: 428..429,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "39",
                    after_decimal: "",
                },
            ),
        ),
        line: 12,
        column: 32,
        span: 429..432,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 12,
        column: 33,
        span: 432..433,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "40",
                    after_decimal: "",
                },
            ),
        ),
        line: 12,
        column: 36,
        span: 433..436,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 12,
        column: 37,
        span: 436..437,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "41",
                    after_decimal: "",
                },
            ),
        ),
        line: 12,
        column: 40,
        span: 437..440,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 12,
        column: 41,
        span: 440..441,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "42",
                    after_decimal: "",
                },
            ),
        ),
        line: 12,
        column: 44,
        span: 441..444,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 12,
        column: 45,
        span: 444..445,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "43",
                    after_decimal: "",
                },
            ),
        ),
        line: 12,
        column: 48,
        span: 445..448,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 12,
        column: 49,
        span: 448..449,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "44",
                    after_decimal: "",
                },
            ),
        ),
        line: 12,
        column: 52,
        span: 449..452,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 12,
        column: 53,
        span: 452..453,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "45",
                    after_decimal: "",
                },
            ),
        ),
        line: 12,
        column: 56,
        span: 453..456,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 12,
        column: 57,
        span: 456..457,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "46",
                    after_decimal: "",
                },
            ),
        ),
        line: 12,
        column: 60,
        span: 457..460,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 12,
        column: 61,
        span: 460..461,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "47",
                    after_decimal: "",
                },
            ),
        ),
        line: 12,
        column: 64,
        span: 461..464,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 12,
        column: 65,
        span: 464..465,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "48",
                    after_decimal: "",
                },
            ),
        ),
        line: 12,
        column: 68,
        span: 465..468,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 12,
        column: 69,
        span: 468..469,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "49",
                    after_decimal: "",
                },
            ),
        ),
        line: 13,
        column: 8,
        span: 474..477,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 13,
        column: 9,
        span: 477..478,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "50",
                    after_decimal: "",
                },
            ),
        ),
        line: 13,
        column: 12,
        span: 478..481,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 13,
        column: 13,
        span: 481..482,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "51",
                    after_decimal: "",
                },
            ),
        ),
        line: 13,
        column: 16,
        span: 482..485,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 13,
        column: 17,
        span: 485..486,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "52",
                    after_decimal: "",
                },
            ),
        ),
        line: 13,
        column: 20,
        span: 486..489,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 13,
        column: 21,
        span: 489..490,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "53",
                    after_decimal: "",
                },
            ),
        ),
        line: 13,
        column: 24,
        span: 490..493,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 13,
        column: 25,
        span: 493..494,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "54",
                    after_decimal: "",
                },
            ),
        ),
        line: 13,
        column: 28,
        span: 494..497,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 13,
        column: 29,
        span: 497..498,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "55",
                    after_decimal: "",
                },
            ),
        ),
        line: 13,
        column: 32,
        span: 498..501,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 13,
        column: 33,
        span: 501..502,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "56",
                    after_decimal: "",
                },
            ),
        ),
        line: 13,
        column: 36,
        span: 502..505,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 13,
        column: 37,
        span: 505..506,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "57",
                    after_decimal: "",
                },
            ),
        ),
        line: 13,
        column: 40,
        span: 506..509,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 13,
        column: 41,
        span: 509..510,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "58",
                    after_decimal: "",
                },
            ),
        ),
        line: 13,
        column: 44,
        span: 510..513,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 13,
        column: 45,
        span: 513..514,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "59",
                    after_decimal: "",
                },
            ),
        ),
        line: 13,
        column: 48,
        span: 514..517,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 13,
        column: 49,
        span: 517..518,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "60",
                    after_decimal: "",
                },
            ),
        ),
        line: 13,
        column: 52,
        span: 518..521,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 13,
        column: 53,
        span: 521..522,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "61",
                    after_decimal: "",
                },
            ),
        ),
        line: 13,
        column: 56,
        span: 522..525,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 13,
        column: 57,
        span: 525..526,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "62",
                    after_decimal: "",
                },
            ),
        ),
        line: 13,
        column: 60,
        span: 526..529,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 13,
        column: 61,
        span: 529..530,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "63",
                    after_decimal: "",
                },
            ),
        ),
        line: 13,
        column: 64,
        span: 530..533,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 13,
        column: 65,
        span: 533..534,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "64",
                    after_decimal: "",
                },
            ),
        ),
        line: 13,
        column: 68,
        span: 534..537,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 13,
        column: 69,
        span: 537..538,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "65",
                    after_decimal: "",
                },
            ),
        ),
        line: 14,
        column: 8,
        span: 543..546,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 14,
        column: 9,
        span: 546..547,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "66",
                    after_decimal: "",
                },
            ),
        ),
        line: 14,
        column: 12,
        span: 547..550,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 14,
        column: 13,
        span: 550..551,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "67",
                    after_decimal: "",
                },
            ),
        ),
        line: 14,
        column: 16,
        span: 551..554,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 14,
        column: 17,
        span: 554..555,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "68",
                    after_decimal: "",
                },
            ),
        ),
        line: 14,
        column: 20,
        span: 555..558,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 14,
        column: 21,
        span: 558..559,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "69",
                    after_decimal: "",
                },
            ),
        ),
        line: 14,
        column: 24,
        span: 559..562,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 14,
        column: 25,
        span: 562..563,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "70",
                    after_decimal: "",
                },
            ),
        ),
        line: 14,
        column: 28,
        span: 563..566,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 14,
        column: 29,
        span: 566..567,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "71",
                    after_decimal: "",
                },
            ),
        ),
        line: 14,
        column: 32,
        span: 567..570,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 14,
        column: 33,
        span: 570..571,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "72",
                    after_decimal: "",
                },
            ),
        ),
        line: 14,
        column: 36,
        span: 571..574,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 14,
        column: 37,
        span: 574..575,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "73",
                    after_decimal: "",
                },
            ),
        ),
        line: 14,
        column: 40,
        span: 575..578,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 14,
        column: 41,
        span: 578..579,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "74",
                    after_decimal: "",
                },
            ),
        ),
        line: 14,
        column: 44,
        span: 579..582,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 14,
        column: 45,
        span: 582..583,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "75",
                    after_decimal: "",
                },
            ),
        ),
        line: 14,
        column: 48,
        span: 583..586,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 14,
        column: 49,
        span: 586..587,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "76",
                    after_decimal: "",
                },
            ),
        ),
        line: 14,
        column: 52,
        span: 587..590,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 14,
        column: 53,
        span: 590..591,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "77",
                    after_decimal: "",
                },
            ),
        ),
        line: 14,
        column: 56,
        span: 591..594,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 14,
        column: 57,
        span: 594..595,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "78",
                    after_decimal: "",
                },
            ),
        ),
        line: 14,
        column: 60,
        span: 595..598,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 14,
        column: 61,
        span: 598..599,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "79",
                    after_decimal: "",
                },
            ),
        ),
        line: 14,
        column: 64,
        span: 599..602,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 14,
        column: 65,
        span: 602..603,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "80",
                    after_decimal: "",
                },
            ),
        ),
        line: 14,
        column: 68,
        span: 603..606,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 14,
        column: 69,
        span: 606..607,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "81",
                    after_decimal: "",
                },
            ),
        ),
        line: 15,
        column: 8,
        span: 612..615,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 15,
        column: 9,
        span: 615..616,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "82",
                    after_decimal: "",
                },
            ),
        ),
        line: 15,
        column: 12,
        span: 616..619,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 15,
        column: 13,
        span: 619..620,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "83",
                    after_decimal: "",
                },
            ),
        ),
        line: 15,
        column: 16,
        span: 620..623,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 15,
        column: 17,
        span: 623..624,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "84",
                    after_decimal: "",
                },
            ),
        ),
        line: 15,
        column: 20,
        span: 624..627,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 15,
        column: 21,
        span: 627..628,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "85",
                    after_decimal: "",
                },
            ),
        ),
        line: 15,
        column: 24,
        span: 628..631,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 15,
        column: 25,
        span: 631..632,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "86",
                    after_decimal: "",
                },
            ),
        ),
        line: 15,
        column: 28,
        span: 632..635,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 15,
        column: 29,
        span: 635..636,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "87",
                    after_decimal: "",
                },
            ),
        ),
        line: 15,
        column: 32,
        span: 636..639,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 15,
        column: 33,
        span: 639..640,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "88",
                    after_decimal: "",
                },
            ),
        ),
        line: 15,
        column: 36,
        span: 640..643,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 15,
        column: 37,
        span: 643..644,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "89",
                    after_decimal: "",
                },
            ),
        ),
        line: 15,
        column: 40,
        span: 644..647,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 15,
        column: 41,
        span: 647..648,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "90",
                    after_decimal: "",
                },
            ),
        ),
        line: 15,
        column: 44,
        span: 648..651,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 15,
        column: 45,
        span: 651..652,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "91",
                    after_decimal: "",
                },
            ),
        ),
        line: 15,
        column: 48,
        span: 652..655,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 15,
        column: 49,
        span: 655..656,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "92",
                    after_decimal: "",
                },
            ),
        ),
        line: 15,
        column: 52,
        span: 656..659,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 15,
        column: 53,
        span: 659..660,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "93",
                    after_decimal: "",
                },
            ),
        ),
        line: 15,
        column: 56,
        span: 660..663,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 15,
        column: 57,
        span: 663..664,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "94",
                    after_decimal: "",
                },
            ),
        ),
        line: 15,
        column: 60,
        span: 664..667,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 15,
        column: 61,
        span: 667..668,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "95",
                    after_decimal: "",
                },
            ),
        ),
        line: 15,
        column: 64,
        span: 668..671,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 15,
        column: 65,
        span: 671..672,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "96",
                    after_decimal: "",
                },
            ),
        ),
        line: 15,
        column: 68,
        span: 672..675,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 15,
        column: 69,
        span: 675..676,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "97",
                    after_decimal: "",
                },
            ),
        ),
        line: 16,
        column: 8,
        span: 681..684,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 16,
        column: 9,
        span: 684..685,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "98",
                    after_decimal: "",
                },
            ),
        ),
        line: 16,
        column: 12,
        span: 685..688,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 16,
        column: 13,
        span: 688..689,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "99",
                    after_decimal: "",
                },
            ),
        ),
        line: 16,
        column: 16,
        span: 689..692,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 16,
        column: 17,
        span: 692..693,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "100",
                    after_decimal: "",
                },
            ),
        ),
        line: 16,
        column: 21,
        span: 693..697,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 16,
        column: 22,
        span: 697..698,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "101",
                    after_decimal: "",
                },
            ),
        ),
        line: 16,
        column: 26,
        span: 698..702,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 16,
        column: 27,
        span: 702..703,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "102",
                    after_decimal: "",
                },
            ),
        ),
        line: 16,
        column: 31,
        span: 703..707,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 16,
        column: 32,
        span: 707..708,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "103",
                    after_decimal: "",
                },
            ),
        ),
        line: 16,
        column: 36,
        span: 708..712,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 16,
        column: 37,
        span: 712..713,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "104",
                    after_decimal: "",
                },
            ),
        ),
        line: 16,
        column: 41,
        span: 713..717,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 16,
        column: 42,
        span: 717..718,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "105",
                    after_decimal: "",
                },
            ),
        ),
        line: 17,
        column: 9,
        span: 723..727,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 17,
        column: 10,
        span: 727..728,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "106",
                    after_decimal: "",
                },
            ),
        ),
        line: 17,
        column: 14,
        span: 728..732,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 17,
        column: 15,
        span: 732..733,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "107",
                    after_decimal: "",
                },
            ),
        ),
        line: 17,
        column: 19,
        span: 733..737,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 17,
        column: 20,
        span: 737..738,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "108",
                    after_decimal: "",
                },
            ),
        ),
        line: 17,
        column: 24,
        span: 738..742,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 17,
        column: 25,
        span: 742..743,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "109",
                    after_decimal: "",
                },
            ),
        ),
        line: 17,
        column: 29,
        span: 743..747,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 17,
        column: 30,
        span: 747..748,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "110",
                    after_decimal: "",
                },
            ),
        ),
        line: 17,
        column: 34,
        span: 748..752,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 17,
        column: 35,
        span: 752..753,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "111",
                    after_decimal: "",
                },
            ),
        ),
        line: 17,
        column: 39,
        span: 753..757,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 17,
        column: 40,
        span: 757..758,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "112",
                    after_decimal: "",
                },
            ),
        ),
        line: 17,
        column: 44,
        span: 758..762,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 17,
        column: 45,
        span: 762..763,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "113",
                    after_decimal: "",
                },
            ),
        ),
        line: 18,
        column: 9,
        span: 768..772,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 18,
        column: 10,
        span: 772..773,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "114",
                    after_decimal: "",
                },
            ),
        ),
        line: 18,
        column: 14,
        span: 773..777,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 18,
        column: 15,
        span: 777..778,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "115",
                    after_decimal: "",
                },
            ),
        ),
        line: 18,
        column: 19,
        span: 778..782,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 18,
        column: 20,
        span: 782..783,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "116",
                    after_decimal: "",
                },
            ),
        ),
        line: 18,
        column: 24,
        span: 783..787,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 18,
        column: 25,
        span: 787..788,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "117",
                    after_decimal: "",
                },
            ),
        ),
        line: 18,
        column: 29,
        span: 788..792,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 18,
        column: 30,
        span: 792..793,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "118",
                    after_decimal: "",
                },
            ),
        ),
        line: 18,
        column: 34,
        span: 793..797,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 18,
        column: 35,
        span: 797..798,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "119",
                    after_decimal: "",
                },
            ),
        ),
        line: 18,
        column: 39,
        span: 798..802,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 18,
        column: 40,
        span: 802..803,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "120",
                    after_decimal: "",
                },
            ),
        ),
        line: 18,
        column: 44,
        span: 803..807,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 18,
        column: 45,
        span: 807..808,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "121",
                    after_decimal: "",
                },
            ),
        ),
        line: 19,
        column: 9,
        span: 813..817,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 19,
        column: 10,
        span: 817..818,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "122",
                    after_decimal: "",
                },
            ),
        ),
        line: 19,
        column: 14,
        span: 818..822,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 19,
        column: 15,
        span: 822..823,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "123",
                    after_decimal: "",
                },
            ),
        ),
        line: 19,
        column: 19,
        span: 823..827,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 19,
        column: 20,
        span: 827..828,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "124",
                    after_decimal: "",
                },
            ),
        ),
        line: 19,
        column: 24,
        span: 828..832,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 19,
        column: 25,
        span: 832..833,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "125",
                    after_decimal: "",
                },
            ),
        ),
        line: 19,
        column: 29,
        span: 833..837,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 19,
        column: 30,
        span: 837..838,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "126",
                    after_decimal: "",
                },
            ),
        ),
        line: 19,
        column: 34,
        span: 838..842,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 19,
        column: 35,
        span: 842..843,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "127",
                    after_decimal: "",
                },
            ),
        ),
        line: 19,
        column: 39,
        span: 843..847,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 19,
        column: 40,
        span: 847..848,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "128",
                    after_decimal: "",
                },
            ),
        ),
        line: 19,
        column: 44,
        span: 848..852,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 19,
        column: 45,
        span: 852..853,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "129",
                    after_decimal: "",
                },
            ),
        ),
        line: 20,
        column: 9,
        span: 858..862,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 20,
        column: 10,
        span: 862..863,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "130",
                    after_decimal: "",
                },
            ),
        ),
        line: 20,
        column: 14,
        span: 863..867,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 20,
        column: 15,
        span: 867..868,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "131",
                    after_decimal: "",
                },
            ),
        ),
        line: 20,
        column: 19,
        span: 868..872,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 20,
        column: 20,
        span: 872..873,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "132",
                    after_decimal: "",
                },
            ),
        ),
        line: 20,
        column: 24,
        span: 873..877,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 20,
        column: 25,
        span: 877..878,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "133",
                    after_decimal: "",
                },
            ),
        ),
        line: 20,
        column: 29,
        span: 878..882,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 20,
        column: 30,
        span: 882..883,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "134",
                    after_decimal: "",
                },
            ),
        ),
        line: 20,
        column: 34,
        span: 883..887,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 20,
        column: 35,
        span: 887..888,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "135",
                    after_decimal: "",
                },
            ),
        ),
        line: 20,
        column: 39,
        span: 888..892,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 20,
        column: 40,
        span: 892..893,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "136",
                    after_decimal: "",
                },
            ),
        ),
        line: 20,
        column: 44,
        span: 893..897,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 20,
        column: 45,
        span: 897..898,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "137",
                    after_decimal: "",
                },
            ),
        ),
        line: 21,
        column: 9,
        span: 903..907,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 21,
        column: 10,
        span: 907..908,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "138",
                    after_decimal: "",
                },
            ),
        ),
        line: 21,
        column: 14,
        span: 908..912,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 21,
        column: 15,
        span: 912..913,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "139",
                    after_decimal: "",
                },
            ),
        ),
        line: 21,
        column: 19,
        span: 913..917,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 21,
        column: 20,
        span: 917..918,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "140",
                    after_decimal: "",
                },
            ),
        ),
        line: 21,
        column: 24,
        span: 918..922,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 21,
        column: 25,
        span: 922..923,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "141",
                    after_decimal: "",
                },
            ),
        ),
        line: 21,
        column: 29,
        span: 923..927,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 21,
        column: 30,
        span: 927..928,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "142",
                    after_decimal: "",
                },
            ),
        ),
        line: 21,
        column: 34,
        span: 928..932,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 21,
        column: 35,
        span: 932..933,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "143",
                    after_decimal: "",
                },
            ),
        ),
        line: 21,
        column: 39,
        span: 933..937,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 21,
        column: 40,
        span: 937..938,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "144",
                    after_decimal: "",
                },
            ),
        ),
        line: 21,
        column: 44,
        span: 938..942,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 21,
        column: 45,
        span: 942..943,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "145",
                    after_decimal: "",
                },
            ),
        ),
        line: 22,
        column: 9,
        span: 948..952,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 22,
        column: 10,
        span: 952..953,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "146",
                    after_decimal: "",
                },
            ),
        ),
        line: 22,
        column: 14,
        span: 953..957,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 22,
        column: 15,
        span: 957..958,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "147",
                    after_decimal: "",
                },
            ),
        ),
        line: 22,
        column: 19,
        span: 958..962,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 22,
        column: 20,
        span: 962..963,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "148",
                    after_decimal: "",
                },
            ),
        ),
        line: 22,
        column: 24,
        span: 963..967,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 22,
        column: 25,
        span: 967..968,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "149",
                    after_decimal: "",
                },
            ),
        ),
        line: 22,
        column: 29,
        span: 968..972,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 22,
        column: 30,
        span: 972..973,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "150",
                    after_decimal: "",
                },
            ),
        ),
        line: 22,
        column: 34,
        span: 973..977,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 22,
        column: 35,
        span: 977..978,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "151",
                    after_decimal: "",
                },
            ),
        ),
        line: 22,
        column: 39,
        span: 978..982,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 22,
        column: 40,
        span: 982..983,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "152",
                    after_decimal: "",
                },
            ),
        ),
        line: 22,
        column: 44,
        span: 983..987,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 22,
        column: 45,
        span: 987..988,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "153",
                    after_decimal: "",
                },
            ),
        ),
        line: 23,
        column: 9,
        span: 993..997,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 23,
        column: 10,
        span: 997..998,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "154",
                    after_decimal: "",
                },
            ),
        ),
        line: 23,
        column: 14,
        span: 998..1002,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 23,
        column: 15,
        span: 1002..1003,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "155",
                    after_decimal: "",
                },
            ),
        ),
        line: 23,
        column: 19,
        span: 1003..1007,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 23,
        column: 20,
        span: 1007..1008,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "156",
                    after_decimal: "",
                },
            ),
        ),
        line: 23,
        column: 24,
        span: 1008..1012,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 23,
        column: 25,
        span: 1012..1013,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "157",
                    after_decimal: "",
                },
            ),
        ),
        line: 23,
        column: 29,
        span: 1013..1017,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 23,
        column: 30,
        span: 1017..1018,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "158",
                    after_decimal: "",
                },
            ),
        ),
        line: 23,
        column: 34,
        span: 1018..1022,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 23,
        column: 35,
        span: 1022..1023,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "159",
                    after_decimal: "",
                },
            ),
        ),
        line: 23,
        column: 39,
        span: 1023..1027,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 23,
        column: 40,
        span: 1027..1028,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "160",
                    after_decimal: "",
                },
            ),
        ),
        line: 23,
        column: 44,
        span: 1028..1032,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 23,
        column: 45,
        span: 1032..1033,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "161",
                    after_decimal: "",
                },
            ),
        ),
        line: 24,
        column: 9,
        span: 1038..1042,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 24,
        column: 10,
        span: 1042..1043,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "162",
                    after_decimal: "",
                },
            ),
        ),
        line: 24,
        column: 14,
        span: 1043..1047,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 24,
        column: 15,
        span: 1047..1048,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "163",
                    after_decimal: "",
                },
            ),
        ),
        line: 24,
        column: 19,
        span: 1048..1052,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 24,
        column: 20,
        span: 1052..1053,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "164",
                    after_decimal: "",
                },
            ),
        ),
        line: 24,
        column: 24,
        span: 1053..1057,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 24,
        column: 25,
        span: 1057..1058,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "165",
                    after_decimal: "",
                },
            ),
        ),
        line: 24,
        column: 29,
        span: 1058..1062,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 24,
        column: 30,
        span: 1062..1063,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "166",
                    after_decimal: "",
                },
            ),
        ),
        line: 24,
        column: 34,
        span: 1063..1067,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 24,
        column: 35,
        span: 1067..1068,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "167",
                    after_decimal: "",
                },
            ),
        ),
        line: 24,
        column: 39,
        span: 1068..1072,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 24,
        column: 40,
        span: 1072..1073,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "168",
                    after_decimal: "",
                },
            ),
        ),
        line: 24,
        column: 44,
        span: 1073..1077,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 24,
        column: 45,
        span: 1077..1078,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "169",
                    after_decimal: "",
                },
            ),
        ),
        line: 25,
        column: 9,
        span: 1083..1087,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 25,
        column: 10,
        span: 1087..1088,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "170",
                    after_decimal: "",
                },
            ),
        ),
        line: 25,
        column: 14,
        span: 1088..1092,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 25,
        column: 15,
        span: 1092..1093,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "171",
                    after_decimal: "",
                },
            ),
        ),
        line: 25,
        column: 19,
        span: 1093..1097,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 25,
        column: 20,
        span: 1097..1098,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "172",
                    after_decimal: "",
                },
            ),
        ),
        line: 25,
        column: 24,
        span: 1098..1102,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 25,
        column: 25,
        span: 1102..1103,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "173",
                    after_decimal: "",
                },
            ),
        ),
        line: 25,
        column: 29,
        span: 1103..1107,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 25,
        column: 30,
        span: 1107..1108,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "174",
                    after_decimal: "",
                },
            ),
        ),
        line: 25,
        column: 34,
        span: 1108..1112,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 25,
        column: 35,
        span: 1112..1113,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "175",
                    after_decimal: "",
                },
            ),
        ),
        line: 25,
        column: 39,
        span: 1113..1117,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 25,
        column: 40,
        span: 1117..1118,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "176",
                    after_decimal: "",
                },
            ),
        ),
        line: 25,
        column: 44,
        span: 1118..1122,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 25,
        column: 45,
        span: 1122..1123,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "177",
                    after_decimal: "",
                },
            ),
        ),
        line: 26,
        column: 9,
        span: 1128..1132,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 26,
        column: 10,
        span: 1132..1133,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "178",
                    after_decimal: "",
                },
            ),
        ),
        line: 26,
        column: 14,
        span: 1133..1137,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 26,
        column: 15,
        span: 1137..1138,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "179",
                    after_decimal: "",
                },
            ),
        ),
        line: 26,
        column: 19,
        span: 1138..1142,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 26,
        column: 20,
        span: 1142..1143,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "180",
                    after_decimal: "",
                },
            ),
        ),
        line: 26,
        column: 24,
        span: 1143..1147,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 26,
        column: 25,
        span: 1147..1148,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "181",
                    after_decimal: "",
                },
            ),
        ),
        line: 26,
        column: 29,
        span: 1148..1152,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 26,
        column: 30,
        span: 1152..1153,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "182",
                    after_decimal: "",
                },
            ),
        ),
        line: 26,
        column: 34,
        span: 1153..1157,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 26,
        column: 35,
        span: 1157..1158,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "183",
                    after_decimal: "",
                },
            ),
        ),
        line: 26,
        column: 39,
        span: 1158..1162,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 26,
        column: 40,
        span: 1162..1163,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "184",
                    after_decimal: "",
                },
            ),
        ),
        line: 26,
        column: 44,
        span: 1163..1167,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 26,
        column: 45,
        span: 1167..1168,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "185",
                    after_decimal: "",
                },
            ),
        ),
        line: 27,
        column: 9,
        span: 1173..1177,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 27,
        column: 10,
        span: 1177..1178,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "186",
                    after_decimal: "",
                },
            ),
        ),
        line: 27,
        column: 14,
        span: 1178..1182,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 27,
        column: 15,
        span: 1182..1183,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "187",
                    after_decimal: "",
                },
            ),
        ),
        line: 27,
        column: 19,
        span: 1183..1187,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 27,
        column: 20,
        span: 1187..1188,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "188",
                    after_decimal: "",
                },
            ),
        ),
        line: 27,
        column: 24,
        span: 1188..1192,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 27,
        column: 25,
        span: 1192..1193,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "189",
                    after_decimal: "",
                },
            ),
        ),
        line: 27,
        column: 29,
        span: 1193..1197,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 27,
        column: 30,
        span: 1197..1198,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "190",
                    after_decimal: "",
                },
            ),
        ),
        line: 27,
        column: 34,
        span: 1198..1202,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 27,
        column: 35,
        span: 1202..1203,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "191",
                    after_decimal: "",
                },
            ),
        ),
        line: 27,
        column: 39,
        span: 1203..1207,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 27,
        column: 40,
        span: 1207..1208,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "192",
                    after_decimal: "",
                },
            ),
        ),
        line: 27,
        column: 44,
        span: 1208..1212,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 27,
        column: 45,
        span: 1212..1213,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "193",
                    after_decimal: "",
                },
            ),
        ),
        line: 28,
        column: 9,
        span: 1218..1222,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 28,
        column: 10,
        span: 1222..1223,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "194",
                    after_decimal: "",
                },
            ),
        ),
        line: 28,
        column: 14,
        span: 1223..1227,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 28,
        column: 15,
        span: 1227..1228,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "195",
                    after_decimal: "",
                },
            ),
        ),
        line: 28,
        column: 19,
        span: 1228..1232,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 28,
        column: 20,
        span: 1232..1233,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "196",
                    after_decimal: "",
                },
            ),
        ),
        line: 28,
        column: 24,
        span: 1233..1237,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 28,
        column: 25,
        span: 1237..1238,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "197",
                    after_decimal: "",
                },
            ),
        ),
        line: 28,
        column: 29,
        span: 1238..1242,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 28,
        column: 30,
        span: 1242..1243,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "198",
                    after_decimal: "",
                },
            ),
        ),
        line: 28,
        column: 34,
        span: 1243..1247,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 28,
        column: 35,
        span: 1247..1248,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "199",
                    after_decimal: "",
                },
            ),
        ),
        line: 28,
        column: 39,
        span: 1248..1252,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 28,
        column: 40,
        span: 1252..1253,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "200",
                    after_decimal: "",
                },
            ),
        ),
        line: 28,
        column: 44,
        span: 1253..1257,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 28,
        column: 45,
        span: 1257..1258,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "201",
                    after_decimal: "",
                },
            ),
        ),
        line: 29,
        column: 9,
        span: 1263..1267,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 29,
        column: 10,
        span: 1267..1268,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "202",
                    after_decimal: "",
                },
            ),
        ),
        line: 29,
        column: 14,
        span: 1268..1272,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 29,
        column: 15,
        span: 1272..1273,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "203",
                    after_decimal: "",
                },
            ),
        ),
        line: 29,
        column: 19,
        span: 1273..1277,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 29,
        column: 20,
        span: 1277..1278,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "204",
                    after_decimal: "",
                },
            ),
        ),
        line: 29,
        column: 24,
        span: 1278..1282,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 29,
        column: 25,
        span: 1282..1283,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "205",
                    after_decimal: "",
                },
            ),
        ),
        line: 29,
        column: 29,
        span: 1283..1287,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 29,
        column: 30,
        span: 1287..1288,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "206",
                    after_decimal: "",
                },
            ),
        ),
        line: 29,
        column: 34,
        span: 1288..1292,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 29,
        column: 35,
        span: 1292..1293,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "207",
                    after_decimal: "",
                },
            ),
        ),
        line: 29,
        column: 39,
        span: 1293..1297,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 29,
        column: 40,
        span: 1297..1298,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "208",
                    after_decimal: "",
                },
            ),
        ),
        line: 29,
        column: 44,
        span: 1298..1302,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 29,
        column: 45,
        span: 1302..1303,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "209",
                    after_decimal: "",
                },
            ),
        ),
        line: 30,
        column: 9,
        span: 1308..1312,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 30,
        column: 10,
        span: 1312..1313,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "210",
                    after_decimal: "",
                },
            ),
        ),
        line: 30,
        column: 14,
        span: 1313..1317,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 30,
        column: 15,
        span: 1317..1318,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "211",
                    after_decimal: "",
                },
            ),
        ),
        line: 30,
        column: 19,
        span: 1318..1322,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 30,
        column: 20,
        span: 1322..1323,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "212",
                    after_decimal: "",
                },
            ),
        ),
        line: 30,
        column: 24,
        span: 1323..1327,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 30,
        column: 25,
        span: 1327..1328,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "213",
                    after_decimal: "",
                },
            ),
        ),
        line: 30,
        column: 29,
        span: 1328..1332,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 30,
        column: 30,
        span: 1332..1333,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "214",
                    after_decimal: "",
                },
            ),
        ),
        line: 30,
        column: 34,
        span: 1333..1337,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 30,
        column: 35,
        span: 1337..1338,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "215",
                    after_decimal: "",
                },
            ),
        ),
        line: 30,
        column: 39,
        span: 1338..1342,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 30,
        column: 40,
        span: 1342..1343,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "216",
                    after_decimal: "",
                },
            ),
        ),
        line: 30,
        column: 44,
        span: 1343..1347,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 30,
        column: 45,
        span: 1347..1348,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "217",
                    after_decimal: "",
                },
            ),
        ),
        line: 31,
        column: 9,
        span: 1353..1357,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 31,
        column: 10,
        span: 1357..1358,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "218",
                    after_decimal: "",
                },
            ),
        ),
        line: 31,
        column: 14,
        span: 1358..1362,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 31,
        column: 15,
        span: 1362..1363,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "219",
                    after_decimal: "",
                },
            ),
        ),
        line: 31,
        column: 19,
        span: 1363..1367,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 31,
        column: 20,
        span: 1367..1368,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "220",
                    after_decimal: "",
                },
            ),
        ),
        line: 31,
        column: 24,
        span: 1368..1372,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 31,
        column: 25,
        span: 1372..1373,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "221",
                    after_decimal: "",
                },
            ),
        ),
        line: 31,
        column: 29,
        span: 1373..1377,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 31,
        column: 30,
        span: 1377..1378,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "222",
                    after_decimal: "",
                },
            ),
        ),
        line: 31,
        column: 34,
        span: 1378..1382,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 31,
        column: 35,
        span: 1382..1383,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "223",
                    after_decimal: "",
                },
            ),
        ),
        line: 31,
        column: 39,
        span: 1383..1387,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 31,
        column: 40,
        span: 1387..1388,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "224",
                    after_decimal: "",
                },
            ),
        ),
        line: 31,
        column: 44,
        span: 1388..1392,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 31,
        column: 45,
        span: 1392..1393,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "225",
                    after_decimal: "",
                },
            ),
        ),
        line: 32,
        column: 9,
        span: 1398..1402,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 32,
        column: 10,
        span: 1402..1403,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "226",
                    after_decimal: "",
                },
            ),
        ),
        line: 32,
        column: 14,
        span: 1403..1407,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 32,
        column: 15,
        span: 1407..1408,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "227",
                    after_decimal: "",
                },
            ),
        ),
        line: 32,
        column: 19,
        span: 1408..1412,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 32,
        column: 20,
        span: 1412..1413,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "228",
                    after_decimal: "",
                },
            ),
        ),
        line: 32,
        column: 24,
        span: 1413..1417,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 32,
        column: 25,
        span: 1417..1418,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "229",
                    after_decimal: "",
                },
            ),
        ),
        line: 32,
        column: 29,
        span: 1418..1422,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 32,
        column: 30,
        span: 1422..1423,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "230",
                    after_decimal: "",
                },
            ),
        ),
        line: 32,
        column: 34,
        span: 1423..1427,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 32,
        column: 35,
        span: 1427..1428,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "231",
                    after_decimal: "",
                },
            ),
        ),
        line: 32,
        column: 39,
        span: 1428..1432,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 32,
        column: 40,
        span: 1432..1433,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "232",
                    after_decimal: "",
                },
            ),
        ),
        line: 32,
        column: 44,
        span: 1433..1437,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 32,
        column: 45,
        span: 1437..1438,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "233",
                    after_decimal: "",
                },
            ),
        ),
        line: 33,
        column: 9,
        span: 1443..1447,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 33,
        column: 10,
        span: 1447..1448,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "234",
                    after_decimal: "",
                },
            ),
        ),
        line: 33,
        column: 14,
        span: 1448..1452,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 33,
        column: 15,
        span: 1452..1453,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "235",
                    after_decimal: "",
                },
            ),
        ),
        line: 33,
        column: 19,
        span: 1453..1457,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 33,
        column: 20,
        span: 1457..1458,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "236",
                    after_decimal: "",
                },
            ),
        ),
        line: 33,
        column: 24,
        span: 1458..1462,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 33,
        column: 25,
        span: 1462..1463,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "237",
                    after_decimal: "",
                },
            ),
        ),
        line: 33,
        column: 29,
        span: 1463..1467,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 33,
        column: 30,
        span: 1467..1468,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "238",
                    after_decimal: "",
                },
            ),
        ),
        line: 33,
        column: 34,
        span: 1468..1472,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 33,
        column: 35,
        span: 1472..1473,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "239",
                    after_decimal: "",
                },
            ),
        ),
        line: 33,
        column: 39,
        span: 1473..1477,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 33,
        column: 40,
        span: 1477..1478,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "240",
                    after_decimal: "",
                },
            ),
        ),
        line: 33,
        column: 44,
        span: 1478..1482,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 33,
        column: 45,
        span: 1482..1483,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "241",
                    after_decimal: "",
                },
            ),
        ),
        line: 34,
        column: 9,
        span: 1488..1492,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 34,
        column: 10,
        span: 1492..1493,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "242",
                    after_decimal: "",
                },
            ),
        ),
        line: 34,
        column: 14,
        span: 1493..1497,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 34,
        column: 15,
        span: 1497..1498,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "243",
                    after_decimal: "",
                },
            ),
        ),
        line: 34,
        column: 19,
        span: 1498..1502,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 34,
        column: 20,
        span: 1502..1503,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "244",
                    after_decimal: "",
                },
            ),
        ),
        line: 34,
        column: 24,
        span: 1503..1507,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 34,
        column: 25,
        span: 1507..1508,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "245",
                    after_decimal: "",
                },
            ),
        ),
        line: 34,
        column: 29,
        span: 1508..1512,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 34,
        column: 30,
        span: 1512..1513,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "246",
                    after_decimal: "",
                },
            ),
        ),
        line: 34,
        column: 34,
        span: 1513..1517,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 34,
        column: 35,
        span: 1517..1518,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "247",
                    after_decimal: "",
                },
            ),
        ),
        line: 34,
        column: 39,
        span: 1518..1522,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 34,
        column: 40,
        span: 1522..1523,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "248",
                    after_decimal: "",
                },
            ),
        ),
        line: 34,
        column: 44,
        span: 1523..1527,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 34,
        column: 45,
        span: 1527..1528,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "249",
                    after_decimal: "",
                },
            ),
        ),
        line: 35,
        column: 9,
        span: 1533..1537,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 35,
        column: 10,
        span: 1537..1538,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "250",
                    after_decimal: "",
                },
            ),
        ),
        line: 35,
        column: 14,
        span: 1538..1542,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 35,
        column: 15,
        span: 1542..1543,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "251",
                    after_decimal: "",
                },
            ),
        ),
        line: 35,
        column: 19,
        span: 1543..1547,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 35,
        column: 20,
        span: 1547..1548,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "252",
                    after_decimal: "",
                },
            ),
        ),
        line: 35,
        column: 24,
        span: 1548..1552,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 35,
        column: 25,
        span: 1552..1553,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "253",
                    after_decimal: "",
                },
            ),
        ),
        line: 35,
        column: 29,
        span: 1553..1557,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 35,
        column: 30,
        span: 1557..1558,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "254",
                    after_decimal: "",
                },
            ),
        ),
        line: 35,
        column: 34,
        span: 1558..1562,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 35,
        column: 35,
        span: 1562..1563,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "255",
                    after_decimal: "",
                },
            ),
        ),
        line: 35,
        column: 39,
        span: 1563..1567,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 35,
        column: 40,
        span: 1567..1568,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "256",
                    after_decimal: "",
                },
            ),
        ),
        line: 35,
        column: 44,
        span: 1568..1572,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 35,
        column: 45,
        span: 1572..1573,
    },
    Token {
        kind: RightBrace,
        lexeme: Symbol(
            "}",
        ),
        line: 36,
        column: 4,
        span: 1576..1577,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 37,
        column: 9,
        span: 1580..1586,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 37,
        column: 10,
        span: 1586..1587,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "24",
                    after_decimal: ".5",
                },
            ),
        ),
        line: 37,
        column: 14,
        span: 1586..1591,
    },
    Token {
        kind: Plus,
        lexeme: Symbol(
            "+",
        ),
        line: 37,
        column: 16,
        span: 1592..1593,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "0",
                    after_decimal: ".6",
                },
            ),
        ),
        line: 37,
        column: 20,
        span: 1593..1597,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 37,
        column: 23,
        span: 1598..1600,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "25",
                    after_decimal: ".1",
                },
            ),
        ),
        line: 37,
        column: 28,
        span: 1600..1605,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 37,
        column: 29,
        span: 1605..1606,
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        line: 38,
        column: 8,
        span: 1609..1614,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "t",
        ),
        line: 38,
        column: 10,
        span: 1615..1616,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 38,
        column: 12,
        span: 1617..1618,
    },
    Token {
        kind: LeftBrace,
        lexeme: Symbol(
            "{",
        ),
        line: 38,
        column: 14,
        span: 1619..1620,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "foo",
        ),
        line: 38,
        column: 17,
        span: 1620..1623,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 38,
        column: 19,
        span: 1624..1625,
    },
    Token {
        kind: Function,
        lexeme: Symbol(
            "function",
        ),
        line: 38,
        column: 28,
        span: 1626..1634,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 38,
        column: 30,
        span: 1635..1636,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "self",
        ),
        line: 38,
        column: 34,
        span: 1636..1640,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 38,
        column: 35,
        span: 1640..1641,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "x",
        ),
        line: 38,
        column: 37,
        span: 1642..1643,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 38,
        column: 38,
        span: 1643..1644,
    },
    Token {
        kind: Return,
        lexeme: Symbol(
            "return",
        ),
        line: 38,
        column: 45,
        span: 1645..1651,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "x",
        ),
        line: 38,
        column: 47,
        span: 1652..1653,
    },
    Token {
        kind: Plus,
        lexeme: Symbol(
            "+",
        ),
        line: 38,
        column: 49,
        span: 1654..1655,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "self",
        ),
        line: 38,
        column: 54,
        span: 1656..1660,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 38,
        column: 55,
        span: 1660..1661,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "x",
        ),
        line: 38,
        column: 56,
        span: 1661..1662,
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        line: 38,
        column: 60,
        span: 1663..1666,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 38,
        column: 61,
        span: 1666..1667,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "x",
        ),
        line: 38,
        column: 63,
        span: 1668..1669,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 38,
        column: 65,
        span: 1670..1671,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "10",
                    after_decimal: "",
                },
            ),
        ),
        line: 38,
        column: 68,
        span: 1671..1674,
    },
    Token {
        kind: RightBrace,
        lexeme: Symbol(
            "}",
        ),
        line: 38,
        column: 69,
        span: 1674..1675,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "t",
        ),
        line: 39,
        column: 4,
        span: 1678..1679,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 39,
        column: 5,
        span: 1679..1680,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "t",
        ),
        line: 39,
        column: 6,
        span: 1680..1681,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 39,
        column: 8,
        span: 1682..1683,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "t",
        ),
        line: 39,
        column: 0,
        span: 1684..1685,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 40,
        column: 9,
        span: 1688..1694,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 40,
        column: 10,
        span: 1694..1695,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "t",
        ),
        line: 40,
        column: 11,
        span: 1695..1696,
    },
    Token {
        kind: Colon,
        lexeme: Symbol(
            ":",
        ),
        line: 40,
        column: 12,
        span: 1696..1697,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "foo",
        ),
        line: 40,
        column: 15,
        span: 1697..1700,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 40,
        column: 16,
        span: 1700..1701,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "1",
                    after_decimal: ".5",
                },
            ),
        ),
        line: 40,
        column: 19,
        span: 1700..1704,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 40,
        column: 20,
        span: 1704..1705,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 40,
        column: 23,
        span: 1706..1708,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "11",
                    after_decimal: ".5",
                },
            ),
        ),
        line: 40,
        column: 28,
        span: 1708..1713,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 40,
        column: 29,
        span: 1713..1714,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 41,
        column: 9,
        span: 1717..1723,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 41,
        column: 10,
        span: 1723..1724,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "t",
        ),
        line: 41,
        column: 11,
        span: 1724..1725,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 41,
        column: 12,
        span: 1725..1726,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "t",
        ),
        line: 41,
        column: 13,
        span: 1726..1727,
    },
    Token {
        kind: Colon,
        lexeme: Symbol(
            ":",
        ),
        line: 41,
        column: 14,
        span: 1727..1728,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "foo",
        ),
        line: 41,
        column: 17,
        span: 1728..1731,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 41,
        column: 18,
        span: 1731..1732,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "0",
                    after_decimal: ".5",
                },
            ),
        ),
        line: 41,
        column: 21,
        span: 1731..1735,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 41,
        column: 22,
        span: 1735..1736,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 41,
        column: 25,
        span: 1737..1739,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "10",
                    after_decimal: ".5",
                },
            ),
        ),
        line: 41,
        column: 30,
        span: 1739..1744,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 41,
        column: 31,
        span: 1744..1745,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 42,
        column: 9,
        span: 1770..1776,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 42,
        column: 10,
        span: 1776..1777,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "24",
                    after_decimal: ".3",
                },
            ),
        ),
        line: 42,
        column: 14,
        span: 1776..1781,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 42,
        column: 17,
        span: 1782..1784,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "24",
                    after_decimal: ".3",
                },
            ),
        ),
        line: 42,
        column: 22,
        span: 1784..1789,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 42,
        column: 23,
        span: 1789..1790,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 43,
        column: 9,
        span: 1793..1799,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 43,
        column: 10,
        span: 1799..1800,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 43,
        column: 11,
        span: 1800..1801,
    },
    Token {
        kind: Function,
        lexeme: Symbol(
            "function",
        ),
        line: 43,
        column: 19,
        span: 1801..1809,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 43,
        column: 21,
        span: 1810..1811,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 43,
        column: 22,
        span: 1811..1812,
    },
    Token {
        kind: Return,
        lexeme: Symbol(
            "return",
        ),
        line: 43,
        column: 29,
        span: 1813..1819,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "t",
        ),
        line: 43,
        column: 31,
        span: 1820..1821,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 43,
        column: 32,
        span: 1821..1822,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "x",
        ),
        line: 43,
        column: 33,
        span: 1822..1823,
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        line: 43,
        column: 37,
        span: 1824..1827,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 43,
        column: 38,
        span: 1827..1828,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 43,
        column: 39,
        span: 1828..1829,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 43,
        column: 40,
        span: 1829..1830,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 43,
        column: 43,
        span: 1831..1833,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "10",
                    after_decimal: "",
                },
            ),
        ),
        line: 43,
        column: 46,
        span: 1833..1836,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 43,
        column: 47,
        span: 1836..1837,
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        line: 44,
        column: 0,
        span: 1838..1841,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "foo",
        ),
        line: 47,
        column: 4,
        span: 1844..1847,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 47,
        column: 5,
        span: 1847..1848,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 47,
        column: 6,
        span: 1848..1849,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "foo",
        ),
        line: 48,
        column: 4,
        span: 1850..1853,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 48,
        column: 6,
        span: 1854..1855,
    },
    Token {
        kind: Nil,
        lexeme: Symbol(
            "nil",
        ),
        line: 48,
        column: 0,
        span: 1856..1859,
    },
    Token {
        kind: If,
        lexeme: Symbol(
            "if",
        ),
        line: 50,
        column: 3,
        span: 1861..1863,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "_soft",
        ),
        line: 50,
        column: 9,
        span: 1864..1869,
    },
    Token {
        kind: Then,
        lexeme: Symbol(
            "then",
        ),
        line: 50,
        column: 14,
        span: 1870..1874,
    },
    Token {
        kind: Return,
        lexeme: Symbol(
            "return",
        ),
        line: 50,
        column: 21,
        span: 1875..1881,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "10",
                    after_decimal: "",
                },
            ),
        ),
        line: 50,
        column: 24,
        span: 1881..1884,
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        line: 50,
        column: 0,
        span: 1885..1888,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "print",
        ),
        line: 52,
        column: 6,
        span: 1890..1895,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"testing large programs (>64k)\"",
        ),
        line: 52,
        column: 38,
        span: 1896..1927,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "prog",
        ),
        line: 55,
        column: 5,
        span: 1972..1976,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 55,
        column: 7,
        span: 1977..1978,
    },
    Token {
        kind: MultilineString,
        lexeme: Symbol(
            "[[$\n\nlocal a,b\n\nb = {$1$\n  b30009 = 65534,\n  b30010 = 65535,\n  b30011 = 65536,\n  b30012 = 65537,\n  b30013 = 16777214,\n  b30014 = 16777215,\n  b30015 = 16777216,\n  b30016 = 16777217,\n  b30017 = 0x7fffff,\n  b30018 = -0x7fffff,\n  b30019 = 0x1ffffff,\n  b30020 = -0x1ffffd,\n  b30021 = -65534,\n  b30022 = -65535,\n  b30023 = -65536,\n  b30024 = -0xffffff,\n  b30025 = 15012.5,\n  $2$\n};\n\nassert(b.a50008 == 25004 and b[\"a11\"] == -5.5)\nassert(b.a33007 == -16503.5 and b.a50009 == -25004.5)\nassert(b[\"b\"..30024] == -0xffffff)\n\nfunction b:xxx (a,b) return a+b end\nassert(b:xxx(10, 12) == 22)   -- pushself with non-constant index\nb.xxx = nil\n\ns = 0; n=0\nfor a,b in pairs(b) do s=s+b; n=n+1 end\n-- with 32-bit floats, exact value of 's' depends on summation order\nassert(81800000.0 < s and s < 81860000 and n == 70001)\n\na = nil; b = nil\nprint'+'\n\nfunction f(x) b=x end\n\na = f{$3$} or 10\n\nassert(a==10)\nassert(b[1] == \"a10\" and b[2] == 5 and b[#b-1] == \"a50009\")\n\n\nfunction xxxx (x) return b[x] end\n\nassert(xxxx(3) == \"a11\")\n\na = nil; b=nil\nxxxx = nil\n\nreturn 10\n\n]]",
        ),
        line: 113,
        column: 3,
        span: 1979..3029,
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        line: 117,
        column: 6,
        span: 3064..3069,
    },
    Token {
        kind: Function,
        lexeme: Symbol(
            "function",
        ),
        line: 117,
        column: 15,
        span: 3070..3078,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "sig",
        ),
        line: 117,
        column: 19,
        span: 3079..3082,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 117,
        column: 21,
        span: 3083..3084,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "x",
        ),
        line: 117,
        column: 22,
        span: 3084..3085,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 117,
        column: 23,
        span: 3085..3086,
    },
    Token {
        kind: Return,
        lexeme: Symbol(
            "return",
        ),
        line: 118,
        column: 9,
        span: 3089..3095,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 118,
        column: 11,
        span: 3096..3097,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "x",
        ),
        line: 118,
        column: 12,
        span: 3097..3098,
    },
    Token {
        kind: Percent,
        lexeme: Symbol(
            "%",
        ),
        line: 118,
        column: 14,
        span: 3099..3100,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "2",
                    after_decimal: "",
                },
            ),
        ),
        line: 118,
        column: 16,
        span: 3100..3102,
    },
    Token {
        kind: DoubleEquals,
        lexeme: Symbol(
            "==",
        ),
        line: 118,
        column: 19,
        span: 3103..3105,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "0",
                    after_decimal: "",
                },
            ),
        ),
        line: 118,
        column: 21,
        span: 3105..3107,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 118,
        column: 22,
        span: 3107..3108,
    },
    Token {
        kind: And,
        lexeme: Symbol(
            "and",
        ),
        line: 118,
        column: 26,
        span: 3109..3112,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "''",
        ),
        line: 118,
        column: 29,
        span: 3113..3115,
    },
    Token {
        kind: Or,
        lexeme: Symbol(
            "or",
        ),
        line: 118,
        column: 32,
        span: 3116..3118,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'-'",
        ),
        line: 118,
        column: 36,
        span: 3119..3122,
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        line: 119,
        column: 0,
        span: 3123..3126,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "F",
        ),
        line: 121,
        column: 2,
        span: 3128..3129,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 121,
        column: 4,
        span: 3130..3131,
    },
    Token {
        kind: LeftBrace,
        lexeme: Symbol(
            "{",
        ),
        line: 121,
        column: 6,
        span: 3132..3133,
    },
    Token {
        kind: Function,
        lexeme: Symbol(
            "function",
        ),
        line: 122,
        column: 9,
        span: 3134..3142,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 122,
        column: 11,
        span: 3143..3144,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 122,
        column: 12,
        span: 3144..3145,
    },
    Token {
        kind: For,
        lexeme: Symbol(
            "for",
        ),
        line: 123,
        column: 6,
        span: 3157..3160,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "i",
        ),
        line: 123,
        column: 8,
        span: 3161..3162,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 123,
        column: 9,
        span: 3162..3163,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "10",
                    after_decimal: "",
                },
            ),
        ),
        line: 123,
        column: 11,
        span: 3162..3165,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 123,
        column: 12,
        span: 3165..3166,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "50009",
                    after_decimal: "",
                },
            ),
        ),
        line: 123,
        column: 17,
        span: 3165..3171,
    },
    Token {
        kind: Do,
        lexeme: Symbol(
            "do",
        ),
        line: 123,
        column: 0,
        span: 3172..3174,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 124,
        column: 7,
        span: 3179..3181,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 124,
        column: 8,
        span: 3181..3182,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "write",
        ),
        line: 124,
        column: 13,
        span: 3182..3187,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 124,
        column: 14,
        span: 3187..3188,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'a'",
        ),
        line: 124,
        column: 17,
        span: 3188..3191,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 124,
        column: 18,
        span: 3191..3192,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "i",
        ),
        line: 124,
        column: 20,
        span: 3193..3194,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 124,
        column: 21,
        span: 3194..3195,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "' = '",
        ),
        line: 124,
        column: 27,
        span: 3196..3201,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 124,
        column: 28,
        span: 3201..3202,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "sig",
        ),
        line: 124,
        column: 32,
        span: 3203..3206,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 124,
        column: 33,
        span: 3206..3207,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "i",
        ),
        line: 124,
        column: 34,
        span: 3207..3208,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 124,
        column: 35,
        span: 3208..3209,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 124,
        column: 36,
        span: 3209..3210,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "5",
                    after_decimal: "",
                },
            ),
        ),
        line: 124,
        column: 38,
        span: 3210..3212,
    },
    Token {
        kind: Plus,
        lexeme: Symbol(
            "+",
        ),
        line: 124,
        column: 39,
        span: 3212..3213,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 124,
        column: 40,
        span: 3213..3214,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 124,
        column: 41,
        span: 3214..3215,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "i",
        ),
        line: 124,
        column: 42,
        span: 3215..3216,
    },
    Token {
        kind: Minus,
        lexeme: Symbol(
            "-",
        ),
        line: 124,
        column: 43,
        span: 3216..3217,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "10",
                    after_decimal: "",
                },
            ),
        ),
        line: 124,
        column: 45,
        span: 3216..3219,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 124,
        column: 46,
        span: 3219..3220,
    },
    Token {
        kind: Slash,
        lexeme: Symbol(
            "/",
        ),
        line: 124,
        column: 47,
        span: 3220..3221,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "2",
                    after_decimal: "",
                },
            ),
        ),
        line: 124,
        column: 48,
        span: 3220..3222,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 124,
        column: 49,
        span: 3222..3223,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 124,
        column: 50,
        span: 3223..3224,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "',\\n'",
        ),
        line: 124,
        column: 56,
        span: 3225..3230,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 124,
        column: 57,
        span: 3230..3231,
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        line: 125,
        column: 0,
        span: 3234..3237,
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        line: 126,
        column: 4,
        span: 3238..3241,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 126,
        column: 5,
        span: 3241..3242,
    },
    Token {
        kind: Function,
        lexeme: Symbol(
            "function",
        ),
        line: 128,
        column: 9,
        span: 3244..3252,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 128,
        column: 11,
        span: 3253..3254,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 128,
        column: 12,
        span: 3254..3255,
    },
    Token {
        kind: For,
        lexeme: Symbol(
            "for",
        ),
        line: 129,
        column: 6,
        span: 3267..3270,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "i",
        ),
        line: 129,
        column: 8,
        span: 3271..3272,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 129,
        column: 9,
        span: 3272..3273,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "30026",
                    after_decimal: "",
                },
            ),
        ),
        line: 129,
        column: 14,
        span: 3272..3278,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 129,
        column: 15,
        span: 3278..3279,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "50009",
                    after_decimal: "",
                },
            ),
        ),
        line: 129,
        column: 20,
        span: 3278..3284,
    },
    Token {
        kind: Do,
        lexeme: Symbol(
            "do",
        ),
        line: 129,
        column: 0,
        span: 3285..3287,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 130,
        column: 7,
        span: 3292..3294,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 130,
        column: 8,
        span: 3294..3295,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "write",
        ),
        line: 130,
        column: 13,
        span: 3295..3300,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 130,
        column: 14,
        span: 3300..3301,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'b'",
        ),
        line: 130,
        column: 17,
        span: 3301..3304,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 130,
        column: 18,
        span: 3304..3305,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "i",
        ),
        line: 130,
        column: 20,
        span: 3306..3307,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 130,
        column: 21,
        span: 3307..3308,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "' = '",
        ),
        line: 130,
        column: 27,
        span: 3309..3314,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 130,
        column: 28,
        span: 3314..3315,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "sig",
        ),
        line: 130,
        column: 32,
        span: 3316..3319,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 130,
        column: 33,
        span: 3319..3320,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "i",
        ),
        line: 130,
        column: 34,
        span: 3320..3321,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 130,
        column: 35,
        span: 3321..3322,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 130,
        column: 36,
        span: 3322..3323,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "15013",
                    after_decimal: "",
                },
            ),
        ),
        line: 130,
        column: 42,
        span: 3323..3329,
    },
    Token {
        kind: Plus,
        lexeme: Symbol(
            "+",
        ),
        line: 130,
        column: 43,
        span: 3329..3330,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 130,
        column: 44,
        span: 3330..3331,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 130,
        column: 45,
        span: 3331..3332,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "i",
        ),
        line: 130,
        column: 46,
        span: 3332..3333,
    },
    Token {
        kind: Minus,
        lexeme: Symbol(
            "-",
        ),
        line: 130,
        column: 47,
        span: 3333..3334,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "30026",
                    after_decimal: "",
                },
            ),
        ),
        line: 130,
        column: 52,
        span: 3333..3339,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 130,
        column: 53,
        span: 3339..3340,
    },
    Token {
        kind: Slash,
        lexeme: Symbol(
            "/",
        ),
        line: 130,
        column: 54,
        span: 3340..3341,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "2",
                    after_decimal: "",
                },
            ),
        ),
        line: 130,
        column: 55,
        span: 3340..3342,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 130,
        column: 56,
        span: 3342..3343,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 130,
        column: 57,
        span: 3343..3344,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "',\\n'",
        ),
        line: 130,
        column: 63,
        span: 3345..3350,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 130,
        column: 64,
        span: 3350..3351,
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        line: 131,
        column: 0,
        span: 3354..3357,
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        line: 132,
        column: 4,
        span: 3358..3361,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 132,
        column: 5,
        span: 3361..3362,
    },
    Token {
        kind: Function,
        lexeme: Symbol(
            "function",
        ),
        line: 134,
        column: 9,
        span: 3364..3372,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 134,
        column: 11,
        span: 3373..3374,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 134,
        column: 12,
        span: 3374..3375,
    },
    Token {
        kind: For,
        lexeme: Symbol(
            "for",
        ),
        line: 135,
        column: 6,
        span: 3387..3390,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "i",
        ),
        line: 135,
        column: 8,
        span: 3391..3392,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 135,
        column: 9,
        span: 3392..3393,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "10",
                    after_decimal: "",
                },
            ),
        ),
        line: 135,
        column: 11,
        span: 3392..3395,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 135,
        column: 12,
        span: 3395..3396,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "50009",
                    after_decimal: "",
                },
            ),
        ),
        line: 135,
        column: 17,
        span: 3395..3401,
    },
    Token {
        kind: Do,
        lexeme: Symbol(
            "do",
        ),
        line: 135,
        column: 0,
        span: 3402..3404,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 136,
        column: 7,
        span: 3409..3411,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 136,
        column: 8,
        span: 3411..3412,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "write",
        ),
        line: 136,
        column: 13,
        span: 3412..3417,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 136,
        column: 14,
        span: 3417..3418,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'\"a'",
        ),
        line: 136,
        column: 18,
        span: 3418..3422,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 136,
        column: 19,
        span: 3422..3423,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "i",
        ),
        line: 136,
        column: 21,
        span: 3424..3425,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 136,
        column: 22,
        span: 3425..3426,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'\", '",
        ),
        line: 136,
        column: 28,
        span: 3427..3432,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 136,
        column: 29,
        span: 3432..3433,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "sig",
        ),
        line: 136,
        column: 33,
        span: 3434..3437,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 136,
        column: 34,
        span: 3437..3438,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "i",
        ),
        line: 136,
        column: 35,
        span: 3438..3439,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 136,
        column: 36,
        span: 3439..3440,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 136,
        column: 37,
        span: 3440..3441,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "5",
                    after_decimal: "",
                },
            ),
        ),
        line: 136,
        column: 39,
        span: 3441..3443,
    },
    Token {
        kind: Plus,
        lexeme: Symbol(
            "+",
        ),
        line: 136,
        column: 40,
        span: 3443..3444,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 136,
        column: 41,
        span: 3444..3445,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 136,
        column: 42,
        span: 3445..3446,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "i",
        ),
        line: 136,
        column: 43,
        span: 3446..3447,
    },
    Token {
        kind: Minus,
        lexeme: Symbol(
            "-",
        ),
        line: 136,
        column: 44,
        span: 3447..3448,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "10",
                    after_decimal: "",
                },
            ),
        ),
        line: 136,
        column: 46,
        span: 3447..3450,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 136,
        column: 47,
        span: 3450..3451,
    },
    Token {
        kind: Slash,
        lexeme: Symbol(
            "/",
        ),
        line: 136,
        column: 48,
        span: 3451..3452,
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "2",
                    after_decimal: "",
                },
            ),
        ),
        line: 136,
        column: 49,
        span: 3451..3453,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 136,
        column: 50,
        span: 3453..3454,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 136,
        column: 51,
        span: 3454..3455,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "',\\n'",
        ),
        line: 136,
        column: 57,
        span: 3456..3461,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 136,
        column: 58,
        span: 3461..3462,
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        line: 137,
        column: 0,
        span: 3465..3468,
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        line: 138,
        column: 4,
        span: 3469..3472,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 138,
        column: 5,
        span: 3472..3473,
    },
    Token {
        kind: RightBrace,
        lexeme: Symbol(
            "}",
        ),
        line: 139,
        column: 2,
        span: 3474..3475,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "file",
        ),
        line: 141,
        column: 5,
        span: 3477..3481,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 141,
        column: 7,
        span: 3482..3483,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "os",
        ),
        line: 141,
        column: 10,
        span: 3484..3486,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 141,
        column: 11,
        span: 3486..3487,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "tmpname",
        ),
        line: 141,
        column: 18,
        span: 3487..3494,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 141,
        column: 19,
        span: 3494..3495,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 141,
        column: 20,
        span: 3495..3496,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 142,
        column: 3,
        span: 3497..3499,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 142,
        column: 4,
        span: 3499..3500,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "output",
        ),
        line: 142,
        column: 10,
        span: 3500..3506,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 142,
        column: 11,
        span: 3506..3507,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "file",
        ),
        line: 142,
        column: 15,
        span: 3507..3511,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 142,
        column: 16,
        span: 3511..3512,
    },
    Token {
        kind: For,
        lexeme: Symbol(
            "for",
        ),
        line: 143,
        column: 4,
        span: 3513..3516,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "s",
        ),
        line: 143,
        column: 6,
        span: 3517..3518,
    },
    Token {
        kind: In,
        lexeme: Symbol(
            "in",
        ),
        line: 143,
        column: 9,
        span: 3519..3521,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "string",
        ),
        line: 143,
        column: 16,
        span: 3522..3528,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 143,
        column: 17,
        span: 3528..3529,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "gmatch",
        ),
        line: 143,
        column: 23,
        span: 3529..3535,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 143,
        column: 24,
        span: 3535..3536,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "prog",
        ),
        line: 143,
        column: 28,
        span: 3536..3540,
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        line: 143,
        column: 29,
        span: 3540..3541,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"$([^$]+)\"",
        ),
        line: 143,
        column: 40,
        span: 3542..3552,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 143,
        column: 41,
        span: 3552..3553,
    },
    Token {
        kind: Do,
        lexeme: Symbol(
            "do",
        ),
        line: 143,
        column: 0,
        span: 3554..3556,
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        line: 144,
        column: 8,
        span: 3559..3564,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "n",
        ),
        line: 144,
        column: 10,
        span: 3565..3566,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 144,
        column: 12,
        span: 3567..3568,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "tonumber",
        ),
        line: 144,
        column: 21,
        span: 3569..3577,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 144,
        column: 22,
        span: 3577..3578,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "s",
        ),
        line: 144,
        column: 23,
        span: 3578..3579,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 144,
        column: 24,
        span: 3579..3580,
    },
    Token {
        kind: If,
        lexeme: Symbol(
            "if",
        ),
        line: 145,
        column: 5,
        span: 3583..3585,
    },
    Token {
        kind: Not,
        lexeme: Symbol(
            "not",
        ),
        line: 145,
        column: 9,
        span: 3586..3589,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "n",
        ),
        line: 145,
        column: 11,
        span: 3590..3591,
    },
    Token {
        kind: Then,
        lexeme: Symbol(
            "then",
        ),
        line: 145,
        column: 16,
        span: 3592..3596,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 145,
        column: 19,
        span: 3597..3599,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 145,
        column: 20,
        span: 3599..3600,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "write",
        ),
        line: 145,
        column: 25,
        span: 3600..3605,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 145,
        column: 26,
        span: 3605..3606,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "s",
        ),
        line: 145,
        column: 27,
        span: 3606..3607,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 145,
        column: 28,
        span: 3607..3608,
    },
    Token {
        kind: Else,
        lexeme: Symbol(
            "else",
        ),
        line: 145,
        column: 33,
        span: 3609..3613,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "F",
        ),
        line: 145,
        column: 35,
        span: 3614..3615,
    },
    Token {
        kind: LeftBracket,
        lexeme: Symbol(
            "[",
        ),
        line: 145,
        column: 36,
        span: 3615..3616,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "n",
        ),
        line: 145,
        column: 37,
        span: 3616..3617,
    },
    Token {
        kind: RightBracket,
        lexeme: Symbol(
            "]",
        ),
        line: 145,
        column: 38,
        span: 3617..3618,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 145,
        column: 39,
        span: 3618..3619,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 145,
        column: 40,
        span: 3619..3620,
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        line: 145,
        column: 0,
        span: 3621..3624,
    },
    Token {
        kind: End,
        lexeme: Symbol(
            "end",
        ),
        line: 146,
        column: 0,
        span: 3625..3628,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "io",
        ),
        line: 147,
        column: 3,
        span: 3629..3631,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 147,
        column: 4,
        span: 3631..3632,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "close",
        ),
        line: 147,
        column: 9,
        span: 3632..3637,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 147,
        column: 10,
        span: 3637..3638,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 147,
        column: 11,
        span: 3638..3639,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "result",
        ),
        line: 148,
        column: 7,
        span: 3640..3646,
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        line: 148,
        column: 9,
        span: 3647..3648,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "dofile",
        ),
        line: 148,
        column: 16,
        span: 3649..3655,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 148,
        column: 17,
        span: 3655..3656,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "file",
        ),
        line: 148,
        column: 21,
        span: 3656..3660,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 148,
        column: 22,
        span: 3660..3661,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "assert",
        ),
        line: 149,
        column: 7,
        span: 3662..3668,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 149,
        column: 8,
        span: 3668..3669,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "os",
        ),
        line: 149,
        column: 10,
        span: 3669..3671,
    },
    Token {
        kind: Dot,
        lexeme: Symbol(
            ".",
        ),
        line: 149,
        column: 11,
        span: 3671..3672,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "remove",
        ),
        line: 149,
        column: 17,
        span: 3672..3678,
    },
    Token {
        kind: LeftParen,
        lexeme: Symbol(
            "(",
        ),
        line: 149,
        column: 18,
        span: 3678..3679,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "file",
        ),
        line: 149,
        column: 22,
        span: 3679..3683,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 149,
        column: 23,
        span: 3683..3684,
    },
    Token {
        kind: RightParen,
        lexeme: Symbol(
            ")",
        ),
        line: 149,
        column: 24,
        span: 3684..3685,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "print",
        ),
        line: 150,
        column: 6,
        span: 3686..3691,
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "'OK'",
        ),
        line: 150,
        column: 10,
        span: 3691..3695,
    },
    Token {
        kind: Return,
        lexeme: Symbol(
            "return",
        ),
        line: 151,
        column: 7,
        span: 3696..3702,
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "result",
        ),
        line: 151,
        column: 0,
        span: 3703..3709,
    },
]
