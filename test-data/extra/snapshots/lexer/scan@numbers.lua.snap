---
source: src/main.rs
expression: scanned
input_file: test-data/extra/numbers.lua
---
[
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        position: Position {
            line: 1,
            column: 5,
            span: 0..5,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "num",
        ),
        position: Position {
            line: 1,
            column: 9,
            span: 6..9,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 1,
            column: 11,
            span: 10..11,
        },
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "0",
                    after_decimal: "",
                },
            ),
        ),
        position: Position {
            line: 1,
            column: 0,
            span: 11..13,
        },
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        position: Position {
            line: 2,
            column: 6,
            span: 14..19,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "num",
        ),
        position: Position {
            line: 2,
            column: 10,
            span: 20..23,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 2,
            column: 12,
            span: 24..25,
        },
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "1",
                    after_decimal: ".0",
                },
            ),
        ),
        position: Position {
            line: 2,
            column: 0,
            span: 25..29,
        },
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        position: Position {
            line: 3,
            column: 6,
            span: 30..35,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "num",
        ),
        position: Position {
            line: 3,
            column: 10,
            span: 36..39,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 3,
            column: 12,
            span: 40..41,
        },
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "1",
                    after_decimal: ".0",
                },
            ),
        ),
        position: Position {
            line: 3,
            column: 0,
            span: 41..44,
        },
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        position: Position {
            line: 4,
            column: 6,
            span: 45..50,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "num",
        ),
        position: Position {
            line: 4,
            column: 10,
            span: 51..54,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 4,
            column: 12,
            span: 55..56,
        },
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "0",
                    after_decimal: ".1",
                },
            ),
        ),
        position: Position {
            line: 4,
            column: 0,
            span: 56..59,
        },
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        position: Position {
            line: 5,
            column: 6,
            span: 60..65,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "num",
        ),
        position: Position {
            line: 5,
            column: 10,
            span: 66..69,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 5,
            column: 12,
            span: 70..71,
        },
    },
    Token {
        kind: Number,
        lexeme: Number(
            Scientific {
                mantissa: Decimal {
                    before_decimal: "1",
                    after_decimal: ".0",
                },
                exponent: "10",
            },
        ),
        position: Position {
            line: 5,
            column: 0,
            span: 71..78,
        },
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        position: Position {
            line: 6,
            column: 6,
            span: 79..84,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "num",
        ),
        position: Position {
            line: 6,
            column: 10,
            span: 85..88,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 6,
            column: 12,
            span: 89..90,
        },
    },
    Token {
        kind: Number,
        lexeme: Number(
            Scientific {
                mantissa: Decimal {
                    before_decimal: "1",
                    after_decimal: ".0",
                },
                exponent: "+10",
            },
        ),
        position: Position {
            line: 6,
            column: 0,
            span: 90..98,
        },
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        position: Position {
            line: 7,
            column: 6,
            span: 99..104,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "num",
        ),
        position: Position {
            line: 7,
            column: 10,
            span: 105..108,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 7,
            column: 12,
            span: 109..110,
        },
    },
    Token {
        kind: Number,
        lexeme: Number(
            Scientific {
                mantissa: Decimal {
                    before_decimal: "1",
                    after_decimal: ".0",
                },
                exponent: "-10",
            },
        ),
        position: Position {
            line: 7,
            column: 0,
            span: 110..118,
        },
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        position: Position {
            line: 8,
            column: 6,
            span: 119..124,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "num",
        ),
        position: Position {
            line: 8,
            column: 10,
            span: 125..128,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 8,
            column: 12,
            span: 129..130,
        },
    },
    Token {
        kind: Number,
        lexeme: Number(
            Scientific {
                mantissa: Decimal {
                    before_decimal: "1",
                    after_decimal: ".0",
                },
                exponent: "10",
            },
        ),
        position: Position {
            line: 8,
            column: 0,
            span: 130..137,
        },
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        position: Position {
            line: 9,
            column: 6,
            span: 138..143,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "num",
        ),
        position: Position {
            line: 9,
            column: 10,
            span: 144..147,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 9,
            column: 12,
            span: 148..149,
        },
    },
    Token {
        kind: Number,
        lexeme: Number(
            Scientific {
                mantissa: Decimal {
                    before_decimal: "1",
                    after_decimal: ".0",
                },
                exponent: "+10",
            },
        ),
        position: Position {
            line: 9,
            column: 0,
            span: 149..157,
        },
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        position: Position {
            line: 10,
            column: 6,
            span: 158..163,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "num",
        ),
        position: Position {
            line: 10,
            column: 10,
            span: 164..167,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 10,
            column: 12,
            span: 168..169,
        },
    },
    Token {
        kind: Number,
        lexeme: Number(
            Scientific {
                mantissa: Decimal {
                    before_decimal: "1",
                    after_decimal: ".0",
                },
                exponent: "-10",
            },
        ),
        position: Position {
            line: 10,
            column: 0,
            span: 169..177,
        },
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        position: Position {
            line: 11,
            column: 6,
            span: 178..183,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "num",
        ),
        position: Position {
            line: 11,
            column: 10,
            span: 184..187,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 11,
            column: 12,
            span: 188..189,
        },
    },
    Token {
        kind: Number,
        lexeme: Number(
            Scientific {
                mantissa: Decimal {
                    before_decimal: "1",
                    after_decimal: "",
                },
                exponent: "10",
            },
        ),
        position: Position {
            line: 11,
            column: 0,
            span: 189..194,
        },
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        position: Position {
            line: 12,
            column: 6,
            span: 195..200,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "num",
        ),
        position: Position {
            line: 12,
            column: 10,
            span: 201..204,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 12,
            column: 12,
            span: 205..206,
        },
    },
    Token {
        kind: Number,
        lexeme: Number(
            Scientific {
                mantissa: Decimal {
                    before_decimal: "1",
                    after_decimal: "",
                },
                exponent: "+10",
            },
        ),
        position: Position {
            line: 12,
            column: 0,
            span: 206..212,
        },
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        position: Position {
            line: 13,
            column: 6,
            span: 213..218,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "num",
        ),
        position: Position {
            line: 13,
            column: 10,
            span: 219..222,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 13,
            column: 12,
            span: 223..224,
        },
    },
    Token {
        kind: Number,
        lexeme: Number(
            Scientific {
                mantissa: Decimal {
                    before_decimal: "1",
                    after_decimal: "",
                },
                exponent: "-10",
            },
        ),
        position: Position {
            line: 13,
            column: 0,
            span: 224..230,
        },
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        position: Position {
            line: 14,
            column: 6,
            span: 231..236,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "num",
        ),
        position: Position {
            line: 14,
            column: 10,
            span: 237..240,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 14,
            column: 12,
            span: 241..242,
        },
    },
    Token {
        kind: Number,
        lexeme: Number(
            Scientific {
                mantissa: Decimal {
                    before_decimal: "1",
                    after_decimal: "",
                },
                exponent: "10",
            },
        ),
        position: Position {
            line: 14,
            column: 0,
            span: 242..247,
        },
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        position: Position {
            line: 15,
            column: 6,
            span: 248..253,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "num",
        ),
        position: Position {
            line: 15,
            column: 10,
            span: 254..257,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 15,
            column: 12,
            span: 258..259,
        },
    },
    Token {
        kind: Number,
        lexeme: Number(
            Scientific {
                mantissa: Decimal {
                    before_decimal: "1",
                    after_decimal: "",
                },
                exponent: "+10",
            },
        ),
        position: Position {
            line: 15,
            column: 0,
            span: 259..265,
        },
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        position: Position {
            line: 16,
            column: 6,
            span: 266..271,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "num",
        ),
        position: Position {
            line: 16,
            column: 10,
            span: 272..275,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 16,
            column: 12,
            span: 276..277,
        },
    },
    Token {
        kind: Number,
        lexeme: Number(
            Scientific {
                mantissa: Decimal {
                    before_decimal: "1",
                    after_decimal: "",
                },
                exponent: "-10",
            },
        ),
        position: Position {
            line: 16,
            column: 0,
            span: 277..283,
        },
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        position: Position {
            line: 17,
            column: 6,
            span: 284..289,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "num",
        ),
        position: Position {
            line: 17,
            column: 10,
            span: 290..293,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 17,
            column: 12,
            span: 294..295,
        },
    },
    Token {
        kind: Number,
        lexeme: Number(
            Scientific {
                mantissa: Decimal {
                    before_decimal: "0",
                    after_decimal: ".1",
                },
                exponent: "10",
            },
        ),
        position: Position {
            line: 17,
            column: 0,
            span: 295..301,
        },
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        position: Position {
            line: 18,
            column: 6,
            span: 302..307,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "num",
        ),
        position: Position {
            line: 18,
            column: 10,
            span: 308..311,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 18,
            column: 12,
            span: 312..313,
        },
    },
    Token {
        kind: Number,
        lexeme: Number(
            Scientific {
                mantissa: Decimal {
                    before_decimal: "0",
                    after_decimal: ".1",
                },
                exponent: "+10",
            },
        ),
        position: Position {
            line: 18,
            column: 0,
            span: 313..320,
        },
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        position: Position {
            line: 19,
            column: 6,
            span: 321..326,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "num",
        ),
        position: Position {
            line: 19,
            column: 10,
            span: 327..330,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 19,
            column: 12,
            span: 331..332,
        },
    },
    Token {
        kind: Number,
        lexeme: Number(
            Scientific {
                mantissa: Decimal {
                    before_decimal: "0",
                    after_decimal: ".1",
                },
                exponent: "-10",
            },
        ),
        position: Position {
            line: 19,
            column: 0,
            span: 332..339,
        },
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        position: Position {
            line: 20,
            column: 6,
            span: 340..345,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "num",
        ),
        position: Position {
            line: 20,
            column: 10,
            span: 346..349,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 20,
            column: 12,
            span: 350..351,
        },
    },
    Token {
        kind: Number,
        lexeme: Number(
            Scientific {
                mantissa: Decimal {
                    before_decimal: "1",
                    after_decimal: ".0",
                },
                exponent: "10",
            },
        ),
        position: Position {
            line: 20,
            column: 0,
            span: 351..357,
        },
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        position: Position {
            line: 21,
            column: 6,
            span: 358..363,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "num",
        ),
        position: Position {
            line: 21,
            column: 10,
            span: 364..367,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 21,
            column: 12,
            span: 368..369,
        },
    },
    Token {
        kind: Number,
        lexeme: Number(
            Scientific {
                mantissa: Decimal {
                    before_decimal: "1",
                    after_decimal: ".0",
                },
                exponent: "+10",
            },
        ),
        position: Position {
            line: 21,
            column: 0,
            span: 369..376,
        },
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        position: Position {
            line: 22,
            column: 6,
            span: 377..382,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "num",
        ),
        position: Position {
            line: 22,
            column: 10,
            span: 383..386,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 22,
            column: 12,
            span: 387..388,
        },
    },
    Token {
        kind: Number,
        lexeme: Number(
            Scientific {
                mantissa: Decimal {
                    before_decimal: "1",
                    after_decimal: ".0",
                },
                exponent: "-10",
            },
        ),
        position: Position {
            line: 22,
            column: 0,
            span: 388..395,
        },
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        position: Position {
            line: 23,
            column: 6,
            span: 396..401,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "num",
        ),
        position: Position {
            line: 23,
            column: 10,
            span: 402..405,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 23,
            column: 12,
            span: 406..407,
        },
    },
    Token {
        kind: Number,
        lexeme: Number(
            Hex(
                "0x12",
            ),
        ),
        position: Position {
            line: 23,
            column: 0,
            span: 407..412,
        },
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        position: Position {
            line: 24,
            column: 6,
            span: 413..418,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "num",
        ),
        position: Position {
            line: 24,
            column: 10,
            span: 419..422,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 24,
            column: 12,
            span: 423..424,
        },
    },
    Token {
        kind: Number,
        lexeme: Number(
            HexDecimal(
                HexDecimal {
                    before_decimal: "1",
                    after_decimal: ".2",
                },
            ),
        ),
        position: Position {
            line: 24,
            column: 0,
            span: 424..430,
        },
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        position: Position {
            line: 25,
            column: 6,
            span: 431..436,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "num",
        ),
        position: Position {
            line: 25,
            column: 10,
            span: 437..440,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 25,
            column: 12,
            span: 441..442,
        },
    },
    Token {
        kind: Number,
        lexeme: Number(
            HexDecimal(
                HexDecimal {
                    before_decimal: "1",
                    after_decimal: ".22",
                },
            ),
        ),
        position: Position {
            line: 25,
            column: 0,
            span: 442..450,
        },
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        position: Position {
            line: 26,
            column: 6,
            span: 451..456,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "num",
        ),
        position: Position {
            line: 26,
            column: 10,
            span: 457..460,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 26,
            column: 12,
            span: 461..462,
        },
    },
    Token {
        kind: Number,
        lexeme: Number(
            HexDecimal(
                HexDecimal {
                    before_decimal: "1",
                    after_decimal: ".",
                },
            ),
        ),
        position: Position {
            line: 26,
            column: 0,
            span: 462..467,
        },
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        position: Position {
            line: 27,
            column: 6,
            span: 468..473,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "num",
        ),
        position: Position {
            line: 27,
            column: 10,
            span: 474..477,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 27,
            column: 12,
            span: 478..479,
        },
    },
    Token {
        kind: Number,
        lexeme: Number(
            HexDecimal(
                HexDecimal {
                    before_decimal: "",
                    after_decimal: ".1",
                },
            ),
        ),
        position: Position {
            line: 27,
            column: 0,
            span: 479..484,
        },
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        position: Position {
            line: 29,
            column: 6,
            span: 502..507,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "num",
        ),
        position: Position {
            line: 29,
            column: 10,
            span: 508..511,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 29,
            column: 12,
            span: 512..513,
        },
    },
    Token {
        kind: Number,
        lexeme: Number(
            HexScientific {
                mantissa: HexDecimal {
                    before_decimal: "01",
                    after_decimal: "",
                },
                exponent: "2",
            },
        ),
        position: Position {
            line: 29,
            column: 0,
            span: 513..519,
        },
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        position: Position {
            line: 30,
            column: 6,
            span: 520..525,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "num",
        ),
        position: Position {
            line: 30,
            column: 10,
            span: 526..529,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 30,
            column: 12,
            span: 530..531,
        },
    },
    Token {
        kind: Number,
        lexeme: Number(
            HexScientific {
                mantissa: HexDecimal {
                    before_decimal: "01",
                    after_decimal: "",
                },
                exponent: "+2",
            },
        ),
        position: Position {
            line: 30,
            column: 0,
            span: 531..538,
        },
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        position: Position {
            line: 31,
            column: 6,
            span: 539..544,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "num",
        ),
        position: Position {
            line: 31,
            column: 10,
            span: 545..548,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 31,
            column: 12,
            span: 549..550,
        },
    },
    Token {
        kind: Number,
        lexeme: Number(
            HexScientific {
                mantissa: HexDecimal {
                    before_decimal: "01",
                    after_decimal: "",
                },
                exponent: "-2",
            },
        ),
        position: Position {
            line: 31,
            column: 0,
            span: 550..557,
        },
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        position: Position {
            line: 32,
            column: 6,
            span: 558..563,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "num",
        ),
        position: Position {
            line: 32,
            column: 10,
            span: 564..567,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 32,
            column: 12,
            span: 568..569,
        },
    },
    Token {
        kind: Number,
        lexeme: Number(
            HexScientific {
                mantissa: HexDecimal {
                    before_decimal: "01",
                    after_decimal: ".",
                },
                exponent: "2",
            },
        ),
        position: Position {
            line: 32,
            column: 0,
            span: 569..576,
        },
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        position: Position {
            line: 33,
            column: 6,
            span: 577..582,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "num",
        ),
        position: Position {
            line: 33,
            column: 10,
            span: 583..586,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 33,
            column: 12,
            span: 587..588,
        },
    },
    Token {
        kind: Number,
        lexeme: Number(
            HexScientific {
                mantissa: HexDecimal {
                    before_decimal: "01",
                    after_decimal: ".",
                },
                exponent: "+2",
            },
        ),
        position: Position {
            line: 33,
            column: 0,
            span: 588..596,
        },
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        position: Position {
            line: 34,
            column: 6,
            span: 597..602,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "num",
        ),
        position: Position {
            line: 34,
            column: 10,
            span: 603..606,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 34,
            column: 12,
            span: 607..608,
        },
    },
    Token {
        kind: Number,
        lexeme: Number(
            HexScientific {
                mantissa: HexDecimal {
                    before_decimal: "01",
                    after_decimal: ".",
                },
                exponent: "-2",
            },
        ),
        position: Position {
            line: 34,
            column: 0,
            span: 608..616,
        },
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        position: Position {
            line: 35,
            column: 6,
            span: 617..622,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "num",
        ),
        position: Position {
            line: 35,
            column: 10,
            span: 623..626,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 35,
            column: 12,
            span: 627..628,
        },
    },
    Token {
        kind: Number,
        lexeme: Number(
            HexScientific {
                mantissa: HexDecimal {
                    before_decimal: "0",
                    after_decimal: ".1",
                },
                exponent: "2",
            },
        ),
        position: Position {
            line: 35,
            column: 0,
            span: 628..635,
        },
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        position: Position {
            line: 36,
            column: 6,
            span: 636..641,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "num",
        ),
        position: Position {
            line: 36,
            column: 10,
            span: 642..645,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 36,
            column: 12,
            span: 646..647,
        },
    },
    Token {
        kind: Number,
        lexeme: Number(
            HexScientific {
                mantissa: HexDecimal {
                    before_decimal: "0",
                    after_decimal: ".1",
                },
                exponent: "+2",
            },
        ),
        position: Position {
            line: 36,
            column: 0,
            span: 647..655,
        },
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        position: Position {
            line: 37,
            column: 6,
            span: 656..661,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "num",
        ),
        position: Position {
            line: 37,
            column: 10,
            span: 662..665,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 37,
            column: 12,
            span: 666..667,
        },
    },
    Token {
        kind: Number,
        lexeme: Number(
            HexScientific {
                mantissa: HexDecimal {
                    before_decimal: "0",
                    after_decimal: ".1",
                },
                exponent: "-2",
            },
        ),
        position: Position {
            line: 37,
            column: 0,
            span: 667..675,
        },
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        position: Position {
            line: 38,
            column: 6,
            span: 676..681,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "num",
        ),
        position: Position {
            line: 38,
            column: 10,
            span: 682..685,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 38,
            column: 12,
            span: 686..687,
        },
    },
    Token {
        kind: Number,
        lexeme: Number(
            HexScientific {
                mantissa: HexDecimal {
                    before_decimal: "01",
                    after_decimal: ".2",
                },
                exponent: "2",
            },
        ),
        position: Position {
            line: 38,
            column: 0,
            span: 687..695,
        },
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        position: Position {
            line: 39,
            column: 6,
            span: 696..701,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "num",
        ),
        position: Position {
            line: 39,
            column: 10,
            span: 702..705,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 39,
            column: 12,
            span: 706..707,
        },
    },
    Token {
        kind: Number,
        lexeme: Number(
            HexScientific {
                mantissa: HexDecimal {
                    before_decimal: "01",
                    after_decimal: ".2",
                },
                exponent: "+2",
            },
        ),
        position: Position {
            line: 39,
            column: 0,
            span: 707..716,
        },
    },
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        position: Position {
            line: 40,
            column: 6,
            span: 717..722,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "num",
        ),
        position: Position {
            line: 40,
            column: 10,
            span: 723..726,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 40,
            column: 12,
            span: 727..728,
        },
    },
    Token {
        kind: Number,
        lexeme: Number(
            HexScientific {
                mantissa: HexDecimal {
                    before_decimal: "01",
                    after_decimal: ".2",
                },
                exponent: "-2",
            },
        ),
        position: Position {
            line: 40,
            column: 0,
            span: 728..737,
        },
    },
]
