---
source: src/main.rs
expression: scanned
input_file: test-data/extra/tables.lua
---
[
    Token {
        kind: Local,
        lexeme: Symbol(
            "local",
        ),
        position: Position {
            line: 1,
            column: 5,
            span: 0..5,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "myTable",
        ),
        position: Position {
            line: 1,
            column: 13,
            span: 6..13,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 1,
            column: 15,
            span: 14..15,
        },
    },
    Token {
        kind: LeftBrace,
        lexeme: Symbol(
            "{",
        ),
        position: Position {
            line: 1,
            column: 17,
            span: 16..17,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "key1",
        ),
        position: Position {
            line: 3,
            column: 9,
            span: 45..49,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 3,
            column: 11,
            span: 50..51,
        },
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"value1\"",
        ),
        position: Position {
            line: 3,
            column: 20,
            span: 52..60,
        },
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        position: Position {
            line: 3,
            column: 21,
            span: 60..61,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "key2",
        ),
        position: Position {
            line: 4,
            column: 9,
            span: 66..70,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 4,
            column: 11,
            span: 71..72,
        },
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "42",
                    after_decimal: "",
                },
            ),
        ),
        position: Position {
            line: 4,
            column: 14,
            span: 72..75,
        },
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        position: Position {
            line: 4,
            column: 15,
            span: 75..76,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "key3",
        ),
        position: Position {
            line: 5,
            column: 9,
            span: 81..85,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 5,
            column: 11,
            span: 86..87,
        },
    },
    Token {
        kind: True,
        lexeme: Symbol(
            "true",
        ),
        position: Position {
            line: 5,
            column: 16,
            span: 88..92,
        },
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        position: Position {
            line: 5,
            column: 17,
            span: 92..93,
        },
    },
    Token {
        kind: LeftBracket,
        lexeme: Symbol(
            "[",
        ),
        position: Position {
            line: 6,
            column: 6,
            span: 98..99,
        },
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"key with spaces\"",
        ),
        position: Position {
            line: 6,
            column: 23,
            span: 99..116,
        },
    },
    Token {
        kind: RightBracket,
        lexeme: Symbol(
            "]",
        ),
        position: Position {
            line: 6,
            column: 24,
            span: 116..117,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 6,
            column: 26,
            span: 118..119,
        },
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"value with spaces\"",
        ),
        position: Position {
            line: 6,
            column: 46,
            span: 120..139,
        },
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        position: Position {
            line: 6,
            column: 47,
            span: 139..140,
        },
    },
    Token {
        kind: LeftBracket,
        lexeme: Symbol(
            "[",
        ),
        position: Position {
            line: 7,
            column: 6,
            span: 145..146,
        },
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "10",
                    after_decimal: "",
                },
            ),
        ),
        position: Position {
            line: 7,
            column: 8,
            span: 145..148,
        },
    },
    Token {
        kind: RightBracket,
        lexeme: Symbol(
            "]",
        ),
        position: Position {
            line: 7,
            column: 9,
            span: 148..149,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 7,
            column: 11,
            span: 150..151,
        },
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"value with numeric key\"",
        ),
        position: Position {
            line: 7,
            column: 36,
            span: 152..176,
        },
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        position: Position {
            line: 7,
            column: 37,
            span: 176..177,
        },
    },
    Token {
        kind: LeftBracket,
        lexeme: Symbol(
            "[",
        ),
        position: Position {
            line: 8,
            column: 6,
            span: 182..183,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "a",
        ),
        position: Position {
            line: 8,
            column: 7,
            span: 183..184,
        },
    },
    Token {
        kind: RightBracket,
        lexeme: Symbol(
            "]",
        ),
        position: Position {
            line: 8,
            column: 8,
            span: 184..185,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 8,
            column: 10,
            span: 186..187,
        },
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"value with variable key\"",
        ),
        position: Position {
            line: 8,
            column: 36,
            span: 188..213,
        },
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        position: Position {
            line: 8,
            column: 37,
            span: 213..214,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "nestedTable",
        ),
        position: Position {
            line: 10,
            column: 16,
            span: 240..251,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 10,
            column: 18,
            span: 252..253,
        },
    },
    Token {
        kind: LeftBrace,
        lexeme: Symbol(
            "{",
        ),
        position: Position {
            line: 10,
            column: 20,
            span: 254..255,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "nestedKey",
        ),
        position: Position {
            line: 11,
            column: 18,
            span: 264..273,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 11,
            column: 20,
            span: 274..275,
        },
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"nestedValue\"",
        ),
        position: Position {
            line: 11,
            column: 34,
            span: 276..289,
        },
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        position: Position {
            line: 11,
            column: 35,
            span: 289..290,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "anotherNestedTable",
        ),
        position: Position {
            line: 12,
            column: 27,
            span: 299..317,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 12,
            column: 29,
            span: 318..319,
        },
    },
    Token {
        kind: LeftBrace,
        lexeme: Symbol(
            "{",
        ),
        position: Position {
            line: 12,
            column: 31,
            span: 320..321,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "foo",
        ),
        position: Position {
            line: 13,
            column: 16,
            span: 334..337,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 13,
            column: 18,
            span: 338..339,
        },
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"bar\"",
        ),
        position: Position {
            line: 13,
            column: 24,
            span: 340..345,
        },
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        position: Position {
            line: 13,
            column: 25,
            span: 345..346,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "hello",
        ),
        position: Position {
            line: 14,
            column: 18,
            span: 359..364,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 14,
            column: 20,
            span: 365..366,
        },
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"world\"",
        ),
        position: Position {
            line: 14,
            column: 28,
            span: 367..374,
        },
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        position: Position {
            line: 14,
            column: 29,
            span: 374..375,
        },
    },
    Token {
        kind: RightBrace,
        lexeme: Symbol(
            "}",
        ),
        position: Position {
            line: 15,
            column: 10,
            span: 384..385,
        },
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        position: Position {
            line: 15,
            column: 11,
            span: 385..386,
        },
    },
    Token {
        kind: RightBrace,
        lexeme: Symbol(
            "}",
        ),
        position: Position {
            line: 16,
            column: 6,
            span: 391..392,
        },
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        position: Position {
            line: 16,
            column: 7,
            span: 392..393,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "array",
        ),
        position: Position {
            line: 19,
            column: 10,
            span: 413..418,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 19,
            column: 12,
            span: 419..420,
        },
    },
    Token {
        kind: LeftBrace,
        lexeme: Symbol(
            "{",
        ),
        position: Position {
            line: 19,
            column: 14,
            span: 421..422,
        },
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "1",
                    after_decimal: "",
                },
            ),
        ),
        position: Position {
            line: 19,
            column: 16,
            span: 422..424,
        },
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        position: Position {
            line: 19,
            column: 17,
            span: 424..425,
        },
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "2",
                    after_decimal: "",
                },
            ),
        ),
        position: Position {
            line: 19,
            column: 19,
            span: 425..427,
        },
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        position: Position {
            line: 19,
            column: 20,
            span: 427..428,
        },
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "3",
                    after_decimal: "",
                },
            ),
        ),
        position: Position {
            line: 19,
            column: 22,
            span: 428..430,
        },
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        position: Position {
            line: 19,
            column: 23,
            span: 430..431,
        },
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "4",
                    after_decimal: "",
                },
            ),
        ),
        position: Position {
            line: 19,
            column: 25,
            span: 431..433,
        },
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        position: Position {
            line: 19,
            column: 26,
            span: 433..434,
        },
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "5",
                    after_decimal: "",
                },
            ),
        ),
        position: Position {
            line: 19,
            column: 28,
            span: 434..436,
        },
    },
    Token {
        kind: RightBrace,
        lexeme: Symbol(
            "}",
        ),
        position: Position {
            line: 19,
            column: 30,
            span: 437..438,
        },
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        position: Position {
            line: 19,
            column: 31,
            span: 438..439,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "mixedTable",
        ),
        position: Position {
            line: 22,
            column: 15,
            span: 470..480,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 22,
            column: 17,
            span: 481..482,
        },
    },
    Token {
        kind: LeftBrace,
        lexeme: Symbol(
            "{",
        ),
        position: Position {
            line: 22,
            column: 19,
            span: 483..484,
        },
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"string value\"",
        ),
        position: Position {
            line: 23,
            column: 23,
            span: 493..507,
        },
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        position: Position {
            line: 23,
            column: 24,
            span: 507..508,
        },
    },
    Token {
        kind: Number,
        lexeme: Number(
            Decimal(
                Decimal {
                    before_decimal: "123",
                    after_decimal: "",
                },
            ),
        ),
        position: Position {
            line: 24,
            column: 12,
            span: 516..520,
        },
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        position: Position {
            line: 24,
            column: 13,
            span: 520..521,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "nested",
        ),
        position: Position {
            line: 25,
            column: 15,
            span: 530..536,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 25,
            column: 17,
            span: 537..538,
        },
    },
    Token {
        kind: LeftBrace,
        lexeme: Symbol(
            "{",
        ),
        position: Position {
            line: 25,
            column: 19,
            span: 539..540,
        },
    },
    Token {
        kind: True,
        lexeme: Symbol(
            "true",
        ),
        position: Position {
            line: 26,
            column: 17,
            span: 553..557,
        },
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        position: Position {
            line: 26,
            column: 18,
            span: 557..558,
        },
    },
    Token {
        kind: False,
        lexeme: Symbol(
            "false",
        ),
        position: Position {
            line: 27,
            column: 18,
            span: 571..576,
        },
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        position: Position {
            line: 27,
            column: 19,
            span: 576..577,
        },
    },
    Token {
        kind: RightBrace,
        lexeme: Symbol(
            "}",
        ),
        position: Position {
            line: 28,
            column: 10,
            span: 586..587,
        },
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        position: Position {
            line: 28,
            column: 11,
            span: 587..588,
        },
    },
    Token {
        kind: RightBrace,
        lexeme: Symbol(
            "}",
        ),
        position: Position {
            line: 29,
            column: 6,
            span: 593..594,
        },
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        position: Position {
            line: 29,
            column: 7,
            span: 594..595,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "key4",
        ),
        position: Position {
            line: 32,
            column: 9,
            span: 639..643,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 32,
            column: 11,
            span: 644..645,
        },
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"value4\"",
        ),
        position: Position {
            line: 32,
            column: 20,
            span: 646..654,
        },
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        position: Position {
            line: 32,
            column: 21,
            span: 654..655,
        },
    },
    Token {
        kind: Identifier,
        lexeme: Symbol(
            "key5",
        ),
        position: Position {
            line: 33,
            column: 9,
            span: 660..664,
        },
    },
    Token {
        kind: Equals,
        lexeme: Symbol(
            "=",
        ),
        position: Position {
            line: 33,
            column: 11,
            span: 665..666,
        },
    },
    Token {
        kind: String,
        lexeme: Symbol(
            "\"value5\"",
        ),
        position: Position {
            line: 33,
            column: 20,
            span: 667..675,
        },
    },
    Token {
        kind: Comma,
        lexeme: Symbol(
            ",",
        ),
        position: Position {
            line: 33,
            column: 21,
            span: 675..676,
        },
    },
    Token {
        kind: RightBrace,
        lexeme: Symbol(
            "}",
        ),
        position: Position {
            line: 34,
            column: 2,
            span: 677..678,
        },
    },
]
